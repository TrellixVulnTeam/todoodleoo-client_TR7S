[{"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/index.js":"1","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Register/Register.js":"2","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Header/Header.js":"3","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Login/Login.js":"4","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Sidebar/Sidebar.js":"5","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Board/Board.js":"6","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Project/Project.js":"7","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/reportWebVitals.js":"8","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Backlog/Backlog.js":"9","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Themes/Themes.js":"10","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Timeboxes/Timeboxes.js":"11","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Task/Task.js":"12","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Forms/AddItem.js":"13","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/API/api.js":"14"},{"size":1217,"mtime":1647932072948,"results":"15","hashOfConfig":"16"},{"size":1617,"mtime":1649362063279,"results":"17","hashOfConfig":"16"},{"size":1957,"mtime":1649489345821,"results":"18","hashOfConfig":"16"},{"size":2031,"mtime":1649489404051,"results":"19","hashOfConfig":"16"},{"size":599,"mtime":1650089820328,"results":"20","hashOfConfig":"16"},{"size":6932,"mtime":1649361108658,"results":"21","hashOfConfig":"16"},{"size":2798,"mtime":1649484786080,"results":"22","hashOfConfig":"16"},{"size":362,"mtime":1630343176115,"results":"23","hashOfConfig":"16"},{"size":1783,"mtime":1648282795704,"results":"24","hashOfConfig":"16"},{"size":3724,"mtime":1648282636659,"results":"25","hashOfConfig":"16"},{"size":4062,"mtime":1648888097169,"results":"26","hashOfConfig":"16"},{"size":6036,"mtime":1648888043742,"results":"27","hashOfConfig":"16"},{"size":3899,"mtime":1650089209448,"results":"28","hashOfConfig":"16"},{"size":1317,"mtime":1649486753610,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"7xjep9",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/index.js",[],["62","63"],"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Register/Register.js",[],"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Header/Header.js",["64"],"import React from 'react';\nimport { getRequest, postRequest, prefix }from './../API/api.js'\n\nimport './header.css';\n\n\nclass Header extends React.Component {\n\tconstructor(props) {\n    super(props);\n    this.state = {isLoggedIn: false, username: false};\n    }\n\n    logout = async () => {\n    \tawait postRequest('/logout')\n    \t.then( (response) => {\n    \t\twindow.location.href = '/login'\n    \t}, (err) => {\n    \t\tconsole.log(err)\n    \t});\n    }\n\n    getUserData = async () => {\n\t\t\ttry {\n\t\t\t\tawait getRequest('/me')\n\t      .then((response) => {\n\t\t\t\t\tif (response.data.user_id !== -1) {  //user is not logged out\n\t\t\t\t\t\tthis.setState({isLoggedIn: true});\n\t\t\t      this.setState({dataReceived: true});\n\t\t\t      this.setState({username: response.data.username});\n\t\t\t\t\t\tconsole.log('logged in user =', response.data.username)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('logged out user')\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err)\n\t\t\t}\n    };\n\n    componentDidMount() {\n      this.getUserData();\n    }\n\n\trender() {\n\t\tconst isLoggedIn = this.state.isLoggedIn;\n\t  let buttons;\n\n    if (isLoggedIn) {\n      buttons = <div>\n      \t\t\t\t\t\t<div className='username'>{this.state.username}</div>\n      \t\t\t\t\t\t<div className='btn btn-light' onClick={this.logout}>Logout</div>\n      \t\t\t\t\t</div>;\n    } else {\n      buttons = <div className='auth-buttons'>\n\t\t      \t\t\t\t<div className='btn btn-primary' onClick={() => window.location.href = '/login'}>Login</div>\n\t\t\t\t\t \t\t\t\t<div className='btn btn-primary' onClick={() => window.location.href = '/register'}>Sign Up</div>\n\t\t      \t\t\t</div>\n    }\n\n\t\treturn <div className='header text-center'>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col-3'>\n\t\t\t\t\t\t\t\t\t<div className='logo' onClick={() => window.location.href = '/'}>Todoodleoo</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='col-6'>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='col-3'>\n\t\t\t\t\t\t\t\t\t{buttons}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t}\n}\n\nexport default Header\n","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Login/Login.js",[],"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Sidebar/Sidebar.js",[],"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Board/Board.js",["65"],"import React from 'react';\nimport 'bootstrap';\nimport './board.css';\nimport { getRequest, postRequest }from './../API/api.js'\nimport Themes from './../Themes/Themes.js'\nimport Backlog from './../Backlog/Backlog.js'\nimport Timeboxes from './../Timeboxes/Timeboxes.js'\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t        dataReceived: false\n\t    };\n\t  }\n\n\taddTask = (taskData) => {\n\t\tconst newTask = {...taskData}\n\t\tthis.setState(prevState => ({\n    \t\ttasks: [newTask, ...this.state.tasks],\n    \t\tvisibleTasks: [newTask, ...this.state.tasks]\n    \t}));\n  \t};\n\n  \taddTimebox = (timebox) => {\n  \t\tthis.setState(prevState => ({\n    \t\ttimeboxes: [...this.state.timeboxes, timebox]\n    \t}));\n  \t}\n\n  \taddTheme = (themeData) => {\n  \t\tthis.setState(prevState => ({\n    \t\tthemes: [...this.state.themes, themeData],\n    \t\t}));\n  \t}\n\n  \tdeleteTask = (taskId) => {\n\t\t\tconst data = {\n  \t\t\ttask_id: taskId,\n  \t\t\tproject_id: this.state.projectId\n  \t\t}\n\t\t\tconst r = postRequest('/delete_task', data)\n  \t\tconst tasks = this.state.tasks.filter(t => t.id !== taskId)\n  \t\tthis.setState(prevState => ({\n\t\t    \ttasks: tasks,\n\t\t    \tvisibleTasks: tasks\n\t\t    }));\n  \t}\n\n  \tdeleteTheme = (themeId) => {\n\t\t\tconst data = {\n  \t\t\ttheme_id: themeId,\n  \t\t\tproject_id: this.state.projectId\n  \t\t}\n\t\t\tpostRequest('/delete_theme', data)\n  \t\tconst themes = this.state.themes.filter(t => t.id !== themeId)\n  \t\tthis.setState(prevState => ({\n\t\t    \tthemes: themes,\n\t\t    }));\n  \t}\n\n  \tfilterByTheme = (theme) => {\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === theme);\n\t  \t\tthis.setState(prevState => ({\n\t\t    \tvisibleTasks: filteredTasks,\n\t\t    \tfiltering: true\n\t\t    }));\n  \t}\n\n  \tclearFilters = () => {\n  \t\tthis.setState({visibleTasks: this.state.tasks, filtering: false})\n  \t}\n\n  \tgetTasks = async (projectId) => {\n\t\t\tconst resp = await getRequest('/get_tasks', `project_id=${projectId}`)\n\t    const timeboxes = resp.data['timeboxes']\n\t    const themes = resp.data['themes']\n\t    this.setState({ tasks: resp.data['tasks'],\n\t    \t\t\t\t\t\t\t\tvisibleTasks: resp.data['tasks'],\n\t    \t\t\t\t\t\t\t\tthemes:themes,\n\t    \t\t\t\t\t\t\t\ttimeboxes: timeboxes\n\t    \t\t\t\t\t\t\t});\n  };\n\n  \tcheckForInProgressTimeboxes = (timeboxes) => {\n  \t\ttimeboxes.forEach(timebox => {\n    \tif (timebox.status === 'In Progress') {\n    \t\tthis.setState({timeboxRedirect: timebox.id, ipTimeboxName: timebox.title})\n    \t}\n    \tthis.setState({dataReceived: true})\n    })\n\n  \t}\n\n   \tasync componentDidMount() {\n   \t\tconst sp = new URLSearchParams(this.props.location.query);\n\t\t\tconst projectId = Number(sp.get(\"projectId\"))\n\t\t\tif (projectId === null || projectId === 0) {\n\t\t\t\tthis.props.history.push('/')\n\t\t\t} else {\n\t\t\t\tthis.setState({projectId: projectId})\n\t\t\t\tawait this.getTasks(projectId);\n\t\t\t\tthis.checkForInProgressTimeboxes(this.state.timeboxes) //why is this function essential for rendrering anything????\n\t\t\t}\n\n    }\n\n    onDragEnd = async (result) => {\n\n  \t\tconst {destination, source, draggableId} = result;\n\n  \t\tif (!destination) {\n  \t\t\t//dragging somewhere non-droppable\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (\n  \t\t\t//dragging and dropping into same place\n  \t\t\tdestination.droppableId === source.droppableId &&\n  \t\t\tdestination.index === source.index\n  \t\t\t) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tconst taskId = Number(draggableId)\n  \t\tconst obj = this.state.tasks.find(o => o.id === taskId);\n\n  \t\tif (destination.droppableId.slice(0,5) === 'Theme') {\n  \t\t\t//landed on a theme, keep timebox the same and update the theme\n  \t\t\tconst themeId = Number(destination.droppableId.slice(6,11))\n\t\t\t\tconst data = {\n\t  \t\t\tproject_id: this.state.projectId,\n\t  \t\t\ttask_id: taskId,\n\t  \t\t\ttheme_id: themeId\n\t\t\t\t}\n\t\t\t\tpostRequest('/update_task_theme', data)\n\n\t  \t\tconst themeObj = this.state.themes.find(o => o.id === themeId)\n\n\t  \t\tobj.theme = themeObj.title\n\t  \t\tobj.theme_color = themeObj.color\n\n  \t\t}\n\n  \t\telse if (destination.droppableId.slice(0,7) === 'Timebox') {\n  \t\t\t//landed in a timebox - get timebox, remove from tasks, update timebox and put back in new position\n  \t\t\tconst timebox = destination.droppableId.slice(8,)\n\t\t\t\tconst data = {\n\t\t\t\t\tproject_id: this.state.projectId,\n\t\t\t\t\ttask_id: taskId,\n\t\t\t\t\tpriority: result.destination.index,\n\t\t\t\t\ttimebox: timebox\n\t\t\t\t}\n\t\t\t\tpostRequest('/update_task', data)\n\n\t  \t\tobj.timebox = timebox\n\n\t\t  \tconst newTasks = this.state.tasks.filter(t => t !== obj)\n\t\t\t\tnewTasks.splice(result.destination.index,0, obj)\n\t\t\t\tthis.setState({\n\t\t    \ttasks: newTasks,\n\t\t    \tvisibleTasks: newTasks\n\t\t    \t})\n\t\t\t}\n\n\t\t\telse if (destination.droppableId === 'Backlog') {\n\t\t\t\t//landed in backlog - remove from source list, add to backlog and update state with all the updated lists\n\t\t\t\tconst data = {\n\t  \t\t\tproject_id: this.state.projectId,\n\t  \t\t\ttask_id: taskId,\n\t  \t\t\tpriority: result.destination.index,\n\t  \t\t\ttimebox: destination.droppableId\n\t  \t\t}\n\t\t\t\tpostRequest('/update_task', data)\n\n\t  \tconst destinationList = this.state.tasks.filter(t => t.timebox === destination.droppableId);\n\t  \tconst otherTasks = this.state.tasks.filter(t => t.timebox !== destination.droppableId);\n\n\t\t\tif (source.droppableId === destination.droppableId) {\n\t\t\t\t//same list so simply take it out and put it bakc in new position\n\t\t\t\tlet backlogTasks = this.state.tasks.filter(t => t.timebox === source.droppableId);\n\t\t\t\tbacklogTasks = this.state.tasks.filter(t => t !== obj);\n\n\t\t\t\tbacklogTasks.splice(result.destination.index,0, obj)\n\t\t\t\tthis.setState({\n\t\t    \ttasks: backlogTasks,\n\t\t    \tvisibleTasks: backlogTasks\n\t\t    \t})\n\n\t\t\t} else {\n\t\t\t\t//moving from timebox to backlog so remove from source, add to backlog at index and all tasks back to state\n\t\t\t\tobj.timebox = 'Backlog'\n\n\t\t\t\tthis.setState({\n\t\t    \ttasks: [...otherTasks, ...destinationList],\n\t\t    \tvisibleTasks: [ ...otherTasks, ...destinationList]\n\t\t    \t})\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log('Unexpected drop destination')\n\t\t}\n\n  \t}\n\n\n\trender() {\n\t\treturn   this.state.dataReceived === true ? (\n\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\t\tonDragEnd = {this.onDragEnd}\n\t\t\t\t\t\t\tonDragUpdate={this.onDragUpdate}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className='board row mt-5' style={{margin: 0}}>\n\t\t\t\t\t\t\t\t<Themes\n\t\t\t\t\t\t\t\t\tthemes={this.state.themes}\n\t\t\t\t\t\t\t\t\tfilterByTheme={this.filterByTheme}\n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t\taddTheme={this.addTheme}\n\t\t\t\t\t\t\t\t\tdeleteTheme={this.deleteTheme}\n\t\t\t\t\t\t\t\t\tfiltering={this.state.filtering}\n\t\t\t\t\t\t\t\t\tclearFilters={this.clearFilters}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Backlog\n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t  tasks={this.state.visibleTasks}\n\t\t\t\t\t\t\t\t  addTask={this.addTask}\n\t\t\t\t\t\t\t\t  deleteTask={this.deleteTask}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Timeboxes\n\t\t\t\t\t\t\t\t\taddTimebox={this.addTimebox}\n\t\t\t\t\t\t\t\t\ttimeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\ttasks={this.state.visibleTasks}\n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t \t</div>\n\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t\t)\n\t\t\t\t\t: <div></div>\n\t}\n}\n\n\nexport { Board }\n","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Project/Project.js",["66"],"import React from 'react';\nimport { getRequest, postRequest, TestPost }from './../API/api.js'\nimport './project.css';\nimport { Link } from 'react-router-dom';\n\n\nconst BoardButton = (props) => {\n\treturn \t<div className='card project-card mt-2 mb-3'>\n\t\t\t\t\t\t<Link className='card-link' to={{pathname: '/board',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tquery: {projectId: props.project.project_id}}}>{props.project.project_title}</Link>\n\t\t\t\t\t</div>\n}\n\nclass Boards extends React.Component {\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t\t<div className='col-6 text-center mx-auto mt-5 border-secondary'>\n\t\t\t\t\t\t\t\t<h2> Your Boards </h2>\n\t\t\t\t\t\t\t\t<div className='container mt-4'>\n\t\t\t\t\t\t\t\t\t{this.props.boards.map( project =>\n\t\t\t\t\t\t\t\t\t\t<BoardButton\n\t\t\t\t\t\t\t\t\t\t\tproject={project}\n\t\t\t\t\t\t\t\t\t\t\tkey={project.project_id}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nclass AddProject extends React.Component {\n\tstate = {title: ''}\n\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault()\n\t\tconst data = {\n\t\t\ttitle: this.state.title\n\t\t}\n\t\tpostRequest('/add_project', data)\n\t\t.then( (response) => {\n\t\t\tthis.props.addProject(response.data.projects)\n\t\t\tthis.setState({title: ''})\n\t\t}, (error) => {\n\t      console.log(error)\n\t    });\n\t}\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\"\n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder='Enter New Project Name'\n\t\t\t\t          required\n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto mb-4 mt-1'>Add Project</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t </div>\n\t}\n}\n\nclass App extends React.Component {\n\tstate = {projects: [], dataReceived: false}\n\n\taddProject = (projectsData) => {\n\t\tthis.setState(prevState => (\n\t\t\t{projects: projectsData}))\n\t}\n\n\tgetProjects = async () => {\n\t\ttry {\n\t\t\tawait getRequest('/get_projects')\n\t    .then((response) => {\n\t\t      const projectsList = response.data['projects']\n\t    \t\tthis.setState({projects: projectsList});\n\t    \t\tthis.setState({dataReceived: true})\n\t\t    }, (error) => {\n\t\t\t\t\tconsole.log(error)\n\t\t    });\n\n\t\t} catch (err) {\n\t\t\tconsole.log(err)\n\t\t\t//window.location = '/login'\n\t\t}\n\n\n  };\n\n  componentDidMount() {\n    this.getProjects();\n  }\n\n\trender() {\n\t\tif (this.state.dataReceived === false){\n\t\t\treturn <div>loading</div>\n\t\t} else {\n\t\t\treturn <div className='projects-list'>\n\t\t\t\t\t\t\t<Boards boards={this.state.projects}/>\n\t\t\t\t\t\t\t<AddProject addProject={this.addProject} />\n\t\t\t\t\t\t </div>\n\n\n\t\t}\n\t}\n}\n\nexport default App;\n","/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/reportWebVitals.js",[],"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Backlog/Backlog.js",[],"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Themes/Themes.js",[],"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Timeboxes/Timeboxes.js",[],"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Task/Task.js",[],"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Forms/AddItem.js",[],"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/API/api.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":35,"nodeType":"73","messageId":"74","endLine":2,"endColumn":41},{"ruleId":"71","severity":1,"message":"75","line":43,"column":10,"nodeType":"73","messageId":"74","endLine":43,"endColumn":11},{"ruleId":"71","severity":1,"message":"76","line":2,"column":35,"nodeType":"73","messageId":"74","endLine":2,"endColumn":43},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'prefix' is defined but never used.","Identifier","unusedVar","'r' is assigned a value but never used.","'TestPost' is defined but never used.","no-global-assign","no-unsafe-negation"]