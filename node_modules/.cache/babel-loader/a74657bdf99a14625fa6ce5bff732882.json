{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport logo from \"./logo.svg\";\nimport './App.css';\n/*\n\nconst CardList = (props) => (\n\t<div>\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\n\t</div>\n);\n\nclass Card extends React.Component {\n\trender() {\n  \tconst profile = this.props;\n  \treturn (\n    \t<div className=\"github-profile\">\n    \t  <img src={profile.avatar_url} />\n        <div className=\"info\">\n          <div className=\"name\">{profile.name}</div>\n          <div className=\"company\">{profile.company}</div>\n        </div>\n    \t</div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n\tstate = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n    \t  <input \n          type=\"text\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"GitHub username\" \n          required \n        />\n        <button>Add card</button>\n    \t</form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  };\n  addNewProfile = (profileData) => {\n  \tthis.setState(prevState => ({\n    \tprofiles: [...prevState.profiles, profileData],\n    }));\n  };\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div className=\"header\">{this.props.title}</div>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n    \t</div>\n    );\n  }\t\n}\n\nReactDOM.render(\n\t<App title=\"The GitHub Cards App\" />,\n  mountNode,\n);\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: props.styling,\n    onClick: props.action,\n    children: props.body\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Button;\n\nclass Task extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: this.props.id,\n      title: this.props.title,\n      status: this.props.status\n    };\n\n    this.markAsDone = () => {\n      this.props.updateStatus(this.state.id, 'Done');\n      this.setState({\n        status: 'Done'\n      });\n      axios.post('/edit_task_status', {\n        id: this.state.id,\n        status: 'Done'\n      });\n    };\n\n    this.markAsInProgress = () => {\n      this.props.updateStatus(this.state.id, 'In Progress');\n      this.setState({\n        status: 'In Progress'\n      });\n      axios.post('/edit_task_status', {\n        id: this.state.id,\n        status: 'In Progress'\n      });\n    };\n\n    this.reopen = () => {\n      this.props.updateStatus(this.state.id, 'To Do');\n      this.setState({\n        status: 'To Do'\n      });\n      axios.post('/edit_task_status', {\n        id: this.state.id,\n        status: 'To Do'\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card m-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: [this.state.title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status badge bg-secondary mx-3\",\n            children: this.state.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), this.state.status === 'To Do' ? /*#__PURE__*/_jsxDEV(Button, {\n          action: this.markAsInProgress,\n          body: \"Start Work\",\n          styling: \"btn btn-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 10\n        }, this) : this.state.status === 'In Progress' ? /*#__PURE__*/_jsxDEV(Button, {\n          action: this.markAsDone,\n          body: \"Mark as Done\",\n          styling: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 10\n        }, this) : this.state.status === 'Done' ? /*#__PURE__*/_jsxDEV(Button, {\n          action: this.reopen,\n          body: \"Reopen\",\n          styling: \"btn btn-secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 10\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allTasks: [],\n      taskSplittingComplete: false\n    };\n\n    this.updateStatus = (id, status) => {\n      const obj = this.state.allTasks.find(o => o.id === id);\n      obj['status'] = status;\n\n      if (status === 'Done') {\n        const newInProgressTasks = this.state.inProgressTasks.filter(task => task != obj);\n        this.setState({\n          inProgressTasks: newInProgressTasks\n        });\n        this.setState({\n          doneTasks: [...this.state.doneTasks, obj]\n        });\n      } else if (status === 'In Progress') {\n        const newToDoTasks = this.state.toDoTasks.filter(task => task != obj);\n        this.setState({\n          toDoTasks: newToDoTasks\n        });\n        this.setState({\n          inProgressTasks: [...this.state.inProgressTasks, obj]\n        });\n      } else if (status === 'To Do') {\n        const newDoneTasks = this.state.doneTasks.filter(task => task != obj);\n        this.setState({\n          doneTasks: newDoneTasks\n        });\n        this.setState({\n          toDoTasks: [...this.state.toDoTasks, obj]\n        });\n      }\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`);\n      this.setState({\n        allTasks: resp.data['tasks']\n      });\n    };\n\n    this.splitTasksByStatus = () => {\n      const doneOnly = this.state.allTasks.filter(task => task.status === 'Done');\n      const inProgressOnly = this.state.allTasks.filter(task => task.status === 'In Progress');\n      const toDoOnly = this.state.allTasks.filter(task => task.status === 'To Do');\n      this.setState({\n        doneTasks: doneOnly\n      });\n      this.setState({\n        inProgressTasks: inProgressOnly\n      });\n      this.setState({\n        toDoTasks: toDoOnly\n      });\n      this.setState({\n        taskSplittingComplete: true\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.getTasks();\n    await this.splitTasksByStatus();\n  }\n\n  render() {\n    //to-do create a component for this column and call that\n    //to-do find out if your taskSplittingComplete is a hack or legit\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-2\",\n          children: this.state.taskSplittingComplete === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 mx-auto w-100\",\n            children: this.state.toDoTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n              updateStatus: this.updateStatus,\n              ...task\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 12\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 10\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-2\",\n          children: this.state.taskSplittingComplete === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 mx-auto w-100\",\n            children: this.state.inProgressTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n              updateStatus: this.updateStatus,\n              ...task\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 12\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 10\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-2\",\n          children: this.state.taskSplittingComplete === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 mx-auto w-100\",\n            children: this.state.doneTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n              updateStatus: this.updateStatus,\n              ...task\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 12\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 10\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      const response = await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      const task = await response.json();\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","axios","Header","Component","render","Button","props","styling","action","body","Task","state","id","title","status","markAsDone","updateStatus","setState","post","markAsInProgress","reopen","TaskList","allTasks","taskSplittingComplete","obj","find","o","newInProgressTasks","inProgressTasks","filter","task","doneTasks","newToDoTasks","toDoTasks","newDoneTasks","getTasks","resp","get","data","splitTasksByStatus","doneOnly","inProgressOnly","toDoOnly","componentDidMount","map","CreateTaskForm","handleSubmit","event","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","JSON","stringify","json","target","value","App","addNewTask","taskData","prevState","tasks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\n\n/*\n\nconst CardList = (props) => (\n\t<div>\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\n\t</div>\n);\n\nclass Card extends React.Component {\n\trender() {\n  \tconst profile = this.props;\n  \treturn (\n    \t<div className=\"github-profile\">\n    \t  <img src={profile.avatar_url} />\n        <div className=\"info\">\n          <div className=\"name\">{profile.name}</div>\n          <div className=\"company\">{profile.company}</div>\n        </div>\n    \t</div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n\tstate = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n    \t  <input \n          type=\"text\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"GitHub username\" \n          required \n        />\n        <button>Add card</button>\n    \t</form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  };\n  addNewProfile = (profileData) => {\n  \tthis.setState(prevState => ({\n    \tprofiles: [...prevState.profiles, profileData],\n    }));\n  };\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div className=\"header\">{this.props.title}</div>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n    \t</div>\n    );\n  }\t\n}\n\nReactDOM.render(\n\t<App title=\"The GitHub Cards App\" />,\n  mountNode,\n);\n\n*/\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nconst Button = (props) => {\n\treturn \t<button className={props.styling} onClick={props.action}>{props.body}</button>\n\n}\n\n\nclass Task extends React.Component {\n\tstate = {id: this.props.id, title: this.props.title, status:this.props.status}\n\tmarkAsDone = () => {\n\t\tthis.props.updateStatus(this.state.id, 'Done')\n    this.setState({status: 'Done'})\n\t\taxios.post('/edit_task_status', {\n\t\t  id: this.state.id,\n\t\t  status: 'Done'\n\t\t});\n\t}\n\n\tmarkAsInProgress = () => {\n\t\tthis.props.updateStatus(this.state.id, 'In Progress')\n    this.setState({status: 'In Progress'})\n\t\taxios.post('/edit_task_status', {\n\t\t  id: this.state.id,\n\t\t  status: 'In Progress'\n\t\t});\n\t}\n\n\treopen = () => {\n\t\tthis.props.updateStatus(this.state.id, 'To Do')\n    this.setState({status: 'To Do'})\n\t\taxios.post('/edit_task_status', {\n\t\t  id: this.state.id,\n\t\t  status: 'To Do'\n\t\t});\n\t}\n\n\trender() {\n\t\treturn <div className='card m-2'>\n\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t<div className='card-title'>\n\t\t\t\t\t\t\t\t\t{this.state.title}\n\t\t\t\t\t\t\t\t\t<span className='status badge bg-secondary mx-3'>{this.state.status}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{ this.state.status === 'To Do' ? (\n\t\t\t\t\t\t\t\t\t<Button action={this.markAsInProgress} body='Start Work' styling='btn btn-success' />\n\t\t\t\t\t\t\t\t\t) : this.state.status === 'In Progress' ? (\n\t\t\t\t\t\t\t\t\t<Button action={this.markAsDone} body='Mark as Done' styling='btn btn-primary'/>\n\t\t\t\t\t\t\t\t\t) : this.state.status === 'Done' ? (\n\t\t\t\t\t\t\t\t\t<Button action={this.reopen} body='Reopen' styling='btn btn-secondary'/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t)\n\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nclass TaskList extends React.Component {\n\tstate = {allTasks : [], taskSplittingComplete: false};\n\n\tupdateStatus = (id, status) => {\n\t\tconst obj = this.state.allTasks.find(o => o.id === id);\n\t\tobj['status'] = status\n\t\tif (status === 'Done') {\n\t\t\tconst newInProgressTasks = this.state.inProgressTasks.filter(task => task != obj)\n\t\t\tthis.setState({inProgressTasks: newInProgressTasks})\n\t\t\tthis.setState({doneTasks: [...this.state.doneTasks, obj]})\n\t\t} else if (status === 'In Progress'){\n\t\t\tconst newToDoTasks = this.state.toDoTasks.filter(task => task != obj)\n\t\t\tthis.setState({toDoTasks: newToDoTasks})\n\t\t\tthis.setState({inProgressTasks: [...this.state.inProgressTasks, obj]})\n\t\t} \n\t\telse if (status === 'To Do'){\n\t\t\tconst newDoneTasks = this.state.doneTasks.filter(task => task != obj)\n\t\t\tthis.setState({doneTasks: newDoneTasks})\n\t\t\tthis.setState({toDoTasks: [...this.state.toDoTasks, obj]})\n\t\t}\n\t}\n\n\tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`);\n    this.setState({ allTasks: resp.data['tasks'] });\n  };\n\n  splitTasksByStatus = () => {\n  \tconst doneOnly = this.state.allTasks.filter(task => task.status === 'Done');\n  \tconst inProgressOnly = this.state.allTasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = this.state.allTasks.filter(task => task.status === 'To Do');\n  \tthis.setState({ doneTasks: doneOnly });\n  \tthis.setState({ inProgressTasks: inProgressOnly });\n  \tthis.setState({ toDoTasks: toDoOnly})\n  \tthis.setState({ taskSplittingComplete: true})\n  }\n  \n  async componentDidMount() {\n    \tawait this.getTasks();\n    \tawait this.splitTasksByStatus()\n\n    }\n\n\trender() {\n\t\t//to-do create a component for this column and call that\n\t\t//to-do find out if your taskSplittingComplete is a hack or legit\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-4'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t{ this.state.taskSplittingComplete === true ? (\n\t\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t\t{this.state.toDoTasks.map(task => \n\t\t\t\t\t\t\t\t\t\t\t<Task key={task.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.updateStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-4'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t{ this.state.taskSplittingComplete === true ? (\n\t\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t\t{this.state.inProgressTasks.map(task => \n\t\t\t\t\t\t\t\t\t\t\t<Task key={task.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-4'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t{ this.state.taskSplittingComplete === true ? (\n\t\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t\t{this.state.doneTasks.map(task => \n\t\t\t\t\t\t\t\t\t\t\t<Task key={task.id} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t}\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    const response = await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    const task = await response.json();\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass App extends React.Component {\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<TaskList />\n\t\t\t\t\t </div>\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}