{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/Planning/Planning.js\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport 'bootstrap';\nimport axios from 'axios';\nimport './planning.css';\nimport Themes from './../Themes/Themes.js';\nimport TasksArea from './../Task/TasksArea.js';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Planning extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addNewTask = taskData => {\n      const newTask = { ...taskData\n      };\n      this.setState(prevState => ({\n        tasks: [newTask, ...this.state.tasks]\n      }));\n    };\n\n    this.addTimebox = timebox => {\n      this.setState(prevState => ({\n        timeboxes: [...this.state.timeboxes, timebox]\n      }));\n    };\n\n    this.addTheme = themeData => {\n      this.setState(prevState => ({\n        themes: [...this.state.themes, themeData]\n      }));\n    };\n\n    this.deleteTask = taskId => {\n      axios.post('/delete_task', {\n        task_id: taskId,\n        project_id: this.state.projectId\n      });\n      const tasks = this.state.tasks.filter(t => t.id !== taskId);\n      this.setState(prevState => ({\n        tasks: tasks\n      }));\n    };\n\n    this.deleteTheme = themeId => {\n      axios.post('/delete_theme', {\n        theme_id: themeId,\n        project_id: this.state.projectId\n      });\n      const themes = this.state.themes.filter(t => t.id !== themeId);\n      this.setState(prevState => ({\n        themes: themes\n      }));\n    };\n\n    this.filterByTheme = theme => {\n      console.log('filtering');\n\n      if (theme === 'clear') {\n        this.setState({\n          tasks: [...this.state.filteredTasks, ...this.state.nonFilteredTasks]\n        });\n      } else {\n        const filteredTasks = this.state.tasks.filter(task => task.theme === theme);\n        const nonFilteredTasks = this.state.tasks.filter(task => task.theme !== theme);\n        this.setState({\n          tasks: filteredTasks,\n          filteredTasks: filteredTasks,\n          nonFilteredTasks: nonFilteredTasks\n        });\n      }\n    };\n\n    this.getTasks = async projectId => {\n      const resp = await axios.get(`/get_tasks?project_id=${projectId}`);\n      const timeboxes = resp.data['timeboxes'];\n      const themes = resp.data['themes'];\n      this.setState({\n        tasks: resp.data['tasks'],\n        themes: themes,\n        timeboxes: timeboxes\n      });\n    };\n\n    this.checkForInProgressTimeboxes = timeboxes => {\n      timeboxes.forEach(timebox => {\n        if (timebox.status === 'In Progress') {\n          this.setState({\n            timeboxRedirect: timebox.id,\n            ipTimeboxName: timebox.title\n          });\n        }\n\n        this.setState({\n          dataReceived: true\n        });\n      });\n    };\n\n    this.onDragUpdate = result => {//make theme bigger and highlighted so you know what you are dragging it into\n    };\n\n    this.onDragEnd = async result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const taskId = Number(draggableId);\n      const obj = this.state.tasks.find(o => o.id === taskId);\n\n      if (destination.droppableId.slice(0, 5) === 'Theme') {\n        const themeId = Number(destination.droppableId.slice(6, 11));\n        axios.post('/update_task_theme', {\n          project_id: this.state.projectId,\n          task_id: taskId,\n          theme_id: themeId\n        });\n        const themeObj = this.state.themes.find(o => o.id === themeId);\n        obj.theme = themeObj.title;\n        obj.theme_color = themeObj.color;\n      } else {\n        axios.post('/update_task', {\n          project_id: this.state.projectId,\n          task_id: taskId,\n          priority: result.destination.index,\n          timebox: destination.droppableId\n        });\n        let sourceList = this.state.tasks.filter(t => t.timebox === source.droppableId);\n        const destinationList = this.state.tasks.filter(t => t.timebox === destination.droppableId);\n        const otherList = this.state.tasks.filter(t => t.timebox !== source.droppableId);\n        const reorderedItem = this.state.tasks.find(t => String(t.id) === result.draggableId);\n        console.log('reorderedItem=', reorderedItem);\n        console.log('sourceList=', sourceList);\n        console.log('destinationList=', destinationList);\n        console.log('otherList=', otherList);\n\n        if (source.droppableId === destination.droppableId) {\n          console.log('a');\n          const newTasks = this.state.tasks.filter(t => t !== obj);\n          newTasks.splice(result.destination.index, 0, obj);\n          this.setState({\n            tasks: newTasks\n          });\n        } else {\n          console.log('b');\n          obj.timebox = destination.droppableId;\n          const newSourceList = sourceList.filter(t => t !== obj);\n          const newDestinationList = destinationList.splice(result.destination.index, 0, obj);\n          this.setState({\n            tasks: [...newSourceList, ...destinationList]\n          });\n        }\n      }\n\n      console.log('updated Tasks List=', this.state.tasks);\n    };\n\n    this.state = {\n      dataReceived: false\n    };\n  }\n\n  async componentDidMount() {\n    const sp = new URLSearchParams(this.props.location.query);\n    const projectId = Number(sp.get(\"projectId\"));\n\n    if (projectId === null || projectId === 0) {\n      this.props.history.push('/');\n    } else {\n      this.setState({\n        projectId: projectId\n      });\n      await this.getTasks(projectId);\n      this.checkForInProgressTimeboxes(this.state.timeboxes);\n    }\n  }\n\n  render() {\n    console.log(this.state.tasks);\n    return this.state.timeboxRedirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/working\",\n        query: {\n          projectId: this.state.projectId,\n          timeboxId: this.state.timeboxRedirect,\n          timeboxName: this.state.ipTimeboxName\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 42\n    }, this) : this.state.dataReceived === true ? /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      onDragUpdate: this.onDragUpdate,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planning-page\",\n        children: [/*#__PURE__*/_jsxDEV(Themes, {\n          themes: this.state.themes,\n          filterByTheme: this.filterByTheme,\n          projectId: this.state.projectId,\n          addTheme: this.addTheme,\n          deleteTheme: this.deleteTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TasksArea, {\n          projectId: this.state.projectId,\n          addTask: this.addNewTask,\n          tasks: this.state.tasks,\n          themes: this.state.themes,\n          allTimeboxes: this.state.timeboxes,\n          deleteTask: this.deleteTask,\n          addTimebox: this.addTimebox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default Planning;","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/Planning/Planning.js"],"names":["React","Redirect","axios","Themes","TasksArea","DragDropContext","Planning","Component","constructor","props","addNewTask","taskData","newTask","setState","prevState","tasks","state","addTimebox","timebox","timeboxes","addTheme","themeData","themes","deleteTask","taskId","post","task_id","project_id","projectId","filter","t","id","deleteTheme","themeId","theme_id","filterByTheme","theme","console","log","filteredTasks","nonFilteredTasks","task","getTasks","resp","get","data","checkForInProgressTimeboxes","forEach","status","timeboxRedirect","ipTimeboxName","title","dataReceived","onDragUpdate","result","onDragEnd","destination","source","draggableId","droppableId","index","Number","obj","find","o","slice","themeObj","theme_color","color","priority","sourceList","destinationList","otherList","reorderedItem","String","newTasks","splice","newSourceList","newDestinationList","componentDidMount","sp","URLSearchParams","location","query","history","push","render","pathname","timeboxId","timeboxName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport 'bootstrap';\nimport axios from 'axios';\nimport './planning.css';\nimport Themes from './../Themes/Themes.js'\nimport TasksArea from './../Task/TasksArea.js'\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nclass Planning extends React.Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t        dataReceived: false\n\t    };\n\t  }\n\n\taddNewTask = (taskData) => {\n\t\tconst newTask = {...taskData}\n\t\tthis.setState(prevState => ({\n    \t\ttasks: [newTask, ...this.state.tasks]\n    \t}));\n  \t};\n\n  \taddTimebox = (timebox) => {\n  \t\tthis.setState(prevState => ({\n    \t\ttimeboxes: [...this.state.timeboxes, timebox]\n    \t}));\n  \t}\n\n  \taddTheme = (themeData) => {\n  \t\tthis.setState(prevState => ({\n    \t\tthemes: [...this.state.themes, themeData],\n    \t\t}));\n  \t}\n\n  \tdeleteTask = (taskId) => {\n  \t\taxios.post('/delete_task', {\n  \t\t\ttask_id: taskId,\n  \t\t\tproject_id: this.state.projectId\n  \t\t})\n  \t\tconst tasks = this.state.tasks.filter(t => t.id !== taskId)\n  \t\tthis.setState(prevState => ({\n\t\t    \ttasks: tasks,\n\t\t    }));\n  \t}\n\n  \tdeleteTheme = (themeId) => {\n  \t\taxios.post('/delete_theme', {\n  \t\t\ttheme_id: themeId,\n  \t\t\tproject_id: this.state.projectId\n  \t\t})\n  \t\tconst themes = this.state.themes.filter(t => t.id !== themeId)\n  \t\tthis.setState(prevState => ({\n\t\t    \tthemes: themes,\n\t\t    }));\n  \t}\n\n  \tfilterByTheme = (theme) => {\n  \t\tconsole.log('filtering')\n  \t\t\tif (theme === 'clear') {\n  \t\t\t\tthis.setState({tasks: [...this.state.filteredTasks, ...this.state.nonFilteredTasks]});\n  \t\t\t} else {\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === theme);\n\t  \t\tconst nonFilteredTasks = this.state.tasks.filter(task => task.theme !== theme);\n\t  \t\tthis.setState({tasks: filteredTasks, filteredTasks: filteredTasks, nonFilteredTasks: nonFilteredTasks});\n\t  \t\t}\t\t\n  \t}\n\n  \tgetTasks = async (projectId) => {\n    const resp = await axios.get(`/get_tasks?project_id=${projectId}`)\n    const timeboxes = resp.data['timeboxes']\n    const themes = resp.data['themes']\n    this.setState({ tasks: resp.data['tasks'], \n    \t\t\t\t\t\t\t\tthemes:themes, \n    \t\t\t\t\t\t\t\ttimeboxes: timeboxes \n    \t\t\t\t\t\t\t});\n  };\n\n  \tcheckForInProgressTimeboxes = (timeboxes) => {\n  \t\ttimeboxes.forEach(timebox => {\n    \tif (timebox.status === 'In Progress') {\n    \t\tthis.setState({timeboxRedirect: timebox.id, ipTimeboxName: timebox.title})\n    \t}\n    \tthis.setState({dataReceived: true})\n    })\n\n  \t}\n\n   \tasync componentDidMount() {\n   \t\tconst sp = new URLSearchParams(this.props.location.query);\n\t\tconst projectId = Number(sp.get(\"projectId\"))\n\t\tif (projectId === null || projectId === 0) {\n\t\t\tthis.props.history.push('/')\n\t\t} else {\n\t\t\tthis.setState({projectId: projectId})\n\t\t\tawait this.getTasks(projectId);\n\t\t\tthis.checkForInProgressTimeboxes(this.state.timeboxes)\n\t\t}\n    \t\n    }\n\n    onDragUpdate = (result) => {\n    \t//make theme bigger and highlighted so you know what you are dragging it into\n    }\n\n    onDragEnd = async (result) => {\n\n  \t\tconst {destination, source, draggableId} = result;\n\n  \t\tif (!destination) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (\n  \t\t\tdestination.droppableId === source.droppableId &&\n  \t\t\tdestination.index === source.index\n  \t\t\t) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tconst taskId = Number(draggableId)\n  \t\tconst obj = this.state.tasks.find(o => o.id === taskId);\n\n  \t\tif (destination.droppableId.slice(0,5) === 'Theme') {\n  \t\t\tconst themeId = Number(destination.droppableId.slice(6,11))\n  \t\t\taxios.post('/update_task_theme', {\n  \t\t\tproject_id: this.state.projectId,\n  \t\t\ttask_id: taskId,\n  \t\t\ttheme_id: themeId\n  \t\t\t})\n\n\t  \t\tconst themeObj = this.state.themes.find(o => o.id === themeId)\n\n\t  \t\tobj.theme = themeObj.title\n\t  \t\tobj.theme_color = themeObj.color\n\n  \t\t} else {\n  \t\t\n\t  \t\t\n\t  \t\t  axios.post('/update_task', {\n\t  \t\t\tproject_id: this.state.projectId,\n\t  \t\t\ttask_id: taskId,\n\t  \t\t\tpriority: result.destination.index,\n\t  \t\t\ttimebox: destination.droppableId\n\t  \t\t})\n\t  \tlet sourceList = this.state.tasks.filter(t => t.timebox === source.droppableId);\n\t  \tconst destinationList = this.state.tasks.filter(t => t.timebox === destination.droppableId);\n\t  \tconst otherList = this.state.tasks.filter(t => t.timebox !== source.droppableId);\n\t\t\tconst reorderedItem = this.state.tasks.find(t => String(t.id) === result.draggableId);\n\t\t\tconsole.log('reorderedItem=', reorderedItem)\n\t\t\tconsole.log('sourceList=', sourceList)\n\t\t\tconsole.log('destinationList=', destinationList)\n\t\t\tconsole.log('otherList=', otherList)\n\t\t\tif (source.droppableId === destination.droppableId) {\n\t\t\t\tconsole.log('a')\n\t\t\t\tconst newTasks = this.state.tasks.filter(t => t !== obj)\n\t\t\t\tnewTasks.splice(result.destination.index,0, obj)\n\t\t\t\tthis.setState({\n\t\t    \ttasks: newTasks\n\t\t    \t})\n\t\t\t\t\n\n\t\t\t} else {\n\t\t\t\tconsole.log('b')\n\t\t\t\tobj.timebox = destination.droppableId\n\n\t\t\t\tconst newSourceList = sourceList.filter(t => t !== obj)\n\t\t\t\tconst newDestinationList = destinationList.splice(result.destination.index,0, obj)\n\t\t\t\tthis.setState({\n\t\t    \ttasks: [...newSourceList, ...destinationList]\n\t\t    \t})\n\t\t\t}\n\t\t}\n\n\t\tconsole.log('updated Tasks List=', this.state.tasks)\n\n\t\t\t\n\t\t\t\n\n  \t\t\t\t\n  \t}\n\n\trender() {\n\t\tconsole.log(this.state.tasks)\n\t\treturn   this.state.timeboxRedirect ? (<Redirect\n\t\t\t\t\t\t\t\t\t\t\t\t  to={{\n\t\t\t\t\t\t\t\t\t\t\t\t    pathname: \"/working\",\n\t\t\t\t\t\t\t\t\t\t\t\t    query: {\n\t\t\t\t\t\t\t\t\t\t\t\t    \tprojectId: this.state.projectId, \n\t\t\t\t\t\t\t\t\t\t\t\t    \ttimeboxId: this.state.timeboxRedirect,\n\t\t\t\t\t\t\t\t\t\t\t\t    \ttimeboxName: this.state.ipTimeboxName\n\t\t\t\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t\t\t\t  }}\n\t\t\t\t\t\t\t\t\t\t\t\t/>) : \n\t\t\t\t\t\tthis.state.dataReceived === true ? (\n\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\t\tonDragEnd = {this.onDragEnd}\n\t\t\t\t\t\t\tonDragUpdate={this.onDragUpdate}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className='planning-page'>\n\t\t\t\t\t\t\t\t<Themes \n\t\t\t\t\t\t\t\t\tthemes={this.state.themes} \n\t\t\t\t\t\t\t\t\tfilterByTheme={this.filterByTheme} \n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t\taddTheme={this.addTheme}\n\t\t\t\t\t\t\t\t\tdeleteTheme={this.deleteTheme}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<TasksArea \n\t\t\t\t\t\t\t\t  projectId={this.state.projectId}\n\t\t\t\t\t\t\t\t  addTask={this.addNewTask}\n\t\t\t\t\t\t\t\t  tasks={this.state.tasks} \n\t\t\t\t\t\t\t\t\tthemes={this.state.themes} \n\t\t\t\t\t\t\t\t\tallTimeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\tdeleteTask={this.deleteTask}\n\t\t\t\t\t\t\t\t\taddTimebox={this.addTimebox}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</DragDropContext> \n\t\t\t\t\t\t)\n\t\t\t\t\t: <div></div>\n\t}\n}\n\n\nexport default Planning;\n"]},"metadata":{},"sourceType":"module"}