{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddTheme extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.addTheme = async event => {\n      await axios.post('/add_theme', {\n        title: this.state.title\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-theme-form\",\n      onSubmit: this.addTheme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control form-control-sm m-2\",\n          type: \"text\",\n          value: this.state.title,\n          onChange: event => this.setState({\n            title: event.target.value\n          }),\n          placeholder: \"Add New theme\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Theme extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-button\",\n      onClick: () => this.props.filterByStatus(this.props.themeTitle),\n      style: {\n        backgroundColor: this.props.color\n      },\n      children: this.props.themeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass ThemeRow extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.props.themes !== [] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [this.props.themes.map(theme => /*#__PURE__*/_jsxDEV(Theme, {\n          themeTitle: theme.title,\n          color: theme.color,\n          filterByStatus: this.props.filterByStatus\n        }, theme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(AddTheme, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TasksColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changePriority = async (task_id, priority) => {\n      const resp = await axios.post('/update_priority', {\n        task_id: task_id,\n        priority: priority\n      });\n      await this.setState({\n        tasks: resp.data['tasks']\n      });\n    };\n  }\n\n  render() {\n    //const tasks = [...this.props.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mx-auto w-100\",\n          children: this.props.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n            last: task.priority === this.props.tasks.length - 1 ? true : false,\n            updateStatus: this.props.updateStatus,\n            changePriority: this.changePriority,\n            themes: this.props.themes,\n            ...task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.doneOnly = this.props.tasks.filter(task => task.status === 'Done');\n    this.inProgressOnly = this.props.tasks.filter(task => task.status === 'In Progress');\n    this.toDoOnly = this.props.tasks.filter(task => task.status === 'To Do');\n  }\n\n  componentDidMount() {\n    this.taskSplittingComplete = true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TasksColumn, {\n          tasks: this.toDoOnly,\n          updateStatus: this.props.updateStatus,\n          themes: this.props.themes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n          tasks: this.inProgressOnly,\n          updateStatus: this.props.updateStatus,\n          themes: this.props.themes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n          tasks: this.DoneOnly,\n          updateStatus: this.props.updateStatus,\n          themes: this.props.themes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto mb-4\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data_received: false\n    };\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n\n    this.filterByStatus = status => {\n      const filteredTasks = this.state.tasks.filter(task => task.theme === status);\n      this.setState({\n        tasks: filteredTasks\n      });\n      console.log('xyz');\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`);\n      await this.setState({\n        tasks: resp.data['tasks'],\n        themes: resp.data['themes']\n      });\n      this.setState({\n        data_received: true\n      });\n    };\n\n    this.updateStatus = (id, new_status) => {\n      this.setState({\n        tasks: ['abc']\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.getTasks();\n  }\n\n  render() {\n    return this.state.data_received === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ThemeRow, {\n        filterByStatus: this.filterByStatus,\n        themes: this.state.themes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: this.state.tasks,\n        themes: this.state.themes,\n        updateStatus: this.updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","axios","Task","AddTheme","Component","state","title","addTheme","event","post","render","setState","target","value","Theme","props","filterByStatus","themeTitle","backgroundColor","color","ThemeRow","themes","map","theme","id","TasksColumn","changePriority","task_id","priority","resp","tasks","data","task","length","updateStatus","TaskList","doneOnly","filter","status","inProgressOnly","toDoOnly","componentDidMount","taskSplittingComplete","DoneOnly","CreateTaskForm","handleSubmit","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","Header","App","data_received","addNewTask","taskData","prevState","filteredTasks","console","log","getTasks","get","new_status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js'\n\nclass AddTheme extends React.Component {\n\tstate = {title: ''}\n\n\taddTheme = async (event) => {\n\t\tawait axios.post('/add_theme', {\n\t\t  title: this.state.title\n\t\t});\n\t}\n\n\trender() {\n\t\treturn <form className='add-theme-form' onSubmit={this.addTheme}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-sm m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"Add New theme\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t\t\t </form>\n\t}\n}\n\nclass Theme extends React.Component {\n\trender() {\n\t\treturn <div className='theme-button' onClick = {() => this.props.filterByStatus(this.props.themeTitle)} style={{backgroundColor: this.props.color}}>{this.props.themeTitle}</div>\n\t}\n}\n\nclass ThemeRow extends React.Component {\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t\t\t{this.props.themes !== [] ?  (\n\t\t\t\t\t\t\t\t <div className='col-12'>\n\t\t\t\t\t\t\t\t\t{this.props.themes.map(theme => \n\t\t\t\t\t\t\t\t\t\t<Theme key={theme.id} themeTitle={theme.title} color={theme.color} filterByStatus={this.props.filterByStatus}/>)}\n\t\t\t\t\t\t\t\t\t\t<AddTheme />\n\t\t\t\t\t\t\t\t </div> )\n\t\t\t\t\t\t\t\t: <div></div> }\t\t\t\t\t\t \t\n\t\t\t\t\t </div>\n\n\t}\n\t\t\t\t\t\n}\n\nclass TasksColumn extends React.Component {\n\n\tchangePriority = async (task_id, priority) => {\n\t\tconst resp = await axios.post('/update_priority', {\n\t\t\ttask_id: task_id,\n\t\t\tpriority: priority\n\t\t\t});\n\t\t\tawait this.setState({tasks: resp.data['tasks']})\n\t\t}\t\n\n\trender() {\n\t\t\n\t\t//const tasks = [...this.props.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n\t\treturn <div className='col-4'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t{this.props.tasks.map(task => \n\t\t\t\t\t\t\t\t\t\t<Task key={task.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast={task.priority === this.props.tasks.length -1 ? true : false}\n\t\t\t\t\t\t\t\t\t\t \t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nclass TaskList extends React.Component {\n\n \n  \tdoneOnly = this.props.tasks.filter(task => task.status === 'Done');\n \t\tinProgressOnly = this.props.tasks.filter(task => task.status === 'In Progress'); \n  \ttoDoOnly = this.props.tasks.filter(task => task.status === 'To Do');\n\n  \t\n  \n  \n  componentDidMount() {\n    \tthis.taskSplittingComplete = true;\n\n    }\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<TasksColumn tasks={this.toDoOnly}  updateStatus={this.props.updateStatus} themes={this.props.themes}/>\n\t\t\t\t\t\t<TasksColumn tasks={this.inProgressOnly}  updateStatus={this.props.updateStatus} themes={this.props.themes}/>\n\t\t\t\t\t\t<TasksColumn tasks={this.DoneOnly}  updateStatus={this.props.updateStatus} themes={this.props.themes}/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t</div>\n\n\t}\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto mb-4'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass App extends React.Component {\n\t\tstate = {data_received:false}\n\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n  \tfilterByStatus = (status) => {\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === status);\n\t  \t\tthis.setState({tasks: filteredTasks})\n\t  \t\tconsole.log('xyz')\n  \t}\n\n  \tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`);\n    await this.setState({ tasks: resp.data['tasks'], themes:resp.data['themes'] });\n    this.setState({data_received: true})\n  };\n\n  \tupdateStatus = (id, new_status) => {\n  \t\tthis.setState({tasks: ['abc']})\n  \t}\n\n\n  \n\n   \tasync componentDidMount() {\n    \tawait this.getTasks();\n    }\n\n\trender() {\n\n\t\treturn this.state.data_received === true ? (\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<ThemeRow filterByStatus={this.filterByStatus} themes={this.state.themes}/>\n\t\t\t\t\t\t<TaskList tasks={this.state.tasks} themes={this.state.themes} updateStatus={this.updateStatus}/>\n\t\t\t\t\t </div> )\n\t\t\t\t\t: <div></div>\n\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}