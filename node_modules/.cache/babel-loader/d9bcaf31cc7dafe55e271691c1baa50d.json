{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport logo from \"./logo.svg\";\nimport './App.css';\n/*\n\nconst CardList = (props) => (\n\t<div>\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\n\t</div>\n);\n\nclass Card extends React.Component {\n\trender() {\n  \tconst profile = this.props;\n  \treturn (\n    \t<div className=\"github-profile\">\n    \t  <img src={profile.avatar_url} />\n        <div className=\"info\">\n          <div className=\"name\">{profile.name}</div>\n          <div className=\"company\">{profile.company}</div>\n        </div>\n    \t</div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n\tstate = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n    \t  <input \n          type=\"text\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"GitHub username\" \n          required \n        />\n        <button>Add card</button>\n    \t</form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  };\n  addNewProfile = (profileData) => {\n  \tthis.setState(prevState => ({\n    \tprofiles: [...prevState.profiles, profileData],\n    }));\n  };\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div className=\"header\">{this.props.title}</div>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n    \t</div>\n    );\n  }\t\n}\n\nReactDOM.render(\n\t<App title=\"The GitHub Cards App\" />,\n  mountNode,\n);\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-success\",\n    onClick: props.action,\n    children: \"Mark as Done\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Button;\n\nclass Task extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: this.props.id,\n      title: this.props.title,\n      status: this.props.status\n    };\n\n    this.markAsDone = () => {\n      console.log('marking this task as done', this.state.id);\n      this.setState({\n        status: 'Done'\n      }); //fire off post to update it\n      //also need to update state of this task in parent\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card m-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: [this.state.title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status badge bg-secondary mx-3\",\n            children: this.state.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), this.state.status == 'To Do' ? /*#__PURE__*/_jsxDEV(Button, {\n          action: this.markAsDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 10\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n      this.props.onSubmit(resp.data);\n      this.setState({\n        userName: ''\n      });\n    };\n  }\n\n  render() {\n    console.log('xxxx', this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto\",\n        children: this.state.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, { ...task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const data = {\n        title: this.state.title\n      };\n      const response = await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      const task = await response.json();\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","useState","useEffect","axios","Header","Component","render","Button","props","action","Task","state","id","title","status","markAsDone","console","log","setState","TaskList","userName","handleSubmit","event","preventDefault","resp","get","onSubmit","data","tasks","map","task","CreateTaskForm","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","json","target","value","App","addNewTask","taskData","prevState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\n\n/*\n\nconst CardList = (props) => (\n\t<div>\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\n\t</div>\n);\n\nclass Card extends React.Component {\n\trender() {\n  \tconst profile = this.props;\n  \treturn (\n    \t<div className=\"github-profile\">\n    \t  <img src={profile.avatar_url} />\n        <div className=\"info\">\n          <div className=\"name\">{profile.name}</div>\n          <div className=\"company\">{profile.company}</div>\n        </div>\n    \t</div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n\tstate = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n    \t  <input \n          type=\"text\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"GitHub username\" \n          required \n        />\n        <button>Add card</button>\n    \t</form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  };\n  addNewProfile = (profileData) => {\n  \tthis.setState(prevState => ({\n    \tprofiles: [...prevState.profiles, profileData],\n    }));\n  };\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div className=\"header\">{this.props.title}</div>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n    \t</div>\n    );\n  }\t\n}\n\nReactDOM.render(\n\t<App title=\"The GitHub Cards App\" />,\n  mountNode,\n);\n\n*/\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nconst Button = (props) => {\n\treturn \t<button className='btn btn-success' onClick={props.action}>Mark as Done</button>\n\n}\n\n\nclass Task extends React.Component {\n\tstate = {id: this.props.id, title: this.props.title, status:this.props.status}\n\tmarkAsDone = () => {\n\t\tconsole.log('marking this task as done', this.state.id)\n    this.setState({status: 'Done'})\n    //fire off post to update it\n\t\t//also need to update state of this task in parent\n\t}\n\trender() {\n\t\tconsole.log(this.state)\n\t\treturn <div className='card m-2'>\n\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t<div className='card-title'>\n\t\t\t\t\t\t\t\t\t{this.state.title}\n\t\t\t\t\t\t\t\t\t<span className='status badge bg-secondary mx-3'>{this.state.status}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{ this.state.status == 'To Do' ? (\n\t\t\t\t\t\t\t\t\t<Button action={this.markAsDone}/>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t)\n\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nclass TaskList extends React.Component {\n    state = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  }\n  \n\n\n\trender() {\n\t\t\n\t\t\n    console.log('xxxx',  this.state)\n\t\treturn <div className='row mt-2'>\n\t\t\t\t\t\t<div className='col-6 mx-auto'>\n\t\t\t\t\t\t\t{this.state.tasks.map(task => <Task key={task.id} {...task}/>)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t </div>\n\t}\n}\t\t\t\t\t\t\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const data = {title: this.state.title}\n    const response = await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    const task = await response.json();\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass App extends React.Component {\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<TaskList />\n\t\t\t\t\t </div>\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}