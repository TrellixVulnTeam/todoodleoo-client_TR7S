{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/Working/Working.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport Themes from './Themes/Themes.js';\nimport ModeSwitcher from './ModeSwitcher.js';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CTA = props => {\n  if (props.taskStatus === 'To Do') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-primary\",\n      onClick: () => props.changeStatus('In Progress'),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this);\n  } else if (props.taskStatus === 'In Progress') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-success\",\n      onClick: () => props.changeStatus('Done'),\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-warning\",\n      onClick: () => props.changeStatus('To Do'),\n      children: \"Actually, I'm Not Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this);\n  }\n};\n\n_c = CTA;\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeStatus = targetStatus => {\n      axios.post('/update_task_status', {\n        task_id: this.props.task.id,\n        target_status: targetStatus\n      });\n      this.setState({\n        status: targetStatus\n      });\n    };\n\n    this.state = { ...this.props.task\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-75 mx-auto mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: this.props.task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cta-container\",\n          children: /*#__PURE__*/_jsxDEV(CTA, {\n            taskStatus: this.state.status,\n            changeStatus: this.changeStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Tasks extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: this.props.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Working extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getTodayTasks = async projectId => {\n      const resp = await axios.get(`/get_tasks?project_id=${projectId}`);\n      const tasks = resp.data.tasks;\n      const todayTasks = tasks.filter(task => task.timeboxes[0] == 'To Do Today');\n      this.setState({\n        tasks: todayTasks\n      });\n    };\n\n    const path = this.props.location.pathname;\n\n    const _projectId = Number(path.slice(9, 13));\n\n    this.getTodayTasks(_projectId).then(this.state = {\n      data_received: true,\n      projectId: _projectId,\n      tasks: []\n    });\n  }\n\n  render() {\n    if (this.state.data_received === false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ModeSwitcher, {\n          projectId: this.state.projectId,\n          mode: 'working'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row working-page\",\n          children: /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: this.state.tasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }, this);\n    }\n  }\n\n}\n\nexport default Working;\n\nvar _c;\n\n$RefreshReg$(_c, \"CTA\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/Working/Working.js"],"names":["React","axios","Themes","ModeSwitcher","DragDropContext","Droppable","Draggable","Link","CTA","props","taskStatus","changeStatus","Task","Component","constructor","targetStatus","post","task_id","task","id","target_status","setState","status","state","render","title","Tasks","tasks","map","Working","getTodayTasks","projectId","resp","get","data","todayTasks","filter","timeboxes","path","location","pathname","Number","slice","then","data_received"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport Themes from './Themes/Themes.js'\nimport ModeSwitcher from './ModeSwitcher.js'\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Link } from 'react-router-dom';\n\nconst CTA = (props) => {\n\tif (props.taskStatus === 'To Do') {\n\t\treturn <div className='btn btn-primary' onClick = {() => props.changeStatus('In Progress')}>Start</div>\n\t} else if ( props.taskStatus === 'In Progress') {\n\t\treturn <div className='btn btn-success' onClick = {() => props.changeStatus('Done')}>Complete</div>\n\t} else {\n\t\treturn <div className='btn btn-warning' onClick = {() => props.changeStatus('To Do')}>Actually, I'm Not Done</div>\n\t}\n}\n\nclass Task extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n    this.state = {...this.props.task};\n  }\n\n\tchangeStatus = (targetStatus) => {\n\t\taxios.post('/update_task_status', {\n\t\t\ttask_id: this.props.task.id,\n\t\t\ttarget_status: targetStatus\n\t\t})\n\t\tthis.setState({status: targetStatus})\n\t\t\n\t\t}\n\n\trender() {\n\t\treturn <div className='card w-75 mx-auto mt-2'>\n\t\t\t\t<div className='card-body'>\n\t\t\t\t\t<div className='card-title'> \n\t\t\t\t\t\t{this.props.task.title}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='cta-container'>\n\t\t\t\t\t\t\t<CTA taskStatus={this.state.status} changeStatus={this.changeStatus} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t   </div>\n\t}\n}\n\nclass Tasks extends React.Component {\n\trender() {\n\t\treturn <div className='col-12'>\n\t\t\t{this.props.tasks.map(task => \n\t\t\t\t\t\t\t\t<Task task={task}/>)}\n\t\t\t\n\t\t\t  </div>\n\t}\n}\n\nclass Working extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n\n    const path = this.props.location.pathname\n\tconst projectId = Number(path.slice(9,13))\n\tthis.getTodayTasks(projectId).then(\n\tthis.state = {data_received: true, projectId: projectId, tasks: []})\n  }\n\n  \tgetTodayTasks = async (projectId) => {\n  \t\tconst resp = await axios.get(`/get_tasks?project_id=${projectId}`)\n  \t\tconst tasks = resp.data.tasks\n  \t\tconst todayTasks = tasks.filter(task => task.timeboxes[0] == 'To Do Today')\n  \t\tthis.setState({tasks: todayTasks})\n  \t}\n\n\trender() {\n\t\tif (this.state.data_received === false) {\n\t\t\treturn<div></div>\n\t\t}\n\t\telse {\n\t\t\treturn \t<div>\n\t\t\t\t\t\t<ModeSwitcher projectId={this.state.projectId} mode={'working'}/>\n\t\t\t\t\t\t<div className='row working-page'>\n\t\t\t\t\t\t\t<Tasks tasks={this.state.tasks} />\n\t\t\t\t\t\t</div>\n\t\t\t  \t\t</div>\n\t\t\t}\n\t}\n}\n\nexport default Working"]},"metadata":{},"sourceType":"module"}