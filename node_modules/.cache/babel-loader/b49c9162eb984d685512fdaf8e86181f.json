{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap';\nimport logo from \"./logo.svg\";\nimport './App.css';\n/*function App() {\n\tconst [currentTime, setCurrentTime] = useState(0);\n\n\tuseEffect(() => {\n\t\tfetch('/time').then(res => res.json()).then(data => {\n\t\t\tsetCurrentTime(data.time);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\n\t\t\t\t... no changes in this part ...\n\n\t\t\t\t<p>The current time is {currentTime}.</p>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nclass Form extends React.Component {\n\tstate = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n    \t  <input \n          type=\"text\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"GitHub username\" \n          required \n        />\n        <button>Add card</button>\n    \t</form>\n    );\n<div>\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\n\t</div>\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Task extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-25 mb-2\",\n      children: this.props.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"I am the Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), this.props.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, { ...task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 37\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleAddTask = async event => {\n      event.preventDefault();\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: this.state.title\n        })\n      };\n      const response = await fetch('/add_task', requestOptions);\n      const data = await response.json();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleAddTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.title,\n        onChange: event => this.setState({\n          title: event.target.value\n        }),\n        placeholder: \"Task Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/get_tasks').then(response => response.json()).then(data => console.log('This is your data', data));\n    this.setState({\n      tasks: data['tasks']\n    });\n  }\n\n  render() {\n    const tasks = [{\n      id: 1,\n      body: 'do something'\n    }, {\n      id: 2,\n      body: 'do nothing'\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","useState","useEffect","Task","Component","render","props","body","TaskList","tasks","map","task","id","CreateTaskForm","state","title","handleAddTask","event","preventDefault","requestOptions","method","headers","JSON","stringify","response","fetch","data","json","setState","target","value","Header","App","componentDidMount","then","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap';\nimport logo from './logo.svg';\nimport './App.css';\n\n/*function App() {\n\tconst [currentTime, setCurrentTime] = useState(0);\n\n\tuseEffect(() => {\n\t\tfetch('/time').then(res => res.json()).then(data => {\n\t\t\tsetCurrentTime(data.time);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\n\t\t\t\t... no changes in this part ...\n\n\t\t\t\t<p>The current time is {currentTime}.</p>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nclass Form extends React.Component {\n\tstate = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n    \t  <input \n          type=\"text\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"GitHub username\" \n          required \n        />\n        <button>Add card</button>\n    \t</form>\n    );\n<div>\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\n\t</div>\n*/\n\nclass Task extends React.Component {\n\trender() {\n\t\treturn <div className='card w-25 mb-2'>{this.props.body}</div>\n\t}\n}\n\nclass TaskList extends React.Component {\n\trender() {\n\t\treturn <div>\n\t\t\t\t\t\t<h5>I am the Task List</h5>\n\t\t\t\t\t\t{this.props.tasks.map(task => <Task key={task.id} {...task}/>)}\n\t\t\t\t\t </div>\n\t}\n}\t\t\t\t\t\t\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleAddTask = async (event) => {\n\t\t\tevent.preventDefault();\n\t\t\tconst requestOptions = {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify({ title: this.state.title })\n\t\t\t\t\t};\n\t\t\tconst response = await fetch('/add_task', requestOptions);\n\t\t\tconst data = await response.json();\n\t\t};\n\trender () {\n\t\treturn <form onSubmit={this.handleAddTask}>\n\t\t\t\t\t\t<input \n\t\t          type=\"text\" \n\t\t          value={this.state.title}\n\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t          placeholder=\"Task Name\" \n\t\t          required \n\t\t        />\n\t\t\t\t\t\t<button className='btn btn-primary'>Add Task</button>\n\t\t\t\t\t </form>\n\t}\n}\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='header'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass App extends React.Component {\n\tstate = {tasks: []}\n\tcomponentDidMount() {\n    fetch('/get_tasks')\n      .then((response) => response.json())\n      .then((data) => console.log('This is your data', data));\n      this.setState({ tasks: data['tasks'] });\n\t\t};\n\trender() {\n\t\tconst tasks = [{id: 1, body: 'do something'}, {id: 2, body: 'do nothing'}]\n\t\treturn <div>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm />\n\t\t\t\t\t\t<TaskList tasks={tasks}/>\n\t\t\t\t\t </div>\n\t}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}