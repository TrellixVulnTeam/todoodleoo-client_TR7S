{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Board/Board.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport './board.css';\nimport { getRequest, postRequest } from './../API/api.js';\nimport Themes from './../Themes/Themes.js';\nimport Backlog from './../Backlog/Backlog.js';\nimport Timeboxes from './../Timeboxes/Timeboxes.js';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addTask = taskData => {\n      const newTask = { ...taskData\n      };\n      this.setState(prevState => ({\n        tasks: [newTask, ...this.state.tasks],\n        visibleTasks: [newTask, ...this.state.tasks]\n      }));\n    };\n\n    this.editTask = taskData => {\n      console.log(taskData);\n      const newTask = { ...taskData\n      };\n      console.log(newTask);\n      console.log(visibleTasks);\n      this.setState(prevState => ({\n        tasks: [newTask, ...this.state.tasks],\n        visibleTasks: [newTask, ...this.state.tasks]\n      }));\n    };\n\n    this.addTimebox = timebox => {\n      this.setState(prevState => ({\n        timeboxes: [...this.state.timeboxes, timebox]\n      }));\n    };\n\n    this.addTheme = themeData => {\n      this.setState(prevState => ({\n        themes: [...this.state.themes, themeData]\n      }));\n    };\n\n    this.deleteTask = taskId => {\n      const data = {\n        task_id: taskId,\n        project_id: this.state.projectId\n      };\n      postRequest('/delete_task', data);\n      const tasks = this.state.tasks.filter(t => t.id !== taskId);\n      this.setState(prevState => ({\n        tasks: tasks,\n        visibleTasks: tasks\n      }));\n    };\n\n    this.deleteTheme = themeId => {\n      const data = {\n        theme_id: themeId,\n        project_id: this.state.projectId\n      };\n      postRequest('/delete_theme', data);\n      const themes = this.state.themes.filter(t => t.id !== themeId);\n      this.setState(prevState => ({\n        themes: themes\n      }));\n    };\n\n    this.filterByTheme = theme => {\n      const filteredTasks = this.state.tasks.filter(task => task.theme === theme);\n      this.setState(prevState => ({\n        visibleTasks: filteredTasks,\n        filtering: true\n      }));\n    };\n\n    this.clearFilters = () => {\n      this.setState({\n        visibleTasks: this.state.tasks,\n        filtering: false\n      });\n    };\n\n    this.getTasks = async projectId => {\n      const resp = await getRequest('/get_tasks', `project_id=${projectId}`);\n      const timeboxes = resp.data['timeboxes'];\n      const themes = resp.data['themes'];\n      this.setState({\n        tasks: resp.data['tasks'],\n        visibleTasks: resp.data['tasks'],\n        themes: themes,\n        timeboxes: timeboxes\n      });\n    };\n\n    this.checkForInProgressTimeboxes = timeboxes => {\n      timeboxes.forEach(timebox => {\n        if (timebox.status === 'In Progress') {\n          this.setState({\n            timeboxRedirect: timebox.id,\n            ipTimeboxName: timebox.title\n          });\n        }\n\n        this.setState({\n          dataReceived: true\n        });\n      });\n    };\n\n    this.onDragEnd = async result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        //dragging somewhere non-droppable\n        return;\n      }\n\n      if ( //dragging and dropping into same place\n      destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const taskId = Number(draggableId);\n      const obj = this.state.tasks.find(o => o.id === taskId);\n\n      if (destination.droppableId.slice(0, 5) === 'Theme') {\n        //landed on a theme, keep timebox the same and update the theme\n        const themeId = Number(destination.droppableId.slice(6, 11));\n        const data = {\n          project_id: this.state.projectId,\n          task_id: taskId,\n          theme_id: themeId\n        };\n        postRequest('/update_task_theme', data);\n        const themeObj = this.state.themes.find(o => o.id === themeId);\n        obj.theme = themeObj.title;\n        obj.theme_color = themeObj.color;\n      } else if (destination.droppableId.slice(0, 7) === 'Timebox') {\n        //landed in a timebox - get timebox, remove from tasks, update timebox and put back in new position\n        const timebox = destination.droppableId.slice(8);\n        const data = {\n          project_id: this.state.projectId,\n          task_id: taskId,\n          priority: result.destination.index,\n          timebox: timebox\n        };\n        postRequest('/update_task', data);\n        obj.timebox = timebox;\n        const newTasks = this.state.tasks.filter(t => t !== obj);\n        newTasks.splice(result.destination.index, 0, obj);\n        this.setState({\n          tasks: newTasks,\n          visibleTasks: newTasks\n        });\n      } else if (destination.droppableId === 'Backlog') {\n        //landed in backlog - remove from source list, add to backlog and update state with all the updated lists\n        const data = {\n          project_id: this.state.projectId,\n          task_id: taskId,\n          priority: result.destination.index,\n          timebox: destination.droppableId\n        };\n        postRequest('/update_task', data);\n        const destinationList = this.state.tasks.filter(t => t.timebox === destination.droppableId);\n        const otherTasks = this.state.tasks.filter(t => t.timebox !== destination.droppableId);\n\n        if (source.droppableId === destination.droppableId) {\n          //same list so simply take it out and put it bakc in new position\n          let backlogTasks = this.state.tasks.filter(t => t.timebox === source.droppableId);\n          backlogTasks = this.state.tasks.filter(t => t !== obj);\n          backlogTasks.splice(result.destination.index, 0, obj);\n          this.setState({\n            tasks: backlogTasks,\n            visibleTasks: backlogTasks\n          });\n        } else {\n          //moving from timebox to backlog so remove from source, add to backlog at index and all tasks back to state\n          obj.timebox = 'Backlog';\n          this.setState({\n            tasks: [...otherTasks, ...destinationList],\n            visibleTasks: [...otherTasks, ...destinationList]\n          });\n        }\n      } else {\n        console.log('Unexpected drop destination');\n      }\n    };\n\n    this.state = {\n      dataReceived: false\n    };\n  }\n\n  async componentDidMount() {\n    const sp = new URLSearchParams(this.props.location.query);\n    const projectId = Number(sp.get(\"projectId\"));\n\n    if (projectId === null || projectId === 0) {\n      this.props.history.push('/');\n    } else {\n      this.setState({\n        projectId: projectId\n      });\n      await this.getTasks(projectId);\n      this.checkForInProgressTimeboxes(this.state.timeboxes); //why is this function essential for rendrering anything????\n    }\n  }\n\n  render() {\n    return this.state.dataReceived === true ? /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      onDragUpdate: this.onDragUpdate,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board row mt-5\",\n        style: {\n          margin: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Themes, {\n          themes: this.state.themes,\n          filterByTheme: this.filterByTheme,\n          projectId: this.state.projectId,\n          addTheme: this.addTheme,\n          deleteTheme: this.deleteTheme,\n          filtering: this.state.filtering,\n          clearFilters: this.clearFilters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Backlog, {\n          projectId: this.state.projectId,\n          tasks: this.state.visibleTasks,\n          addTask: this.addTask,\n          deleteTask: this.deleteTask,\n          themes: this.state.themes,\n          editTask: this.editTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Timeboxes, {\n          addTimebox: this.addTimebox,\n          timeboxes: this.state.timeboxes,\n          tasks: this.state.visibleTasks,\n          projectId: this.state.projectId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport { Board };","map":{"version":3,"sources":["/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Board/Board.js"],"names":["React","getRequest","postRequest","Themes","Backlog","Timeboxes","DragDropContext","Board","Component","constructor","props","addTask","taskData","newTask","setState","prevState","tasks","state","visibleTasks","editTask","console","log","addTimebox","timebox","timeboxes","addTheme","themeData","themes","deleteTask","taskId","data","task_id","project_id","projectId","filter","t","id","deleteTheme","themeId","theme_id","filterByTheme","theme","filteredTasks","task","filtering","clearFilters","getTasks","resp","checkForInProgressTimeboxes","forEach","status","timeboxRedirect","ipTimeboxName","title","dataReceived","onDragEnd","result","destination","source","draggableId","droppableId","index","Number","obj","find","o","slice","themeObj","theme_color","color","priority","newTasks","splice","destinationList","otherTasks","backlogTasks","componentDidMount","sp","URLSearchParams","location","query","get","history","push","render","onDragUpdate","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport './board.css';\nimport { getRequest, postRequest }from './../API/api.js'\nimport Themes from './../Themes/Themes.js'\nimport Backlog from './../Backlog/Backlog.js'\nimport Timeboxes from './../Timeboxes/Timeboxes.js'\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t        dataReceived: false\n\t    };\n\t  }\n\n\t\taddTask = (taskData) => {\n\t\t\tconst newTask = {...taskData}\n\t\t\t\tthis.setState(prevState => ({\n\t\t    \t\ttasks: [newTask, ...this.state.tasks],\n\t\t    \t\tvisibleTasks: [newTask, ...this.state.tasks]\n\t\t    \t}));\n  \t};\n\n\t\teditTask = (taskData) => {\n\t\t\tconsole.log(taskData)\n\t\t\tconst newTask = {...taskData}\n\t\t\tconsole.log(newTask)\n\t\t\tconsole.log(visibleTasks)\n\t\t\t\tthis.setState(prevState => ({\n\t\t    \t\ttasks: [newTask, ...this.state.tasks],\n\t\t    \t\tvisibleTasks: [newTask, ...this.state.tasks]\n\t\t    \t}));\n\t  \t};\n\n  \taddTimebox = (timebox) => {\n  \t\tthis.setState(prevState => ({\n    \t\ttimeboxes: [...this.state.timeboxes, timebox]\n    \t}));\n  \t}\n\n  \taddTheme = (themeData) => {\n  \t\tthis.setState(prevState => ({\n    \t\tthemes: [...this.state.themes, themeData],\n    \t\t}));\n  \t}\n\n  \tdeleteTask = (taskId) => {\n\t\t\tconst data = {\n  \t\t\ttask_id: taskId,\n  \t\t\tproject_id: this.state.projectId\n  \t\t}\n\t\t\tpostRequest('/delete_task', data)\n  \t\tconst tasks = this.state.tasks.filter(t => t.id !== taskId)\n  \t\tthis.setState(prevState => ({\n\t\t    \ttasks: tasks,\n\t\t    \tvisibleTasks: tasks\n\t\t    }));\n  \t}\n\n  \tdeleteTheme = (themeId) => {\n\t\t\tconst data = {\n  \t\t\ttheme_id: themeId,\n  \t\t\tproject_id: this.state.projectId\n  \t\t}\n\t\t\tpostRequest('/delete_theme', data)\n  \t\tconst themes = this.state.themes.filter(t => t.id !== themeId)\n  \t\tthis.setState(prevState => ({\n\t\t    \tthemes: themes,\n\t\t    }));\n  \t}\n\n  \tfilterByTheme = (theme) => {\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === theme);\n\t  \t\tthis.setState(prevState => ({\n\t\t    \tvisibleTasks: filteredTasks,\n\t\t    \tfiltering: true\n\t\t    }));\n  \t}\n\n  \tclearFilters = () => {\n  \t\tthis.setState({visibleTasks: this.state.tasks, filtering: false})\n  \t}\n\n  \tgetTasks = async (projectId) => {\n\t\t\tconst resp = await getRequest('/get_tasks', `project_id=${projectId}`)\n\t    const timeboxes = resp.data['timeboxes']\n\t    const themes = resp.data['themes']\n\t    this.setState({ tasks: resp.data['tasks'],\n\t    \t\t\t\t\t\t\t\tvisibleTasks: resp.data['tasks'],\n\t    \t\t\t\t\t\t\t\tthemes:themes,\n\t    \t\t\t\t\t\t\t\ttimeboxes: timeboxes\n\t    \t\t\t\t\t\t\t});\n  };\n\n  \tcheckForInProgressTimeboxes = (timeboxes) => {\n  \t\ttimeboxes.forEach(timebox => {\n    \tif (timebox.status === 'In Progress') {\n    \t\tthis.setState({timeboxRedirect: timebox.id, ipTimeboxName: timebox.title})\n    \t}\n    \tthis.setState({dataReceived: true})\n    })\n\n  \t}\n\n   \tasync componentDidMount() {\n   \t\tconst sp = new URLSearchParams(this.props.location.query);\n\t\t\tconst projectId = Number(sp.get(\"projectId\"))\n\t\t\tif (projectId === null || projectId === 0) {\n\t\t\t\tthis.props.history.push('/')\n\t\t\t} else {\n\t\t\t\tthis.setState({projectId: projectId})\n\t\t\t\tawait this.getTasks(projectId);\n\t\t\t\tthis.checkForInProgressTimeboxes(this.state.timeboxes) //why is this function essential for rendrering anything????\n\t\t\t}\n\n    }\n\n    onDragEnd = async (result) => {\n\n  \t\tconst {destination, source, draggableId} = result;\n\n  \t\tif (!destination) {\n  \t\t\t//dragging somewhere non-droppable\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (\n  \t\t\t//dragging and dropping into same place\n  \t\t\tdestination.droppableId === source.droppableId &&\n  \t\t\tdestination.index === source.index\n  \t\t\t) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tconst taskId = Number(draggableId)\n  \t\tconst obj = this.state.tasks.find(o => o.id === taskId);\n\n  \t\tif (destination.droppableId.slice(0,5) === 'Theme') {\n  \t\t\t//landed on a theme, keep timebox the same and update the theme\n  \t\t\tconst themeId = Number(destination.droppableId.slice(6,11))\n\t\t\t\tconst data = {\n\t  \t\t\tproject_id: this.state.projectId,\n\t  \t\t\ttask_id: taskId,\n\t  \t\t\ttheme_id: themeId\n\t\t\t\t}\n\t\t\t\tpostRequest('/update_task_theme', data)\n\n\t  \t\tconst themeObj = this.state.themes.find(o => o.id === themeId)\n\n\t  \t\tobj.theme = themeObj.title\n\t  \t\tobj.theme_color = themeObj.color\n\n  \t\t}\n\n  \t\telse if (destination.droppableId.slice(0,7) === 'Timebox') {\n  \t\t\t//landed in a timebox - get timebox, remove from tasks, update timebox and put back in new position\n  \t\t\tconst timebox = destination.droppableId.slice(8,)\n\t\t\t\tconst data = {\n\t\t\t\t\tproject_id: this.state.projectId,\n\t\t\t\t\ttask_id: taskId,\n\t\t\t\t\tpriority: result.destination.index,\n\t\t\t\t\ttimebox: timebox\n\t\t\t\t}\n\t\t\t\tpostRequest('/update_task', data)\n\n\t  \t\tobj.timebox = timebox\n\n\t\t  \tconst newTasks = this.state.tasks.filter(t => t !== obj)\n\t\t\t\tnewTasks.splice(result.destination.index,0, obj)\n\t\t\t\tthis.setState({\n\t\t    \ttasks: newTasks,\n\t\t    \tvisibleTasks: newTasks\n\t\t    \t})\n\t\t\t}\n\n\t\t\telse if (destination.droppableId === 'Backlog') {\n\t\t\t\t//landed in backlog - remove from source list, add to backlog and update state with all the updated lists\n\t\t\t\tconst data = {\n\t  \t\t\tproject_id: this.state.projectId,\n\t  \t\t\ttask_id: taskId,\n\t  \t\t\tpriority: result.destination.index,\n\t  \t\t\ttimebox: destination.droppableId\n\t  \t\t}\n\t\t\t\tpostRequest('/update_task', data)\n\n\t  \tconst destinationList = this.state.tasks.filter(t => t.timebox === destination.droppableId);\n\t  \tconst otherTasks = this.state.tasks.filter(t => t.timebox !== destination.droppableId);\n\n\t\t\tif (source.droppableId === destination.droppableId) {\n\t\t\t\t//same list so simply take it out and put it bakc in new position\n\t\t\t\tlet backlogTasks = this.state.tasks.filter(t => t.timebox === source.droppableId);\n\t\t\t\tbacklogTasks = this.state.tasks.filter(t => t !== obj);\n\n\t\t\t\tbacklogTasks.splice(result.destination.index,0, obj)\n\t\t\t\tthis.setState({\n\t\t    \ttasks: backlogTasks,\n\t\t    \tvisibleTasks: backlogTasks\n\t\t    \t})\n\n\t\t\t} else {\n\t\t\t\t//moving from timebox to backlog so remove from source, add to backlog at index and all tasks back to state\n\t\t\t\tobj.timebox = 'Backlog'\n\n\t\t\t\tthis.setState({\n\t\t    \ttasks: [...otherTasks, ...destinationList],\n\t\t    \tvisibleTasks: [ ...otherTasks, ...destinationList]\n\t\t    \t})\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log('Unexpected drop destination')\n\t\t}\n\n  \t}\n\n\n\trender() {\n\t\treturn   this.state.dataReceived === true ? (\n\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\t\tonDragEnd = {this.onDragEnd}\n\t\t\t\t\t\t\tonDragUpdate={this.onDragUpdate}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className='board row mt-5' style={{margin: 0}}>\n\t\t\t\t\t\t\t\t<Themes\n\t\t\t\t\t\t\t\t\tthemes={this.state.themes}\n\t\t\t\t\t\t\t\t\tfilterByTheme={this.filterByTheme}\n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t\taddTheme={this.addTheme}\n\t\t\t\t\t\t\t\t\tdeleteTheme={this.deleteTheme}\n\t\t\t\t\t\t\t\t\tfiltering={this.state.filtering}\n\t\t\t\t\t\t\t\t\tclearFilters={this.clearFilters}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Backlog\n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t  tasks={this.state.visibleTasks}\n\t\t\t\t\t\t\t\t  addTask={this.addTask}\n\t\t\t\t\t\t\t\t  deleteTask={this.deleteTask}\n\t\t\t\t\t\t\t\t\tthemes={this.state.themes}\n\t\t\t\t\t\t\t\t\teditTask={this.editTask}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Timeboxes\n\t\t\t\t\t\t\t\t\taddTimebox={this.addTimebox}\n\t\t\t\t\t\t\t\t\ttimeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\ttasks={this.state.visibleTasks}\n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t \t</div>\n\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t\t)\n\t\t\t\t\t: <div></div>\n\t}\n}\n\n\nexport { Board }\n"]},"metadata":{},"sourceType":"module"}