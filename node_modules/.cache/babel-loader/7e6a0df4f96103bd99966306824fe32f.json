{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Board/Board.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport './board.css';\nimport { getRequest, postRequest } from './../API/api.js';\nimport Themes from './../Themes/Themes.js';\nimport Backlog from './../Backlog/Backlog.js';\nimport Timeboxes from './../Timeboxes/Timeboxes.js';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addTask = taskData => {\n      const newTask = { ...taskData\n      };\n      this.setState(prevState => ({\n        tasks: [newTask, ...this.state.tasks],\n        visibleTasks: [newTask, ...this.state.tasks]\n      }));\n    };\n\n    this.editTask = (taskId, themeName) => {\n      const task = this.state.tasks.find(t => t.id === taskId);\n      const idx = this.state.tasks.indexOf(task);\n      const theme = this.state.themes.find(th => th.title === themeName);\n      let tasks = this.state.tasks;\n      let vtasks = this.state.visibleTasks;\n\n      if (themeName !== 'No Theme') {\n        task.theme = theme.title;\n        task.theme_color = theme.color;\n      }\n\n      tasks.splice(idx, 1, task);\n      vtasks.splice(idx, 1, task);\n      this.setState({\n        tasks: tasks,\n        visibleTasks: vtasks\n      });\n    };\n\n    this.addTimebox = timebox => {\n      this.setState(prevState => ({\n        timeboxes: [...this.state.timeboxes, timebox]\n      }));\n    };\n\n    this.deleteTimebox = timeboxId => {\n      const timeboxes = this.state.timeboxes.filter(tb => tb.id !== timeboxId);\n      this.setState({\n        timeboxes: timeboxes\n      });\n    };\n\n    this.editTimebox = (timeboxId, timeboxData) => {\n      console.log(timeboxData);\n      const timeboxes = this.state.timeboxes;\n      const timebox = timeboxes.find(tb => tb.id === timeboxId);\n      const idx = timeboxes.indexOf(timebox);\n      timebox.title = timeboxData.title;\n      timebox.goals = timeboxData.goals;\n      timeboxes.splice(idx, 1, timebox);\n      this.setState({\n        timeboxes: timeboxes\n      });\n    };\n\n    this.updateTimeboxStatus = (timeboxId, status) => {\n      console.log('closing timebox', timeboxId);\n    };\n\n    this.addTheme = themeData => {\n      this.setState(prevState => ({\n        themes: [...this.state.themes, themeData]\n      }));\n    };\n\n    this.deleteTask = taskId => {\n      const data = {\n        task_id: taskId,\n        project_id: this.state.projectId\n      };\n      postRequest('/delete_task', data);\n      const tasks = this.state.tasks.filter(t => t.id !== taskId);\n      this.setState(prevState => ({\n        tasks: tasks,\n        visibleTasks: tasks\n      }));\n    };\n\n    this.deleteTheme = themeId => {\n      const data = {\n        theme_id: themeId,\n        project_id: this.state.projectId\n      };\n      postRequest('/delete_theme', data);\n      const themes = this.state.themes.filter(t => t.id !== themeId);\n      this.setState(prevState => ({\n        themes: themes\n      }));\n    };\n\n    this.filterByTheme = theme => {\n      const filteredTasks = this.state.tasks.filter(task => task.theme === theme);\n      this.setState(prevState => ({\n        visibleTasks: filteredTasks,\n        filtering: true\n      }));\n    };\n\n    this.clearFilters = () => {\n      this.setState({\n        visibleTasks: this.state.tasks,\n        filtering: false\n      });\n    };\n\n    this.getTasks = async projectId => {\n      const resp = await getRequest('/get_tasks', `project_id=${projectId}`);\n      const timeboxes = resp.data['timeboxes'];\n      const themes = resp.data['themes'];\n      this.setState({\n        tasks: resp.data['tasks'],\n        visibleTasks: resp.data['tasks'],\n        themes: themes,\n        timeboxes: timeboxes\n      });\n    };\n\n    this.checkForInProgressTimeboxes = timeboxes => {\n      timeboxes.forEach(timebox => {\n        if (timebox.status === 'In Progress') {\n          this.setState({\n            timeboxRedirect: timebox.id,\n            ipTimeboxName: timebox.title\n          });\n        }\n\n        this.setState({\n          dataReceived: true\n        });\n      });\n    };\n\n    this.onDragEnd = async result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        //dragging somewhere non-droppable\n        return;\n      }\n\n      if ( //dragging and dropping into same place\n      destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const taskId = Number(draggableId);\n      const obj = this.state.tasks.find(o => o.id === taskId);\n\n      if (destination.droppableId.slice(0, 5) === 'Theme') {\n        //landed on a theme, keep timebox the same and update the theme\n        const themeId = Number(destination.droppableId.slice(6, 11));\n        const data = {\n          project_id: this.state.projectId,\n          task_id: taskId,\n          theme_id: themeId\n        };\n        postRequest('/update_task_theme', data);\n        const themeObj = this.state.themes.find(o => o.id === themeId);\n        obj.theme = themeObj.title;\n        obj.theme_color = themeObj.color;\n      } else if (destination.droppableId.slice(0, 7) === 'Timebox') {\n        //landed in a timebox - get timebox, remove from tasks, update timebox and put back in new position\n        const timebox = destination.droppableId.slice(8);\n        const data = {\n          project_id: this.state.projectId,\n          task_id: taskId,\n          priority: result.destination.index,\n          timebox: timebox\n        };\n        postRequest('/update_task', data);\n        obj.timebox = timebox;\n        const newTasks = this.state.tasks.filter(t => t !== obj);\n        newTasks.splice(result.destination.index, 0, obj);\n        this.setState({\n          tasks: newTasks,\n          visibleTasks: newTasks\n        });\n      } else if (destination.droppableId === 'Backlog') {\n        //landed in backlog - remove from source list, add to backlog and update state with all the updated lists\n        const data = {\n          project_id: this.state.projectId,\n          task_id: taskId,\n          priority: result.destination.index,\n          timebox: destination.droppableId\n        };\n        postRequest('/update_task', data);\n        const destinationList = this.state.tasks.filter(t => t.timebox === destination.droppableId);\n        const otherTasks = this.state.tasks.filter(t => t.timebox !== destination.droppableId);\n\n        if (source.droppableId === destination.droppableId) {\n          //same list so simply take it out and put it bakc in new position\n          let backlogTasks = this.state.tasks.filter(t => t.timebox === source.droppableId);\n          backlogTasks = this.state.tasks.filter(t => t !== obj);\n          backlogTasks.splice(result.destination.index, 0, obj);\n          this.setState({\n            tasks: backlogTasks,\n            visibleTasks: backlogTasks\n          });\n        } else {\n          //moving from timebox to backlog so remove from source, add to backlog at index and all tasks back to state\n          obj.timebox = 'Backlog';\n          this.setState({\n            tasks: [...otherTasks, ...destinationList],\n            visibleTasks: [...otherTasks, ...destinationList]\n          });\n        }\n      } else {\n        console.log('Unexpected drop destination');\n      }\n    };\n\n    this.state = {\n      dataReceived: false\n    };\n  }\n\n  async componentDidMount() {\n    const sp = new URLSearchParams(this.props.location.query);\n    const projectId = Number(sp.get(\"projectId\"));\n\n    if (projectId === null || projectId === 0) {\n      this.props.history.push('/');\n    } else {\n      this.setState({\n        projectId: projectId\n      });\n      await this.getTasks(projectId);\n      this.checkForInProgressTimeboxes(this.state.timeboxes); //why is this function essential for rendrering anything????\n    }\n  }\n\n  render() {\n    return this.state.dataReceived === true ? /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      onDragUpdate: this.onDragUpdate,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board row mt-5\",\n        style: {\n          margin: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Themes, {\n          themes: this.state.themes,\n          filterByTheme: this.filterByTheme,\n          projectId: this.state.projectId,\n          addTheme: this.addTheme,\n          deleteTheme: this.deleteTheme,\n          filtering: this.state.filtering,\n          clearFilters: this.clearFilters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Backlog, {\n          projectId: this.state.projectId,\n          tasks: this.state.visibleTasks,\n          addTask: this.addTask,\n          deleteTask: this.deleteTask,\n          themes: this.state.themes,\n          editTask: this.editTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Timeboxes, {\n          addTimebox: this.addTimebox,\n          deleteTimebox: this.deleteTimebox,\n          editTimebox: this.editTimebox,\n          timeboxes: this.state.timeboxes,\n          tasks: this.state.visibleTasks,\n          projectId: this.state.projectId,\n          updateTimeboxStatus: this.updateTimeboxStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport { Board };","map":{"version":3,"sources":["/Users/markgray/projects/Todoodleoo/todoodleoo-client/src/Board/Board.js"],"names":["React","getRequest","postRequest","Themes","Backlog","Timeboxes","DragDropContext","Board","Component","constructor","props","addTask","taskData","newTask","setState","prevState","tasks","state","visibleTasks","editTask","taskId","themeName","task","find","t","id","idx","indexOf","theme","themes","th","title","vtasks","theme_color","color","splice","addTimebox","timebox","timeboxes","deleteTimebox","timeboxId","filter","tb","editTimebox","timeboxData","console","log","goals","updateTimeboxStatus","status","addTheme","themeData","deleteTask","data","task_id","project_id","projectId","deleteTheme","themeId","theme_id","filterByTheme","filteredTasks","filtering","clearFilters","getTasks","resp","checkForInProgressTimeboxes","forEach","timeboxRedirect","ipTimeboxName","dataReceived","onDragEnd","result","destination","source","draggableId","droppableId","index","Number","obj","o","slice","themeObj","priority","newTasks","destinationList","otherTasks","backlogTasks","componentDidMount","sp","URLSearchParams","location","query","get","history","push","render","onDragUpdate","margin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,aAAP;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAuC,iBAAvC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,eAAT,QAAgC,qBAAhC;;;AAEA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOlBC,OAPkB,GAOPC,QAAD,IAAc;AACvB,YAAMC,OAAO,GAAG,EAAC,GAAGD;AAAJ,OAAhB;AACC,WAAKE,QAAL,CAAcC,SAAS,KAAK;AACxBC,QAAAA,KAAK,EAAE,CAACH,OAAD,EAAU,GAAG,KAAKI,KAAL,CAAWD,KAAxB,CADiB;AAExBE,QAAAA,YAAY,EAAE,CAACL,OAAD,EAAU,GAAG,KAAKI,KAAL,CAAWD,KAAxB;AAFU,OAAL,CAAvB;AAIA,KAbgB;;AAAA,SAelBG,QAfkB,GAeP,CAACC,MAAD,EAASC,SAAT,KAAuB;AACjC,YAAMC,IAAI,GAAG,KAAKL,KAAL,CAAWD,KAAX,CAAiBO,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,MAApC,CAAb;AACA,YAAMM,GAAG,GAAG,KAAKT,KAAL,CAAWD,KAAX,CAAiBW,OAAjB,CAAyBL,IAAzB,CAAZ;AACA,YAAMM,KAAK,GAAG,KAAKX,KAAL,CAAWY,MAAX,CAAkBN,IAAlB,CAAuBO,EAAE,IAAIA,EAAE,CAACC,KAAH,KAAaV,SAA1C,CAAd;AACA,UAAIL,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACA,UAAIgB,MAAM,GAAG,KAAKf,KAAL,CAAWC,YAAxB;;AACA,UAAIG,SAAS,KAAK,UAAlB,EAA8B;AAC7BC,QAAAA,IAAI,CAACM,KAAL,GAAaA,KAAK,CAACG,KAAnB;AACAT,QAAAA,IAAI,CAACW,WAAL,GAAmBL,KAAK,CAACM,KAAzB;AACA;;AACDlB,MAAAA,KAAK,CAACmB,MAAN,CAAaT,GAAb,EAAiB,CAAjB,EAAmBJ,IAAnB;AACAU,MAAAA,MAAM,CAACG,MAAP,CAAcT,GAAd,EAAkB,CAAlB,EAAoBJ,IAApB;AACA,WAAKR,QAAL,CAAc;AAACE,QAAAA,KAAK,EAAEA,KAAR;AAAeE,QAAAA,YAAY,EAACc;AAA5B,OAAd;AACE,KA5Be;;AAAA,SA8BjBI,UA9BiB,GA8BHC,OAAD,IAAa;AACzB,WAAKvB,QAAL,CAAcC,SAAS,KAAK;AAC1BuB,QAAAA,SAAS,EAAE,CAAC,GAAG,KAAKrB,KAAL,CAAWqB,SAAf,EAA0BD,OAA1B;AADe,OAAL,CAAvB;AAGA,KAlCgB;;AAAA,SAoClBE,aApCkB,GAoCDC,SAAD,IAAe;AAC9B,YAAMF,SAAS,GAAG,KAAKrB,KAAL,CAAWqB,SAAX,CAAqBG,MAArB,CAA4BC,EAAE,IAAIA,EAAE,CAACjB,EAAH,KAAUe,SAA5C,CAAlB;AACA,WAAK1B,QAAL,CAAc;AAACwB,QAAAA,SAAS,EAAEA;AAAZ,OAAd;AACA,KAvCiB;;AAAA,SAyClBK,WAzCkB,GAyCJ,CAACH,SAAD,EAAYI,WAAZ,KAA4B;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,YAAMN,SAAS,GAAG,KAAKrB,KAAL,CAAWqB,SAA7B;AACA,YAAMD,OAAO,GAAGC,SAAS,CAACf,IAAV,CAAemB,EAAE,IAAIA,EAAE,CAACjB,EAAH,KAAUe,SAA/B,CAAhB;AACA,YAAMd,GAAG,GAAGY,SAAS,CAACX,OAAV,CAAkBU,OAAlB,CAAZ;AACAA,MAAAA,OAAO,CAACN,KAAR,GAAgBa,WAAW,CAACb,KAA5B;AACAM,MAAAA,OAAO,CAACU,KAAR,GAAgBH,WAAW,CAACG,KAA5B;AACAT,MAAAA,SAAS,CAACH,MAAV,CAAiBT,GAAjB,EAAsB,CAAtB,EAAyBW,OAAzB;AACA,WAAKvB,QAAL,CAAc;AAACwB,QAAAA,SAAS,EAAEA;AAAZ,OAAd;AAEA,KAnDiB;;AAAA,SAqDlBU,mBArDkB,GAqDI,CAACR,SAAD,EAAYS,MAAZ,KAAuB;AAC5CJ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,SAA/B;AACA,KAvDiB;;AAAA,SAyDjBU,QAzDiB,GAyDLC,SAAD,IAAe;AACzB,WAAKrC,QAAL,CAAcC,SAAS,KAAK;AAC1Bc,QAAAA,MAAM,EAAE,CAAC,GAAG,KAAKZ,KAAL,CAAWY,MAAf,EAAuBsB,SAAvB;AADkB,OAAL,CAAvB;AAGA,KA7DgB;;AAAA,SA+DjBC,UA/DiB,GA+DHhC,MAAD,IAAY;AACzB,YAAMiC,IAAI,GAAG;AACXC,QAAAA,OAAO,EAAElC,MADE;AAEXmC,QAAAA,UAAU,EAAE,KAAKtC,KAAL,CAAWuC;AAFZ,OAAb;AAIAtD,MAAAA,WAAW,CAAC,cAAD,EAAiBmD,IAAjB,CAAX;AACC,YAAMrC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiByB,MAAjB,CAAwBjB,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,MAAtC,CAAd;AACA,WAAKN,QAAL,CAAcC,SAAS,KAAK;AACzBC,QAAAA,KAAK,EAAEA,KADkB;AAEzBE,QAAAA,YAAY,EAAEF;AAFW,OAAL,CAAvB;AAIA,KA1EgB;;AAAA,SA4EjByC,WA5EiB,GA4EFC,OAAD,IAAa;AAC3B,YAAML,IAAI,GAAG;AACXM,QAAAA,QAAQ,EAAED,OADC;AAEXH,QAAAA,UAAU,EAAE,KAAKtC,KAAL,CAAWuC;AAFZ,OAAb;AAIAtD,MAAAA,WAAW,CAAC,eAAD,EAAkBmD,IAAlB,CAAX;AACC,YAAMxB,MAAM,GAAG,KAAKZ,KAAL,CAAWY,MAAX,CAAkBY,MAAlB,CAAyBjB,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASiC,OAAvC,CAAf;AACA,WAAK5C,QAAL,CAAcC,SAAS,KAAK;AACzBc,QAAAA,MAAM,EAAEA;AADiB,OAAL,CAAvB;AAGA,KAtFgB;;AAAA,SAwFjB+B,aAxFiB,GAwFAhC,KAAD,IAAW;AACzB,YAAMiC,aAAa,GAAG,KAAK5C,KAAL,CAAWD,KAAX,CAAiByB,MAAjB,CAAwBnB,IAAI,IAAIA,IAAI,CAACM,KAAL,KAAeA,KAA/C,CAAtB;AACA,WAAKd,QAAL,CAAcC,SAAS,KAAK;AAC1BG,QAAAA,YAAY,EAAE2C,aADY;AAE1BC,QAAAA,SAAS,EAAE;AAFe,OAAL,CAAvB;AAID,KA9FgB;;AAAA,SAgGjBC,YAhGiB,GAgGF,MAAM;AACpB,WAAKjD,QAAL,CAAc;AAACI,QAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWD,KAA1B;AAAiC8C,QAAAA,SAAS,EAAE;AAA5C,OAAd;AACA,KAlGgB;;AAAA,SAoGjBE,QApGiB,GAoGN,MAAOR,SAAP,IAAqB;AAChC,YAAMS,IAAI,GAAG,MAAMhE,UAAU,CAAC,YAAD,EAAgB,cAAauD,SAAU,EAAvC,CAA7B;AACE,YAAMlB,SAAS,GAAG2B,IAAI,CAACZ,IAAL,CAAU,WAAV,CAAlB;AACA,YAAMxB,MAAM,GAAGoC,IAAI,CAACZ,IAAL,CAAU,QAAV,CAAf;AACA,WAAKvC,QAAL,CAAc;AAAEE,QAAAA,KAAK,EAAEiD,IAAI,CAACZ,IAAL,CAAU,OAAV,CAAT;AACNnC,QAAAA,YAAY,EAAE+C,IAAI,CAACZ,IAAL,CAAU,OAAV,CADR;AAENxB,QAAAA,MAAM,EAACA,MAFD;AAGNS,QAAAA,SAAS,EAAEA;AAHL,OAAd;AAKF,KA7GiB;;AAAA,SA+GjB4B,2BA/GiB,GA+Gc5B,SAAD,IAAe;AAC5CA,MAAAA,SAAS,CAAC6B,OAAV,CAAkB9B,OAAO,IAAI;AAC5B,YAAIA,OAAO,CAACY,MAAR,KAAmB,aAAvB,EAAsC;AACrC,eAAKnC,QAAL,CAAc;AAACsD,YAAAA,eAAe,EAAE/B,OAAO,CAACZ,EAA1B;AAA8B4C,YAAAA,aAAa,EAAEhC,OAAO,CAACN;AAArD,WAAd;AACA;;AACD,aAAKjB,QAAL,CAAc;AAACwD,UAAAA,YAAY,EAAE;AAAf,SAAd;AACA,OALD;AAOA,KAvHgB;;AAAA,SAsIhBC,SAtIgB,GAsIJ,MAAOC,MAAP,IAAkB;AAE9B,YAAM;AAACC,QAAAA,WAAD;AAAcC,QAAAA,MAAd;AAAsBC,QAAAA;AAAtB,UAAqCH,MAA3C;;AAEA,UAAI,CAACC,WAAL,EAAkB;AACjB;AACA;AACA;;AAED,WACC;AACAA,MAAAA,WAAW,CAACG,WAAZ,KAA4BF,MAAM,CAACE,WAAnC,IACAH,WAAW,CAACI,KAAZ,KAAsBH,MAAM,CAACG,KAH9B,EAIG;AACF;AACA;;AAED,YAAMzD,MAAM,GAAG0D,MAAM,CAACH,WAAD,CAArB;AACA,YAAMI,GAAG,GAAG,KAAK9D,KAAL,CAAWD,KAAX,CAAiBO,IAAjB,CAAsByD,CAAC,IAAIA,CAAC,CAACvD,EAAF,KAASL,MAApC,CAAZ;;AAEA,UAAIqD,WAAW,CAACG,WAAZ,CAAwBK,KAAxB,CAA8B,CAA9B,EAAgC,CAAhC,MAAuC,OAA3C,EAAoD;AACnD;AACA,cAAMvB,OAAO,GAAGoB,MAAM,CAACL,WAAW,CAACG,WAAZ,CAAwBK,KAAxB,CAA8B,CAA9B,EAAgC,EAAhC,CAAD,CAAtB;AACD,cAAM5B,IAAI,GAAG;AACXE,UAAAA,UAAU,EAAE,KAAKtC,KAAL,CAAWuC,SADZ;AAEXF,UAAAA,OAAO,EAAElC,MAFE;AAGXuC,UAAAA,QAAQ,EAAED;AAHC,SAAb;AAKAxD,QAAAA,WAAW,CAAC,oBAAD,EAAuBmD,IAAvB,CAAX;AAEC,cAAM6B,QAAQ,GAAG,KAAKjE,KAAL,CAAWY,MAAX,CAAkBN,IAAlB,CAAuByD,CAAC,IAAIA,CAAC,CAACvD,EAAF,KAASiC,OAArC,CAAjB;AAEAqB,QAAAA,GAAG,CAACnD,KAAJ,GAAYsD,QAAQ,CAACnD,KAArB;AACAgD,QAAAA,GAAG,CAAC9C,WAAJ,GAAkBiD,QAAQ,CAAChD,KAA3B;AAEA,OAfD,MAiBK,IAAIuC,WAAW,CAACG,WAAZ,CAAwBK,KAAxB,CAA8B,CAA9B,EAAgC,CAAhC,MAAuC,SAA3C,EAAsD;AAC1D;AACA,cAAM5C,OAAO,GAAGoC,WAAW,CAACG,WAAZ,CAAwBK,KAAxB,CAA8B,CAA9B,CAAhB;AACD,cAAM5B,IAAI,GAAG;AACZE,UAAAA,UAAU,EAAE,KAAKtC,KAAL,CAAWuC,SADX;AAEZF,UAAAA,OAAO,EAAElC,MAFG;AAGZ+D,UAAAA,QAAQ,EAAEX,MAAM,CAACC,WAAP,CAAmBI,KAHjB;AAIZxC,UAAAA,OAAO,EAAEA;AAJG,SAAb;AAMAnC,QAAAA,WAAW,CAAC,cAAD,EAAiBmD,IAAjB,CAAX;AAEC0B,QAAAA,GAAG,CAAC1C,OAAJ,GAAcA,OAAd;AAEA,cAAM+C,QAAQ,GAAG,KAAKnE,KAAL,CAAWD,KAAX,CAAiByB,MAAjB,CAAwBjB,CAAC,IAAIA,CAAC,KAAKuD,GAAnC,CAAjB;AACDK,QAAAA,QAAQ,CAACjD,MAAT,CAAgBqC,MAAM,CAACC,WAAP,CAAmBI,KAAnC,EAAyC,CAAzC,EAA4CE,GAA5C;AACA,aAAKjE,QAAL,CAAc;AACXE,UAAAA,KAAK,EAAEoE,QADI;AAEXlE,UAAAA,YAAY,EAAEkE;AAFH,SAAd;AAIA,OAnBK,MAqBD,IAAIX,WAAW,CAACG,WAAZ,KAA4B,SAAhC,EAA2C;AAC/C;AACA,cAAMvB,IAAI,GAAG;AACXE,UAAAA,UAAU,EAAE,KAAKtC,KAAL,CAAWuC,SADZ;AAEXF,UAAAA,OAAO,EAAElC,MAFE;AAGX+D,UAAAA,QAAQ,EAAEX,MAAM,CAACC,WAAP,CAAmBI,KAHlB;AAIXxC,UAAAA,OAAO,EAAEoC,WAAW,CAACG;AAJV,SAAb;AAMA1E,QAAAA,WAAW,CAAC,cAAD,EAAiBmD,IAAjB,CAAX;AAEA,cAAMgC,eAAe,GAAG,KAAKpE,KAAL,CAAWD,KAAX,CAAiByB,MAAjB,CAAwBjB,CAAC,IAAIA,CAAC,CAACa,OAAF,KAAcoC,WAAW,CAACG,WAAvD,CAAxB;AACA,cAAMU,UAAU,GAAG,KAAKrE,KAAL,CAAWD,KAAX,CAAiByB,MAAjB,CAAwBjB,CAAC,IAAIA,CAAC,CAACa,OAAF,KAAcoC,WAAW,CAACG,WAAvD,CAAnB;;AAED,YAAIF,MAAM,CAACE,WAAP,KAAuBH,WAAW,CAACG,WAAvC,EAAoD;AACnD;AACA,cAAIW,YAAY,GAAG,KAAKtE,KAAL,CAAWD,KAAX,CAAiByB,MAAjB,CAAwBjB,CAAC,IAAIA,CAAC,CAACa,OAAF,KAAcqC,MAAM,CAACE,WAAlD,CAAnB;AACAW,UAAAA,YAAY,GAAG,KAAKtE,KAAL,CAAWD,KAAX,CAAiByB,MAAjB,CAAwBjB,CAAC,IAAIA,CAAC,KAAKuD,GAAnC,CAAf;AAEAQ,UAAAA,YAAY,CAACpD,MAAb,CAAoBqC,MAAM,CAACC,WAAP,CAAmBI,KAAvC,EAA6C,CAA7C,EAAgDE,GAAhD;AACA,eAAKjE,QAAL,CAAc;AACXE,YAAAA,KAAK,EAAEuE,YADI;AAEXrE,YAAAA,YAAY,EAAEqE;AAFH,WAAd;AAKA,SAXD,MAWO;AACN;AACAR,UAAAA,GAAG,CAAC1C,OAAJ,GAAc,SAAd;AAEA,eAAKvB,QAAL,CAAc;AACXE,YAAAA,KAAK,EAAE,CAAC,GAAGsE,UAAJ,EAAgB,GAAGD,eAAnB,CADI;AAEXnE,YAAAA,YAAY,EAAE,CAAE,GAAGoE,UAAL,EAAiB,GAAGD,eAApB;AAFH,WAAd;AAIA;AACD,OAjCK,MAiCC;AACNxC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA;AAEC,KArOgB;;AAEf,SAAK7B,KAAL,GAAa;AACTqD,MAAAA,YAAY,EAAE;AADL,KAAb;AAGD;;AAoHuB,QAAjBkB,iBAAiB,GAAG;AACzB,UAAMC,EAAE,GAAG,IAAIC,eAAJ,CAAoB,KAAKhF,KAAL,CAAWiF,QAAX,CAAoBC,KAAxC,CAAX;AACF,UAAMpC,SAAS,GAAGsB,MAAM,CAACW,EAAE,CAACI,GAAH,CAAO,WAAP,CAAD,CAAxB;;AACA,QAAIrC,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,CAAxC,EAA2C;AAC1C,WAAK9C,KAAL,CAAWoF,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA,KAFD,MAEO;AACN,WAAKjF,QAAL,CAAc;AAAC0C,QAAAA,SAAS,EAAEA;AAAZ,OAAd;AACA,YAAM,KAAKQ,QAAL,CAAcR,SAAd,CAAN;AACA,WAAKU,2BAAL,CAAiC,KAAKjD,KAAL,CAAWqB,SAA5C,EAHM,CAGiD;AACvD;AAEC;;AAoGJ0D,EAAAA,MAAM,GAAG;AACR,WAAS,KAAK/E,KAAL,CAAWqD,YAAX,KAA4B,IAA5B,gBACL,QAAC,eAAD;AACC,MAAA,SAAS,EAAI,KAAKC,SADnB;AAEC,MAAA,YAAY,EAAE,KAAK0B,YAFpB;AAAA,6BAIC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAvC;AAAA,gCACC,QAAC,MAAD;AACC,UAAA,MAAM,EAAE,KAAKjF,KAAL,CAAWY,MADpB;AAEC,UAAA,aAAa,EAAE,KAAK+B,aAFrB;AAGC,UAAA,SAAS,EAAE,KAAK3C,KAAL,CAAWuC,SAHvB;AAIC,UAAA,QAAQ,EAAE,KAAKN,QAJhB;AAKC,UAAA,WAAW,EAAE,KAAKO,WALnB;AAMC,UAAA,SAAS,EAAE,KAAKxC,KAAL,CAAW6C,SANvB;AAOC,UAAA,YAAY,EAAE,KAAKC;AAPpB;AAAA;AAAA;AAAA;AAAA,gBADD,eAUC,QAAC,OAAD;AACC,UAAA,SAAS,EAAE,KAAK9C,KAAL,CAAWuC,SADvB;AAEE,UAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWC,YAFpB;AAGE,UAAA,OAAO,EAAE,KAAKP,OAHhB;AAIE,UAAA,UAAU,EAAE,KAAKyC,UAJnB;AAKC,UAAA,MAAM,EAAE,KAAKnC,KAAL,CAAWY,MALpB;AAMC,UAAA,QAAQ,EAAE,KAAKV;AANhB;AAAA;AAAA;AAAA;AAAA,gBAVD,eAkBC,QAAC,SAAD;AACC,UAAA,UAAU,EAAE,KAAKiB,UADlB;AAEC,UAAA,aAAa,EAAE,KAAKG,aAFrB;AAGC,UAAA,WAAW,EAAE,KAAKI,WAHnB;AAIC,UAAA,SAAS,EAAE,KAAK1B,KAAL,CAAWqB,SAJvB;AAKC,UAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,YALnB;AAMC,UAAA,SAAS,EAAE,KAAKD,KAAL,CAAWuC,SANvB;AAOC,UAAA,mBAAmB,EAAE,KAAKR;AAP3B;AAAA;AAAA;AAAA;AAAA,gBAlBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,YADK,gBAmCJ;AAAA;AAAA;AAAA;AAAA,YAnCL;AAoCA;;AA9QkC;;AAkRpC,SAASzC,KAAT","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport './board.css';\nimport { getRequest, postRequest }from './../API/api.js'\nimport Themes from './../Themes/Themes.js'\nimport Backlog from './../Backlog/Backlog.js'\nimport Timeboxes from './../Timeboxes/Timeboxes.js'\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t        dataReceived: false\n\t    };\n\t  }\n\n\t\taddTask = (taskData) => {\n\t\t\tconst newTask = {...taskData}\n\t\t\t\tthis.setState(prevState => ({\n\t\t    \t\ttasks: [newTask, ...this.state.tasks],\n\t\t    \t\tvisibleTasks: [newTask, ...this.state.tasks]\n\t\t    \t}));\n  \t};\n\n\t\teditTask = (taskId, themeName) => {\n\t\t\tconst task = this.state.tasks.find(t => t.id === taskId)\n\t\t\tconst idx = this.state.tasks.indexOf(task)\n\t\t\tconst theme = this.state.themes.find(th => th.title === themeName)\n\t\t\tlet tasks = this.state.tasks\n\t\t\tlet vtasks = this.state.visibleTasks\n\t\t\tif (themeName !== 'No Theme') {\n\t\t\t\ttask.theme = theme.title\n\t\t\t\ttask.theme_color = theme.color\n\t\t\t}\n\t\t\ttasks.splice(idx,1,task)\n\t\t\tvtasks.splice(idx,1,task)\n\t\t\tthis.setState({tasks: tasks, visibleTasks:vtasks})\n\t  \t};\n\n  \taddTimebox = (timebox) => {\n  \t\tthis.setState(prevState => ({\n    \t\ttimeboxes: [...this.state.timeboxes, timebox]\n    \t}));\n  \t}\n\n\t\tdeleteTimebox = (timeboxId) => {\n\t\t\tconst timeboxes = this.state.timeboxes.filter(tb => tb.id !== timeboxId)\n\t\t\tthis.setState({timeboxes: timeboxes})\n\t\t}\n\n\t\teditTimebox = (timeboxId, timeboxData) => {\n\t\t\tconsole.log(timeboxData)\n\t\t\tconst timeboxes = this.state.timeboxes\n\t\t\tconst timebox = timeboxes.find(tb => tb.id === timeboxId)\n\t\t\tconst idx = timeboxes.indexOf(timebox)\n\t\t\ttimebox.title = timeboxData.title\n\t\t\ttimebox.goals = timeboxData.goals\n\t\t\ttimeboxes.splice(idx, 1, timebox)\n\t\t\tthis.setState({timeboxes: timeboxes})\n\n\t\t}\n\n\t\tupdateTimeboxStatus = (timeboxId, status) => {\n\t\t\tconsole.log('closing timebox', timeboxId)\n\t\t}\n\n  \taddTheme = (themeData) => {\n  \t\tthis.setState(prevState => ({\n    \t\tthemes: [...this.state.themes, themeData],\n    \t\t}));\n  \t}\n\n  \tdeleteTask = (taskId) => {\n\t\t\tconst data = {\n  \t\t\ttask_id: taskId,\n  \t\t\tproject_id: this.state.projectId\n  \t\t}\n\t\t\tpostRequest('/delete_task', data)\n  \t\tconst tasks = this.state.tasks.filter(t => t.id !== taskId)\n  \t\tthis.setState(prevState => ({\n\t\t    \ttasks: tasks,\n\t\t    \tvisibleTasks: tasks\n\t\t    }));\n  \t}\n\n  \tdeleteTheme = (themeId) => {\n\t\t\tconst data = {\n  \t\t\ttheme_id: themeId,\n  \t\t\tproject_id: this.state.projectId\n  \t\t}\n\t\t\tpostRequest('/delete_theme', data)\n  \t\tconst themes = this.state.themes.filter(t => t.id !== themeId)\n  \t\tthis.setState(prevState => ({\n\t\t    \tthemes: themes,\n\t\t    }));\n  \t}\n\n  \tfilterByTheme = (theme) => {\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === theme);\n\t  \t\tthis.setState(prevState => ({\n\t\t    \tvisibleTasks: filteredTasks,\n\t\t    \tfiltering: true\n\t\t    }));\n  \t}\n\n  \tclearFilters = () => {\n  \t\tthis.setState({visibleTasks: this.state.tasks, filtering: false})\n  \t}\n\n  \tgetTasks = async (projectId) => {\n\t\t\tconst resp = await getRequest('/get_tasks', `project_id=${projectId}`)\n\t    const timeboxes = resp.data['timeboxes']\n\t    const themes = resp.data['themes']\n\t    this.setState({ tasks: resp.data['tasks'],\n\t    \t\t\t\t\t\t\t\tvisibleTasks: resp.data['tasks'],\n\t    \t\t\t\t\t\t\t\tthemes:themes,\n\t    \t\t\t\t\t\t\t\ttimeboxes: timeboxes\n\t    \t\t\t\t\t\t\t});\n  };\n\n  \tcheckForInProgressTimeboxes = (timeboxes) => {\n  \t\ttimeboxes.forEach(timebox => {\n    \tif (timebox.status === 'In Progress') {\n    \t\tthis.setState({timeboxRedirect: timebox.id, ipTimeboxName: timebox.title})\n    \t}\n    \tthis.setState({dataReceived: true})\n    })\n\n  \t}\n\n   \tasync componentDidMount() {\n   \t\tconst sp = new URLSearchParams(this.props.location.query);\n\t\t\tconst projectId = Number(sp.get(\"projectId\"))\n\t\t\tif (projectId === null || projectId === 0) {\n\t\t\t\tthis.props.history.push('/')\n\t\t\t} else {\n\t\t\t\tthis.setState({projectId: projectId})\n\t\t\t\tawait this.getTasks(projectId);\n\t\t\t\tthis.checkForInProgressTimeboxes(this.state.timeboxes) //why is this function essential for rendrering anything????\n\t\t\t}\n\n    }\n\n    onDragEnd = async (result) => {\n\n  \t\tconst {destination, source, draggableId} = result;\n\n  \t\tif (!destination) {\n  \t\t\t//dragging somewhere non-droppable\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (\n  \t\t\t//dragging and dropping into same place\n  \t\t\tdestination.droppableId === source.droppableId &&\n  \t\t\tdestination.index === source.index\n  \t\t\t) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tconst taskId = Number(draggableId)\n  \t\tconst obj = this.state.tasks.find(o => o.id === taskId);\n\n  \t\tif (destination.droppableId.slice(0,5) === 'Theme') {\n  \t\t\t//landed on a theme, keep timebox the same and update the theme\n  \t\t\tconst themeId = Number(destination.droppableId.slice(6,11))\n\t\t\t\tconst data = {\n\t  \t\t\tproject_id: this.state.projectId,\n\t  \t\t\ttask_id: taskId,\n\t  \t\t\ttheme_id: themeId\n\t\t\t\t}\n\t\t\t\tpostRequest('/update_task_theme', data)\n\n\t  \t\tconst themeObj = this.state.themes.find(o => o.id === themeId)\n\n\t  \t\tobj.theme = themeObj.title\n\t  \t\tobj.theme_color = themeObj.color\n\n  \t\t}\n\n  \t\telse if (destination.droppableId.slice(0,7) === 'Timebox') {\n  \t\t\t//landed in a timebox - get timebox, remove from tasks, update timebox and put back in new position\n  \t\t\tconst timebox = destination.droppableId.slice(8,)\n\t\t\t\tconst data = {\n\t\t\t\t\tproject_id: this.state.projectId,\n\t\t\t\t\ttask_id: taskId,\n\t\t\t\t\tpriority: result.destination.index,\n\t\t\t\t\ttimebox: timebox\n\t\t\t\t}\n\t\t\t\tpostRequest('/update_task', data)\n\n\t  \t\tobj.timebox = timebox\n\n\t\t  \tconst newTasks = this.state.tasks.filter(t => t !== obj)\n\t\t\t\tnewTasks.splice(result.destination.index,0, obj)\n\t\t\t\tthis.setState({\n\t\t    \ttasks: newTasks,\n\t\t    \tvisibleTasks: newTasks\n\t\t    \t})\n\t\t\t}\n\n\t\t\telse if (destination.droppableId === 'Backlog') {\n\t\t\t\t//landed in backlog - remove from source list, add to backlog and update state with all the updated lists\n\t\t\t\tconst data = {\n\t  \t\t\tproject_id: this.state.projectId,\n\t  \t\t\ttask_id: taskId,\n\t  \t\t\tpriority: result.destination.index,\n\t  \t\t\ttimebox: destination.droppableId\n\t  \t\t}\n\t\t\t\tpostRequest('/update_task', data)\n\n\t  \tconst destinationList = this.state.tasks.filter(t => t.timebox === destination.droppableId);\n\t  \tconst otherTasks = this.state.tasks.filter(t => t.timebox !== destination.droppableId);\n\n\t\t\tif (source.droppableId === destination.droppableId) {\n\t\t\t\t//same list so simply take it out and put it bakc in new position\n\t\t\t\tlet backlogTasks = this.state.tasks.filter(t => t.timebox === source.droppableId);\n\t\t\t\tbacklogTasks = this.state.tasks.filter(t => t !== obj);\n\n\t\t\t\tbacklogTasks.splice(result.destination.index,0, obj)\n\t\t\t\tthis.setState({\n\t\t    \ttasks: backlogTasks,\n\t\t    \tvisibleTasks: backlogTasks\n\t\t    \t})\n\n\t\t\t} else {\n\t\t\t\t//moving from timebox to backlog so remove from source, add to backlog at index and all tasks back to state\n\t\t\t\tobj.timebox = 'Backlog'\n\n\t\t\t\tthis.setState({\n\t\t    \ttasks: [...otherTasks, ...destinationList],\n\t\t    \tvisibleTasks: [ ...otherTasks, ...destinationList]\n\t\t    \t})\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log('Unexpected drop destination')\n\t\t}\n\n  \t}\n\n\n\trender() {\n\t\treturn   this.state.dataReceived === true ? (\n\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\t\tonDragEnd = {this.onDragEnd}\n\t\t\t\t\t\t\tonDragUpdate={this.onDragUpdate}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className='board row mt-5' style={{margin: 0}}>\n\t\t\t\t\t\t\t\t<Themes\n\t\t\t\t\t\t\t\t\tthemes={this.state.themes}\n\t\t\t\t\t\t\t\t\tfilterByTheme={this.filterByTheme}\n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t\taddTheme={this.addTheme}\n\t\t\t\t\t\t\t\t\tdeleteTheme={this.deleteTheme}\n\t\t\t\t\t\t\t\t\tfiltering={this.state.filtering}\n\t\t\t\t\t\t\t\t\tclearFilters={this.clearFilters}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Backlog\n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t  tasks={this.state.visibleTasks}\n\t\t\t\t\t\t\t\t  addTask={this.addTask}\n\t\t\t\t\t\t\t\t  deleteTask={this.deleteTask}\n\t\t\t\t\t\t\t\t\tthemes={this.state.themes}\n\t\t\t\t\t\t\t\t\teditTask={this.editTask}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Timeboxes\n\t\t\t\t\t\t\t\t\taddTimebox={this.addTimebox}\n\t\t\t\t\t\t\t\t\tdeleteTimebox={this.deleteTimebox}\n\t\t\t\t\t\t\t\t\teditTimebox={this.editTimebox}\n\t\t\t\t\t\t\t\t\ttimeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\ttasks={this.state.visibleTasks}\n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t\tupdateTimeboxStatus={this.updateTimeboxStatus}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t \t</div>\n\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t\t)\n\t\t\t\t\t: <div></div>\n\t}\n}\n\n\nexport { Board }\n"]},"metadata":{},"sourceType":"module"}