{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddTheme extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.addTheme = async event => {\n      await axios.post('/add_theme', {\n        title: this.state.title\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-theme-form\",\n      onSubmit: this.addTheme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control form-control-sm m-2\",\n          type: \"text\",\n          value: this.state.title,\n          onChange: event => this.setState({\n            title: event.target.value\n          }),\n          placeholder: \"Add New theme\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Theme extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-button\",\n      onClick: () => this.props.filterByStatus(this.props.themeTitle),\n      style: {\n        backgroundColor: this.props.color\n      },\n      children: this.props.themeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst ClearFilters = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => props.filterByStatus(''),\n    children: \"clear\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ClearFilters;\n\nclass ThemeRow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filtering: false\n    };\n\n    this.filterByStatus = status => {\n      this.props.filterByStatus(status);\n\n      if (status === '') {\n        this.setState({\n          filtering: false\n        });\n      } else {\n        this.setState({\n          filtering: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.props.themes !== [] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [this.props.themes.map(theme => /*#__PURE__*/_jsxDEV(Theme, {\n          themeTitle: theme.title,\n          color: theme.color,\n          filterByStatus: this.filterByStatus\n        }, theme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(AddTheme, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), this.state.filtering === true ? /*#__PURE__*/_jsxDEV(ClearFilters, {\n          filterByStatus: this.filterByStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TasksColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n\n    this.changePriority = async (task_id, priority) => {\n      const resp = await axios.post('/update_priority', {\n        task_id: task_id,\n        priority: priority\n      });\n      await this.setState({\n        tasks: resp.data['tasks']\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      tasks: this.props\n    });\n    this.setState({\n      data_received: true\n    });\n  }\n\n  render() {\n    const tasks = [...this.state.tasks].sort((a, b) => a.priority > b.priority ? 1 : -1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mx-auto w-100\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n            last: task.priority === tasks.length - 1 ? true : false,\n            updateStatus: this.props.updateStatus,\n            changePriority: this.changePriority,\n            themes: this.props.themes,\n            ...task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst TaskList = props => {\n  const doneOnly = props.tasks.filter(task => task.status === 'Done');\n  const inProgressOnly = props.tasks.filter(task => task.status === 'In Progress');\n  const toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TasksColumn, {\n        tasks: toDoOnly,\n        updateStatus: props.updateStatus,\n        themes: props.themes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n        tasks: inProgressOnly,\n        updateStatus: props.updateStatus,\n        themes: props.themes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n        tasks: doneOnly,\n        updateStatus: props.updateStatus,\n        themes: props.themes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = TaskList;\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto mb-4\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data_received: false\n    };\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n\n    this.filterByStatus = async status => {\n      if (status === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.theme === status);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`);\n      await this.setState({\n        tasks: resp.data['tasks'],\n        themes: resp.data['themes']\n      });\n    };\n\n    this.updateStatus = (id, new_status) => {\n      const obj = this.state.tasks.find(o => o.id === id);\n      obj.status = new_status;\n      const all_tasks = this.state.tasks.filter(task => task !== obj);\n      this.setState(prevState => ({\n        tasks: [...all_tasks, obj]\n      }));\n    };\n  }\n\n  async componentDidMount() {\n    await this.getTasks();\n    this.setState({\n      data_received: true\n    });\n  }\n\n  render() {\n    return this.state.data_received === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ThemeRow, {\n        filterByStatus: this.filterByStatus,\n        themes: this.state.themes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: this.state.tasks,\n        themes: this.state.themes,\n        updateStatus: this.updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ClearFilters\");\n$RefreshReg$(_c2, \"TaskList\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","axios","Task","AddTheme","Component","state","title","addTheme","event","post","render","setState","target","value","Theme","props","filterByStatus","themeTitle","backgroundColor","color","ClearFilters","ThemeRow","filtering","status","themes","map","theme","id","TasksColumn","tasks","changePriority","task_id","priority","resp","data","componentDidMount","data_received","sort","a","b","task","length","updateStatus","TaskList","doneOnly","filter","inProgressOnly","toDoOnly","CreateTaskForm","handleSubmit","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","Header","App","addNewTask","taskData","prevState","getTasks","filteredTasks","get","new_status","obj","find","o","all_tasks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js'\n\nclass AddTheme extends React.Component {\n\tstate = {title: ''}\n\n\taddTheme = async (event) => {\n\t\tawait axios.post('/add_theme', {\n\t\t  title: this.state.title\n\t\t});\n\t}\n\n\trender() {\n\t\treturn <form className='add-theme-form' onSubmit={this.addTheme}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-sm m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"Add New theme\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t\t\t </form>\n\t}\n}\n\nclass Theme extends React.Component {\n\trender() {\n\t\treturn <div className='theme-button' onClick = {() => this.props.filterByStatus(this.props.themeTitle)} style={{backgroundColor: this.props.color}}>{this.props.themeTitle}</div>\n\t}\n}\n\nconst ClearFilters = (props) => {\n\treturn <button onClick={() => props.filterByStatus('')}>clear</button>\n}\n\nclass ThemeRow extends React.Component {\n\tstate = {filtering: false}\n\n\tfilterByStatus = (status) => {\n\t\tthis.props.filterByStatus(status);\n\t\tif (status === '') {\n\t\t\tthis.setState({filtering: false})\n\t\t} else {\n\t\t\tthis.setState({filtering: true})\n\t  }\n\t}\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t\t\t{this.props.themes !== [] ?  (\n\t\t\t\t\t\t\t\t <div className='col-12'>\n\t\t\t\t\t\t\t\t\t{this.props.themes.map(theme => \n\t\t\t\t\t\t\t\t\t\t<Theme key={theme.id} themeTitle={theme.title} color={theme.color} filterByStatus={this.filterByStatus}/>)}\n\t\t\t\t\t\t\t\t\t\t<AddTheme />\n\t\t\t\t\t\t\t\t\t\t{this.state.filtering === true ? (\n\t\t\t\t\t\t\t\t\t\t\t<ClearFilters filterByStatus={this.filterByStatus}/>) : <div></div> }\n\t\t\t\t\t\t\t\t </div> )\n\t\t\t\t\t\t\t\t: <div></div> }\t\t\t\t\t\t \t\n\t\t\t\t\t </div>\n\n\t}\n\t\t\t\t\t\n}\n\nclass TasksColumn extends React.Component {\n\tstate = {tasks: []}\n\n\tchangePriority = async (task_id, priority) => {\n\t\tconst resp = await axios.post('/update_priority', {\n\t\t\ttask_id: task_id,\n\t\t\tpriority: priority\n\t\t\t});\n\t\t\tawait this.setState({tasks: resp.data['tasks']})\n\t\t}\t\n\n\t\tcomponentDidMount() {\n    \tthis.setState({tasks: this.props});\n    \tthis.setState({data_received: true})\n\n    }\n\n\trender() {\n\t\tconst tasks = [...this.state.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n\t\treturn <div className='col-4'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t{tasks.map(task => \n\t\t\t\t\t\t\t\t\t\t<Task key={task.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast={task.priority === tasks.length -1 ? true : false}\n\t\t\t\t\t\t\t\t\t\t \t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nconst TaskList = (props) => {\n  \tconst doneOnly = props.tasks.filter(task => task.status === 'Done');\n \t\tconst inProgressOnly = props.tasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n\n\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<TasksColumn tasks={toDoOnly}  updateStatus={props.updateStatus} themes={props.themes}/>\n\t\t\t\t\t\t<TasksColumn tasks={inProgressOnly}  updateStatus={props.updateStatus} themes={props.themes}/>\n\t\t\t\t\t\t<TasksColumn tasks={doneOnly}  updateStatus={props.updateStatus} themes={props.themes}/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t</div>\n\n\t\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto mb-4'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass App extends React.Component {\n\t\tstate = {data_received:false}\n\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n  \tfilterByStatus = async (status) => {\n  \t\t\tif (status === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === status);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n\t  \t\t\n  \t}\n\n  \tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`);\n    await this.setState({ tasks: resp.data['tasks'], themes:resp.data['themes'] });\n  };\n\n  \tupdateStatus = (id, new_status) => {\n  \t\tconst obj = this.state.tasks.find(o => o.id === id);\n  \t\tobj.status = new_status\n  \t\tconst all_tasks = this.state.tasks.filter(task => task !== obj)\n  \t\tthis.setState(prevState => ({\n    \ttasks: [...all_tasks, obj],\n    }));\n  \t}\n\n\n  \n\n   \tasync componentDidMount() {\n    \tawait this.getTasks();\n    \tthis.setState({data_received: true})\n\n    }\n\n\trender() {\n\t\treturn this.state.data_received === true ? (\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<ThemeRow filterByStatus={this.filterByStatus} themes={this.state.themes}/>\n\t\t\t\t\t\t<TaskList tasks={this.state.tasks} themes={this.state.themes} updateStatus={this.updateStatus}/>\n\t\t\t\t\t </div> )\n\t\t\t\t\t: <div></div>\n\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}