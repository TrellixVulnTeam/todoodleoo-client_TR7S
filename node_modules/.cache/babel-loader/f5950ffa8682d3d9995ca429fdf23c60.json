{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/Working/Working.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CTA = props => {\n  if (props.taskStatus === 'To Do') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-primary\",\n      onClick: () => props.changeStatus('In Progress'),\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }, this);\n  } else if (props.taskStatus === 'In Progress') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-success\",\n      onClick: () => props.changeStatus('Done'),\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-warning\",\n      onClick: () => props.changeStatus('To Do'),\n      children: \"Actually, I'm Not Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this);\n  }\n};\n\n_c = CTA;\n\nconst CloseTimebox = props => {\n  _s();\n\n  const history = useHistory();\n  const path = {\n    pathname: '/planning',\n    query: {\n      projectId: props.projectId\n    }\n  };\n\n  const close = () => {\n    axios.post('/update_timebox_status', {\n      project_id: props.projectId,\n      timebox_id: props.timeboxId,\n      status: 'Closed'\n    }).then(history.push(path));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn btn-primary w-100 mt-2\",\n    onClick: () => close(),\n    children: \"Complete Timebox\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CloseTimebox, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = CloseTimebox;\n\nconst ReopenTimeBox = props => {\n  _s2();\n\n  const history = useHistory();\n  const path = {\n    pathname: '/planning',\n    query: {\n      projectId: props.projectId\n    }\n  };\n\n  const reopen = () => {\n    axios.post('/update_timebox_status', {\n      project_id: props.projectId,\n      timebox_id: props.timeboxId,\n      status: 'To Do'\n    }).then(response => {\n      history.push(path);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn btn-secondary w-100 mt-2\",\n    onClick: () => reopen(),\n    children: \"Back to Planning\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ReopenTimeBox, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = ReopenTimeBox;\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeStatus = targetStatus => {\n      axios.post('/update_task_status', {\n        task_id: this.props.task.id,\n        target_status: targetStatus\n      });\n      this.setState({\n        status: targetStatus\n      });\n    };\n\n    this.state = { ...this.props.task\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-75 mx-auto mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: this.props.task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cta-container\",\n          children: /*#__PURE__*/_jsxDEV(CTA, {\n            taskStatus: this.state.status,\n            changeStatus: this.changeStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Tasks extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: this.props.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Working extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getTimeboxTasks = async (projectId, timeboxId) => {\n      const resp = await axios.get(`/get_tasks_of_timebox?project_id=${projectId}&timebox_id=${timeboxId}`);\n      tasks = [...this.props.tasks].sort((a, b) => a.priority > b.priority ? 1 : -1);\n      console.log(tasks);\n      this.setState({\n        tasks: resp.data.tasks\n      });\n    };\n\n    const sp = new URLSearchParams(this.props.location.query);\n\n    const _projectId = sp.get(\"projectId\");\n\n    const _timeboxId = sp.get(\"timeboxId\");\n\n    if (_projectId === null) {\n      this.props.history.push('/');\n    }\n\n    ;\n    this.getTimeboxTasks(_projectId, _timeboxId).then(this.state = {\n      dataReceived: true,\n      projectId: _projectId,\n      timeboxId: _timeboxId,\n      tasks: []\n    });\n  }\n\n  render() {\n    if (this.state.dataReceived === false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"abc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 10\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row working-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8 mx-auto\",\n            children: [/*#__PURE__*/_jsxDEV(ReopenTimeBox, {\n              projectId: this.state.projectId,\n              timeboxId: this.state.timeboxId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(CloseTimebox, {\n              projectId: this.state.projectId,\n              timeboxId: this.state.timeboxId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: this.state.tasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 12\n      }, this);\n    }\n  }\n\n}\n\nexport default Working;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CTA\");\n$RefreshReg$(_c2, \"CloseTimebox\");\n$RefreshReg$(_c3, \"ReopenTimeBox\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/Working/Working.js"],"names":["React","axios","useHistory","CTA","props","taskStatus","changeStatus","CloseTimebox","history","path","pathname","query","projectId","close","post","project_id","timebox_id","timeboxId","status","then","push","ReopenTimeBox","reopen","response","error","console","log","Task","Component","constructor","targetStatus","task_id","task","id","target_status","setState","state","render","title","Tasks","tasks","map","Working","getTimeboxTasks","resp","get","sort","a","b","priority","data","sp","URLSearchParams","location","dataReceived"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nconst CTA = (props) => {\n\tif (props.taskStatus === 'To Do') {\n\t\treturn <div className='btn btn-primary' onClick = {() => props.changeStatus('In Progress')}>Start</div>\n\t} else if ( props.taskStatus === 'In Progress') {\n\t\treturn <div className='btn btn-success' onClick = {() => props.changeStatus('Done')}>Complete</div>\n\t} else {\n\t\treturn <div className='btn btn-warning' onClick = {() => props.changeStatus('To Do')}>Actually, I'm Not Done</div>\n\t}\n}\n\nconst CloseTimebox = (props) => {\n\tconst history = useHistory();\n\tconst path = {pathname: '/planning', query: {projectId: props.projectId}}\n\tconst close = () => {\n\t\taxios.post('/update_timebox_status', {\n\t\tproject_id: props.projectId,\n\t\ttimebox_id: props.timeboxId,\n\t\tstatus: 'Closed'\n\t\t}).then(history.push(path))\n\t}\n\n\treturn <div \n\t\t\tclassName='btn btn-primary w-100 mt-2'\n\t\t\tonClick = {() => close()}>\n\t\t\t\tComplete Timebox\n\t\t\t</div>\n}\n\nconst ReopenTimeBox = (props) => {\n\tconst history = useHistory();\n\tconst path = {pathname: '/planning', query: {projectId: props.projectId}}\n\tconst reopen = () => {\n\t\taxios.post('/update_timebox_status', {\n\t\tproject_id: props.projectId,\n\t\ttimebox_id: props.timeboxId,\n\t\tstatus: 'To Do'\n\t\t}).then((response) => {\n\t\t  history.push(path)\n\t\t}, (error) => {\n\t\t  console.log(error);\n\t\t});\n\t}\n\n\treturn <div \n\t\t\tclassName='btn btn-secondary w-100 mt-2'\n\t\t\tonClick = {() => reopen()}>\n\t\t\t\tBack to Planning\n\t\t\t</div>\n}\n\nclass Task extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n    this.state = {...this.props.task};\n  }\n\n\tchangeStatus = (targetStatus) => {\n\t\taxios.post('/update_task_status', {\n\t\t\ttask_id: this.props.task.id,\n\t\t\ttarget_status: targetStatus\n\t\t})\n\t\tthis.setState({status: targetStatus})\n\t}\n\n\trender() {\n\t\treturn <div className='card w-75 mx-auto mt-2'>\n\t\t\t\t<div className='card-body'>\n\t\t\t\t\t<div className='card-title'> \n\t\t\t\t\t\t{this.props.task.title}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='cta-container'>\n\t\t\t\t\t\t\t<CTA taskStatus={this.state.status} changeStatus={this.changeStatus} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t   </div>\n\t}\n}\n\nclass Tasks extends React.Component {\n\trender() {\n\t\treturn <div className='col-12'>\n\t\t\t\t{this.props.tasks.map(task => \n\t\t\t\t\t<Task \n\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t  </div>\n\t}\n}\n\nclass Working extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n    const sp = new URLSearchParams(this.props.location.query);\n\tconst projectId = sp.get(\"projectId\")\n\tconst timeboxId = sp.get(\"timeboxId\")\n\tif (projectId === null) {\n\t\t\tthis.props.history.push('/')\n\t\t};\n\tthis.getTimeboxTasks(projectId, timeboxId).then(\n\t\tthis.state = {dataReceived: true, projectId: projectId, timeboxId: timeboxId, tasks: []})\n  }\n\n  \tgetTimeboxTasks = async (projectId, timeboxId) => {\n  \t\tconst resp = await axios.get(`/get_tasks_of_timebox?project_id=${projectId}&timebox_id=${timeboxId}`)\n  \t\ttasks = [...this.props.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n  \t\tconsole.log(tasks)\n  \t\tthis.setState({tasks: resp.data.tasks})\n  \t}\n\n\trender() {\n\t\tif (this.state.dataReceived === false) {\n\t\t\treturn<div>abc</div>\n\t\t}\n\t\telse {\n\t\t\treturn \t<div>\n\t\t\t\t\t\t<div className='row working-page'>\n\t\t\t\t\t\t\t<div className='col-8 mx-auto'>\n\t\t\t\t\t\t\t\t<ReopenTimeBox \n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t\ttimeboxId={this.state.timeboxId} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<CloseTimebox \n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t\ttimeboxId={this.state.timeboxId} \n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Tasks tasks={this.state.tasks} />\n\t\t\t\t\t\t</div>\n\t\t\t  \t\t</div>\n\t\t\t}\n\t}\n}\n\nexport default Working"]},"metadata":{},"sourceType":"module"}