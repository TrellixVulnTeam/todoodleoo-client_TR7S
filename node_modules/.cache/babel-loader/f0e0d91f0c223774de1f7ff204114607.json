{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js';\nimport SideMenu from './sidemenu.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TasksColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n  }\n\n  render() {\n    const tasks = [...this.props.tasks].sort((a, b) => a.priority > b.priority ? 1 : -1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mx-auto w-100\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n            last: task.priority === tasks.length - 1 ? true : false,\n            updateStatus: this.props.updateStatus,\n            changePriority: this.props.changePriority,\n            themes: this.props.themes,\n            epics: this.props.epics,\n            convertToEpic: this.props.convertToEpic,\n            ...task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst TaskList = props => {\n  const doneOnly = props.tasks.filter(task => task.status === 'Done');\n  const inProgressOnly = props.tasks.filter(task => task.status === 'In Progress');\n  const toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: toDoOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: inProgressOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: doneOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 11\n  }, this);\n};\n\n_c = TaskList;\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto mb-4\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst CreateTimebox = () => {\n  const createTimebox = () => {\n    axios.post('/create_timebox');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: createTimebox,\n    children: \"Create Timebox\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = CreateTimebox;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data_received: false\n    };\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n\n    this.changePriority = async (task_id, direction) => {\n      await axios.post('/update_priority', {\n        task_id: task_id,\n        priority: direction\n      });\n      this.getTasks();\n    };\n\n    this.filterByStatus = async status => {\n      if (status === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.theme === status);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.filterByEpic = async epic => {\n      if (epic === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.filterByTimebox = async timebox => {\n      if (timebox === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.timebox === timebox);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`);\n      await this.setState({\n        tasks: resp.data['tasks'],\n        themes: resp.data['themes'],\n        epics: resp.data['epics'],\n        timeboxes: resp.data['timeboxes']\n      });\n    };\n\n    this.updateStatus = (id, new_status) => {\n      const obj = this.state.tasks.find(o => o.id === id);\n      obj.status = new_status;\n      const all_tasks = this.state.tasks.filter(task => task !== obj);\n      this.setState(prevState => ({\n        tasks: [...all_tasks, obj]\n      }));\n    };\n\n    this.convertToEpic = task_id => {\n      axios.post('/convert_to_epic', {\n        task_id: task_id\n      });\n      this.getTasks();\n    };\n  }\n\n  async componentDidMount() {\n    await this.getTasks();\n    this.setState({\n      data_received: true\n    });\n  }\n\n  render() {\n    return this.state.data_received === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SideMenu, {\n        filterByStatus: this.filterByStatus,\n        filterByEpic: this.filterByEpic,\n        filterByTimebox: this.filterByTimebox,\n        epics: this.state.epics,\n        themes: this.state.themes,\n        timeboxes: this.state.timebox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: this.state.tasks,\n        themes: this.state.themes,\n        epics: this.state.epics,\n        timeboxes: this.state.timeboxes,\n        updateStatus: this.updateStatus,\n        changePriority: this.changePriority,\n        convertToEpic: this.convertToEpic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(CreateTimebox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskList\");\n$RefreshReg$(_c2, \"CreateTimebox\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","axios","Task","SideMenu","TasksColumn","Component","state","tasks","render","props","sort","a","b","priority","map","task","length","updateStatus","changePriority","themes","epics","convertToEpic","id","TaskList","doneOnly","filter","status","inProgressOnly","toDoOnly","CreateTaskForm","title","handleSubmit","event","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","setState","target","value","Header","CreateTimebox","createTimebox","post","App","data_received","addNewTask","taskData","prevState","task_id","direction","getTasks","filterByStatus","filteredTasks","theme","filterByEpic","epic","filterByTimebox","timebox","resp","get","timeboxes","new_status","obj","find","o","all_tasks","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js'\nimport SideMenu from './sidemenu.js'\n\nclass TasksColumn extends React.Component {\n\tstate = {tasks: []}\n\trender() {\n\t\tconst tasks = [...this.props.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n\t\treturn <div className='col-3'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t{tasks.map(task => \n\t\t\t\t\t\t\t\t\t\t<Task key={task.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast={task.priority === tasks.length -1 ? true : false}\n\t\t\t\t\t\t\t\t\t\t \t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.props.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes}\n\t\t\t\t\t\t\t\t\t\t\t\t\tepics={this.props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nconst TaskList = (props) => {\n  \tconst doneOnly = props.tasks.filter(task => task.status === 'Done');\n \t\tconst inProgressOnly = props.tasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n\n\t\treturn  <React.Fragment>\n\t\t\t\t\t\t<TasksColumn tasks={toDoOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TasksColumn tasks={inProgressOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TasksColumn tasks={doneOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\t\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto mb-4'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nconst CreateTimebox = () => {\n\tconst createTimebox = () => {\n\t\taxios.post('/create_timebox')\n\t}\n\treturn <button onClick={createTimebox}>Create Timebox</button>\n}\n\nclass App extends React.Component {\n\t\tstate = {data_received:false}\n\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n  \tchangePriority = async (task_id, direction) => {\n  \t\tawait axios.post('/update_priority', {\n  \t\t\ttask_id: task_id,\n  \t\t\tpriority: direction\n  \t\t})\n  \t\tthis.getTasks()\n  \t}\n\n  \tfilterByStatus = async (status) => {\n  \t\t\tif (status === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === status);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\t\t\n  \t}\n\n  \tfilterByEpic = async (epic) => {\n  \t\t\tif (epic === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n  \t}\n\n  \tfilterByTimebox = async (timebox) => {\n  \t\t\tif (timebox === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.timebox === timebox);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n  \t}\n\n  \tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`);\n    await this.setState({ tasks: resp.data['tasks'], themes:resp.data['themes'], epics: resp.data['epics'], timeboxes: resp.data['timeboxes'] });\n  };\n\n  \tupdateStatus = (id, new_status) => {\n  \t\tconst obj = this.state.tasks.find(o => o.id === id);\n  \t\tobj.status = new_status\n  \t\tconst all_tasks = this.state.tasks.filter(task => task !== obj)\n  \t\tthis.setState(prevState => ({\n    \ttasks: [...all_tasks, obj],\n    \t}));\n  \t}\n\n  \tconvertToEpic = ( task_id) => {\n  \t\taxios.post('/convert_to_epic', {\n  \t\t\ttask_id: task_id\n  \t\t})\n  \t\tthis.getTasks()\n  \t}\n\n   \tasync componentDidMount() {\n    \tawait this.getTasks();\n    \tthis.setState({data_received: true})\n    }\n\n\trender() {\n\t\treturn this.state.data_received === true ? (\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<SideMenu filterByStatus={this.filterByStatus} \n\t\t\t\t\t\t\t\t\t\t\tfilterByEpic={this.filterByEpic}\n\t\t\t\t\t\t\t\t\t\t\tfilterByTimebox={this.filterByTimebox}\n\t\t\t\t\t\t\t\t\t\t\tepics={this.state.epics}\n\t\t\t\t\t\t\t\t\t\t\tthemes={this.state.themes}\n\t\t\t\t\t\t\t\t\t\t\ttimeboxes={this.state.timebox}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TaskList tasks={this.state.tasks} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.state.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={this.state.epics}\n\t\t\t\t\t\t\t\t\t\t\t\ttimeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t<CreateTimebox />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t </div> )\n\t\t\t\t\t: <div></div>\n\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}