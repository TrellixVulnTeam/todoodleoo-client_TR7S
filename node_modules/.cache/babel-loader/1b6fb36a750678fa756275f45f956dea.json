{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap';\nimport logo from \"./logo.svg\";\nimport './App.css';\n/*\n\nconst CardList = (props) => (\n\t<div>\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\n\t</div>\n);\n\nclass Card extends React.Component {\n\trender() {\n  \tconst profile = this.props;\n  \treturn (\n    \t<div className=\"github-profile\">\n    \t  <img src={profile.avatar_url} />\n        <div className=\"info\">\n          <div className=\"name\">{profile.name}</div>\n          <div className=\"company\">{profile.company}</div>\n        </div>\n    \t</div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n\tstate = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n    \t  <input \n          type=\"text\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"GitHub username\" \n          required \n        />\n        <button>Add card</button>\n    \t</form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  };\n  addNewProfile = (profileData) => {\n  \tthis.setState(prevState => ({\n    \tprofiles: [...prevState.profiles, profileData],\n    }));\n  };\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div className=\"header\">{this.props.title}</div>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n    \t</div>\n    );\n  }\t\n}\n\nReactDOM.render(\n\t<App title=\"The GitHub Cards App\" />,\n  mountNode,\n);\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-25 mb-2\",\n      children: this.props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"I am the Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), this.props.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, { ...task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault(); //const resp = await axios.post(`https://api.github.com/users/${this.state.userName}`);\n\n      const response = await fetch(url, {\n        method: 'POST',\n        // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors',\n        // no-cors, *cors, same-origin\n        cache: 'no-cache',\n        // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin',\n        // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        redirect: 'follow',\n        // manual, *follow, error\n        referrerPolicy: 'no-referrer',\n        // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n\n      this.props.onSubmit(resp.data);\n      this.setState({\n        userName: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: this.state.title,\n        onChange: event => this.setState({\n          title: event.target.value\n        }),\n        placeholder: \"Task Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...prevState.tasks, taskData]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    fetch('/get_tasks').then(response => response.json()).then(data => this.setState({\n      tasks: data['tasks']\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: this.state.tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","useState","useEffect","Header","Component","render","Task","props","title","TaskList","tasks","map","task","id","CreateTaskForm","state","handleSubmit","event","preventDefault","response","fetch","url","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","data","json","onSubmit","resp","setState","userName","target","value","App","addNewTask","taskData","prevState","componentDidMount","then"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap';\nimport logo from './logo.svg';\nimport './App.css';\n\n/*\n\nconst CardList = (props) => (\n\t<div>\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\n\t</div>\n);\n\nclass Card extends React.Component {\n\trender() {\n  \tconst profile = this.props;\n  \treturn (\n    \t<div className=\"github-profile\">\n    \t  <img src={profile.avatar_url} />\n        <div className=\"info\">\n          <div className=\"name\">{profile.name}</div>\n          <div className=\"company\">{profile.company}</div>\n        </div>\n    \t</div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n\tstate = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n    \t  <input \n          type=\"text\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"GitHub username\" \n          required \n        />\n        <button>Add card</button>\n    \t</form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  };\n  addNewProfile = (profileData) => {\n  \tthis.setState(prevState => ({\n    \tprofiles: [...prevState.profiles, profileData],\n    }));\n  };\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div className=\"header\">{this.props.title}</div>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n    \t</div>\n    );\n  }\t\n}\n\nReactDOM.render(\n\t<App title=\"The GitHub Cards App\" />,\n  mountNode,\n);\n\n*/\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='header'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\n\nclass Task extends React.Component {\n\trender() {\n\t\treturn <div className='card w-25 mb-2'>{this.props.title}</div>\n\t}\n}\n\nclass TaskList extends React.Component {\n\trender() {\n\t\treturn <div>\n\t\t\t\t\t\t<h5>I am the Task List</h5>\n\t\t\t\t\t\t{this.props.tasks.map(task => <Task key={task.id} {...task}/>)}\n\t\t\t\t\t </div>\n\t}\n}\t\t\t\t\t\t\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    //const resp = await axios.post(`https://api.github.com/users/${this.state.userName}`);\n    const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender () {\n\t\treturn <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<input \n\t\t          type=\"text\" \n\t\t          value={this.state.title}\n\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t          placeholder=\"Task Name\" \n\t\t          required \n\t\t        />\n\t\t\t\t\t\t<button className='btn btn-primary'>Add Task</button>\n\t\t\t\t\t </form>\n\t}\n}\n\nclass App extends React.Component {\n\tstate = {tasks: []}\n\tcomponentDidMount() {\n    fetch('/get_tasks')\n      .then((response) => response.json())\n      .then((data) => this.setState({ tasks: data['tasks'] }));\n\n\t\t};\n\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...prevState.tasks, taskData],\n    }));\n  };\n\trender() {\n\t\treturn <div>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<TaskList tasks={this.state.tasks}/>\n\t\t\t\t\t </div>\n\t}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}