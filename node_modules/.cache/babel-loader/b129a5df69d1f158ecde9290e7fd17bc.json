{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/Themes/Themes.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport deleteIcon from './img/delete_icon.png';\nimport { Droppable } from 'react-beautiful-dnd';\nimport './themes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddTheme extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.addTheme = async event => {\n      event.preventDefault();\n      axios.post('/add_theme', {\n        title: this.state.title,\n        project_id: this.props.projectId\n      }).then(response => {\n        this.props.addTheme(response.data);\n      }, error => {\n        console.log(error);\n      });\n      this.setState({\n        title: ''\n      });\n    };\n\n    this.form = () => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-element-form col-4\",\n        onSubmit: this.addTheme,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group element-input \",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control form-control m-2\",\n            type: \"text\",\n            value: this.state.title,\n            onChange: event => this.setState({\n              title: event.target.value\n            }),\n            placeholder: \"Add Theme\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this);\n    };\n  }\n\n  render() {\n    return this.form();\n  }\n\n}\n\nconst Theme = props => {\n  const deleteTheme = themeId => {\n    axios.post('/delete_theme', {\n      theme_id: themeId,\n      project_id: props.projectId\n    }).then(response => {\n      props.deleteTheme(response.data.themes);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  const theme = String('Theme:' + props.data.id);\n  return /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: theme,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: provided.innerRef,\n      className: \"container card theme col-4\",\n      style: {\n        backgroundColor: props.data.color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => props.filterByTheme(props.title),\n        className: \"theme-title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-delete-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"delete-icon\",\n          className: \"delete-icon\",\n          onClick: () => deleteTheme(props.data.id),\n          src: deleteIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Theme;\n\nclass Themes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterByTheme = theme => {\n      this.props.filterByTheme(theme);\n\n      if (theme === '') {\n        this.setState({\n          filtering: false\n        });\n      } else {\n        this.setState({\n          filtering: true\n        });\n      }\n    };\n\n    this.addTheme = themeData => {\n      this.setState(prevState => ({\n        themes: [...this.props.themes, themeData]\n      }));\n    };\n\n    this.deleteTheme = remainingThemes => {\n      console.log(remainingThemes);\n      this.setState(prevState => ({\n        themes: remainingThemes\n      }));\n    };\n\n    this.state = {\n      themes: props.themes\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container mx-auto text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Themes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [this.state.themes.map(theme => /*#__PURE__*/_jsxDEV(Theme, {\n            projectId: this.props.projectId,\n            data: theme,\n            filterByTheme: this.filterByTheme,\n            title: theme.title,\n            deleteTheme: this.deleteTheme\n          }, theme.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }, this)), /*#__PURE__*/_jsxDEV(AddTheme, {\n            projectId: this.props.projectId,\n            addTheme: this.addTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Themes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Theme\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/Themes/Themes.js"],"names":["React","axios","deleteIcon","Droppable","AddTheme","Component","state","title","addTheme","event","preventDefault","post","project_id","props","projectId","then","response","data","error","console","log","setState","form","target","value","render","Theme","deleteTheme","themeId","theme_id","themes","theme","String","id","provided","innerRef","backgroundColor","color","filterByTheme","Themes","constructor","filtering","themeData","prevState","remainingThemes","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport deleteIcon from './img/delete_icon.png';\nimport { Droppable } from 'react-beautiful-dnd';\nimport './themes.css'\n\nclass AddTheme extends React.Component {\n\tstate = {title: ''}\n\n\taddTheme = async (event) => {\n\t\tevent.preventDefault()\n\t\taxios.post('/add_theme', {\n\t\t  title: this.state.title,\n    \t  project_id: this.props.projectId\n\t\t})\n\t\t.then((response) => {\n\t\t  this.props.addTheme(response.data)\n\t\t}, (error) => {\n\t\t  console.log(error);\n\t\t});\n\t\tthis.setState({title: ''})\n\n\t}\n\n\tform = () => {\n\t\treturn <form className='add-element-form col-4' onSubmit={this.addTheme}>\n\t\t\t\t\t\t\t\t\t\t \t<div className='form-group element-input '>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control form-control m-2'\n\t\t\t\t\t\t\t\t          type=\"text\" \n\t\t\t\t\t\t\t\t          value={this.state.title}\n\t\t\t\t\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t\t\t\t\t          placeholder='Add Theme'\n\t\t\t\t\t\t\t\t          required \n\t\t\t\t\t\t\t\t        />\n\t\t\t\t\t\t\t\t        </div>\n\t\t\t\t\t\t\t\t\t\t </form>\n\t\t}\n\n\trender() {\n\t\t\t\t\t\treturn this.form()\n\t}\n}\n\nconst Theme = (props) => {\n\tconst deleteTheme = (themeId) => {\n\t\t\taxios.post('/delete_theme', {\n\t\t\t\ttheme_id: themeId,\n\t\t\t\tproject_id: props.projectId\n\t\t\t}).then( (response) => {\n\t\t\t\tprops.deleteTheme(response.data.themes)\n\t\t\t}, (error) => {\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\t} \n\t\tconst theme = String('Theme:' + props.data.id)\n\treturn  <Droppable droppableId={theme}>\n\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t  <div ref={provided.innerRef} className='container card theme col-4' style={{backgroundColor: props.data.color}}>\n\t\t\t\t<div onClick = {() => props.filterByTheme(props.title)} className='theme-title'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{props.data.title}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='theme-delete-icon'>\n\t\t\t\t\t<img alt=\"delete-icon\" className='delete-icon' onClick={() => deleteTheme(props.data.id)} src={deleteIcon}></img>\n\t\t\t\t</div>\n\t\t\t  </div>)}\n\t\t\t</Droppable>\n}\n\n\n\n\nclass Themes extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n\n    this.state = {\n      themes: props.themes\n    };\n  }\n\n\tfilterByTheme = (theme) => {\n\t\tthis.props.filterByTheme(theme);\n\t\tif (theme === '') {\n\t\t\tthis.setState({filtering: false})\n\t\t} else {\n\t\t\tthis.setState({filtering: true})\n\t  }\n\t}\n\n\taddTheme = (themeData) => {\n  \tthis.setState(prevState => ({\n    \tthemes: [...this.props.themes, themeData],\n    }));\n  };\n\n  \tdeleteTheme = (remainingThemes) => {\n  \t\tconsole.log(remainingThemes)\n\t\tthis.setState(prevState => ({\n\t\tthemes: remainingThemes,\n    }));\n  };\n\n\n\n\trender() {\n\t\treturn  <div className='row'>\n\t\t\t\t\t<div className='col-12'>\n\t\t\t\t\t\t<div className='container mx-auto text-center'>\n\t\t\t\t\t\t<h4>Themes</h4>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t{this.state.themes.map(theme => \n\t\t\t\t\t\t\t\t<Theme \n\t\t\t\t\t\t\t\t\tprojectId={this.props.projectId} \n\t\t\t\t\t\t\t\t\tkey={theme.id} data={theme} \n\t\t\t\t\t\t\t\t\tfilterByTheme={this.filterByTheme}\n\t\t\t\t\t\t\t\t\ttitle={theme.title}\n\t\t\t\t\t\t\t\t\tdeleteTheme={this.deleteTheme}\n\t\t\t\t\t\t\t\t/>)}\n\t\t\t\t\t\t\t<AddTheme projectId={this.props.projectId} addTheme={this.addTheme}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t}\n}\n\n\nexport default Themes\n\n\t\t\t"]},"metadata":{},"sourceType":"module"}