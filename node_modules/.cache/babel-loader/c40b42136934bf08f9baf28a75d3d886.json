{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport './App.css';\nimport Task from './task.js';\nimport SideMenu from './sidemenu.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TasksColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: this.props.tasks\n    };\n\n    this.handleOnDragEnd = result => {\n      const new_tasks = this.state.tasks;\n      console.log(result);\n      const draggedTask = new_tasks.find(o => o.title = result.draggableId);\n      console.log(draggedTask);\n    };\n  }\n\n  render() {\n    const tasks = [...this.state.tasks].sort((a, b) => a.priority > b.priority ? 1 : -1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: this.handleOnDragEnd,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"tasks\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6 mx-auto w-100\",\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n                last: task.priority === tasks.length - 1 ? true : false,\n                updateStatus: this.props.updateStatus,\n                changePriority: this.props.changePriority,\n                themes: this.props.themes,\n                epics: this.props.epics,\n                all_timeboxes: this.props.all_timeboxes,\n                convertToEpic: this.props.convertToEpic,\n                ...task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst TaskList = props => {\n  const doneOnly = props.tasks.filter(task => task.status === 'Done');\n  const inProgressOnly = props.tasks.filter(task => task.status === 'In Progress');\n  const toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: toDoOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: inProgressOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: doneOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 11\n  }, this);\n};\n\n_c = TaskList;\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto mb-4\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data_received: false\n    };\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n\n    this.changePriority = async (task_id, direction) => {\n      await axios.post('/update_priority', {\n        task_id: task_id,\n        priority: direction\n      });\n      this.getTasks();\n    };\n\n    this.filterByStatus = async status => {\n      if (status === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.theme === status);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.filterByEpic = async epic => {\n      if (epic === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.filterByTimebox = async timebox => {\n      if (timebox === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.timebox === timebox);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`);\n      await this.setState({\n        tasks: resp.data['tasks'],\n        themes: resp.data['themes'],\n        epics: resp.data['epics'],\n        timeboxes: resp.data['timeboxes']\n      });\n    };\n\n    this.updateStatus = (id, new_status) => {\n      const obj = this.state.tasks.find(o => o.id === id);\n      obj.status = new_status;\n      const all_tasks = this.state.tasks.filter(task => task !== obj);\n      this.setState(prevState => ({\n        tasks: [...all_tasks, obj]\n      }));\n    };\n\n    this.convertToEpic = task_id => {\n      const task = this.state.tasks.find(o => o.id === task_id);\n      const tasks = this.state.tasks.filter(t => t !== task);\n      this.setState(prevState => ({\n        tasks: tasks\n      }));\n      axios.post('/convert_to_epic', {\n        task_id: task_id\n      }).then(response => {\n        console.log(response);\n        const epic = {\n          id: response['data']['id'],\n          title: response['data']['title'],\n          color: response['data']['color']\n        };\n        this.setState({\n          epics: [...this.state.epics, epic]\n        });\n      }, error => {\n        console.log(error);\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.getTasks();\n    this.setState({\n      data_received: true\n    });\n  }\n\n  render() {\n    return this.state.data_received === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SideMenu, {\n        epics: this.state.epics,\n        themes: this.state.themes,\n        timeboxes: this.state.timeboxes,\n        filterByStatus: this.filterByStatus,\n        filterByEpic: this.filterByEpic,\n        filterByTimebox: this.filterByTimebox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: this.state.tasks,\n        themes: this.state.themes,\n        epics: this.state.epics,\n        all_timeboxes: this.state.timeboxes,\n        updateStatus: this.updateStatus,\n        changePriority: this.changePriority,\n        convertToEpic: this.convertToEpic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","axios","DragDropContext","Droppable","Task","SideMenu","TasksColumn","Component","state","tasks","props","handleOnDragEnd","result","new_tasks","console","log","draggedTask","find","o","title","draggableId","render","sort","a","b","priority","provided","droppableProps","innerRef","map","task","index","length","updateStatus","changePriority","themes","epics","all_timeboxes","convertToEpic","placeholder","TaskList","doneOnly","filter","status","inProgressOnly","toDoOnly","CreateTaskForm","handleSubmit","event","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","setState","target","value","Header","App","data_received","addNewTask","taskData","prevState","task_id","direction","post","getTasks","filterByStatus","filteredTasks","theme","filterByEpic","epic","filterByTimebox","timebox","resp","get","timeboxes","id","new_status","obj","all_tasks","t","then","response","color","error","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport './App.css';\nimport Task from './task.js'\nimport SideMenu from './sidemenu.js'\n\nclass TasksColumn extends React.Component {\n\tstate = {tasks: this.props.tasks}\n\n\thandleOnDragEnd = (result) => {\n\t\tconst new_tasks = this.state.tasks\n\t\tconsole.log(result)\n\t\tconst draggedTask = new_tasks.find( o => o.title = result.draggableId)\n\t\tconsole.log(draggedTask)\n\t\t \n\t}\n\n\trender() {\n\t\tconst tasks = [...this.state.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n\t\treturn <div className='col-3'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t\t<DragDropContext onDragEnd={this.handleOnDragEnd}>\n\t\t\t\t\t\t\t\t\t<Droppable droppableId=\"tasks\">\n\t    \t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t{tasks.map((task, index) => \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Task last={task.priority === tasks.length -1 ? true : false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.props.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tepics={this.props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={this.props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nconst TaskList = (props) => {\n  \tconst doneOnly = props.tasks.filter(task => task.status === 'Done');\n \t\tconst inProgressOnly = props.tasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n\n\t\treturn  <React.Fragment>\n\t\t\t\t\t\t\t<TasksColumn tasks={toDoOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TasksColumn tasks={inProgressOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TasksColumn tasks={doneOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</React.Fragment>\t\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto mb-4'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass App extends React.Component {\n\t\tstate = {data_received:false}\n\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n  \tchangePriority = async (task_id, direction) => {\n  \t\tawait axios.post('/update_priority', {\n  \t\t\ttask_id: task_id,\n  \t\t\tpriority: direction\n  \t\t})\n  \t\tthis.getTasks()\n  \t}\n\n  \tfilterByStatus = async (status) => {\n  \t\t\tif (status === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === status);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\t\t\n  \t}\n\n  \tfilterByEpic = async (epic) => {\n  \t\t\tif (epic === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n  \t}\n\n  \tfilterByTimebox = async (timebox) => {\n  \t\t\tif (timebox === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.timebox === timebox);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n  \t}\n\n  \tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`);\n    await this.setState({ tasks: resp.data['tasks'], themes:resp.data['themes'], epics: resp.data['epics'], timeboxes: resp.data['timeboxes'] });\n  };\n\n  \tupdateStatus = (id, new_status) => {\n  \t\tconst obj = this.state.tasks.find(o => o.id === id);\n  \t\tobj.status = new_status\n  \t\tconst all_tasks = this.state.tasks.filter(task => task !== obj)\n  \t\tthis.setState(prevState => ({\n    \ttasks: [...all_tasks, obj],\n    \t}));\n  \t}\n\n  \tconvertToEpic = (task_id) => {\n  \t\tconst task = this.state.tasks.find(o => o.id === task_id);\n  \t\tconst tasks = this.state.tasks.filter( t => t !== task)\n  \t\tthis.setState(prevState => ({\n    \ttasks: tasks,\n    \t}));\n  \t\taxios.post('/convert_to_epic', {\n  \t\t\ttask_id: task_id\n  \t\t}).then((response) => {\n  \t\t\tconsole.log(response)\n\t\t\t  const epic = {id: response['data']['id'], title: response['data']['title'], color: response['data']['color']};\n\t\t\t  this.setState({epics: [...this.state.epics, epic]})\n\t\t\t}, (error) => {\n\t\t\t  console.log(error);\n\t\t\t});\n  \t}\n\n   \tasync componentDidMount() {\n    \tawait this.getTasks();\n    \tthis.setState({data_received: true})\n    }\n\n\trender() {\n\t\treturn this.state.data_received === true ? (\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<SideMenu epics={this.state.epics}\n\t\t\t\t\t\t\t\t\t\t\tthemes={this.state.themes}\n\t\t\t\t\t\t\t\t\t\t\ttimeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\t\t\tfilterByStatus={this.filterByStatus} \n\t\t\t\t\t\t\t\t\t\t\tfilterByEpic={this.filterByEpic}\n\t\t\t\t\t\t\t\t\t\t\tfilterByTimebox={this.filterByTimebox}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TaskList tasks={this.state.tasks} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.state.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={this.state.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t </div> )\n\t\t\t\t\t: <div></div>\n\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}