{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/Planning.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js';\nimport SideMenu from './sidemenu.js';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskList extends React.Component {\n  render() {\n    const tasks = [...this.props.tasks].sort((a, b) => a.priority > b.priority ? 1 : -1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-6 mx-auto w-100\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: String(task.id),\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            innerRef: provided.innerRef,\n            last: task.priority === tasks.length - 1 ? true : false,\n            updateStatus: this.props.updateStatus,\n            changePriority: this.props.changePriority,\n            themes: this.props.themes,\n            epics: this.props.epics,\n            all_timeboxes: this.props.all_timeboxes,\n            convertToEpic: this.props.convertToEpic,\n            deleteTask: this.props.deleteTask,\n            ...task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TasksColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.props.colId, \" Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: this.props.colId,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: [/*#__PURE__*/_jsxDEV(TaskList, {\n              innerRef: provided.innerRef,\n              ...provided.droppableProps,\n              tasks: this.props.tasks,\n              changePriority: this.props.changePriority,\n              updateStatus: this.props.updateStatus,\n              themes: this.props.themes,\n              epics: this.props.epics,\n              all_timeboxes: this.props.all_timeboxes,\n              convertToEpic: this.props.convertToEpic,\n              deleteTask: this.props.deleteTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 12\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst TasksContainer = props => {\n  const doneOnly = props.tasks.filter(task => task.status === 'Done');\n  const inProgressOnly = props.tasks.filter(task => task.status === 'In Progress');\n  const toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TasksColumn, {\n      colId: \"To Do\",\n      tasks: toDoOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic,\n      deleteTask: props.deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      colId: \"In Progress\",\n      tasks: inProgressOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic,\n      deleteTask: props.deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      colId: \"Done\",\n      tasks: doneOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic,\n      deleteTask: props.deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 11\n  }, this);\n};\n\n_c = TasksContainer;\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      console.log(this.props);\n      axios.post('/add_task', {\n        title: this.state.title,\n        board_id: this.props.board_id\n      }).then(response => {\n        this.props.onSubmit(response.data);\n      }, error => {\n        console.log(error);\n      });\n      event.preventDefault();\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto mb-4\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Planning extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data_received: false\n    };\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n\n    this.deleteTask = taskId => {\n      axios.post('/delete_task', {\n        task_id: taskId,\n        board_id: this.state.board_id\n      }).then(response => {\n        this.setState(prevState => ({\n          tasks: response.data.tasks\n        }));\n      });\n      const targetTask = this.state.tasks.find(o => o.id === taskId);\n      const newTaskList = this.state.tasks.filter(task => task !== targetTask);\n    };\n\n    this.filterByStatus = async status => {\n      if (status === '') {\n        this.getTasks(this.state.board_id);\n      } else {\n        await this.getTasks(this.state.board_id);\n        const filteredTasks = this.state.tasks.filter(task => task.theme === status);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.filterByEpic = async epic => {\n      if (epic === '') {\n        this.getTasks(this.state.board_id);\n      } else {\n        await this.getTasks(this.state.board_id);\n        const filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.filterByTimebox = async timebox => {\n      if (timebox === '') {\n        this.getTasks(this.state.board_id);\n      } else {\n        await this.getTasks(this.state.board_id);\n        const filteredTasks = this.state.tasks.filter(task => task.timebox === timebox);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.getTasks = async board_id => {\n      const resp = await axios.get(`/get_tasks?board_id=${board_id}`, {\n        params: {\n          board: this.state.board\n        }\n      });\n      await this.setState({\n        tasks: resp.data['tasks'],\n        themes: resp.data['themes'],\n        epics: resp.data['epics'],\n        timeboxes: resp.data['timeboxes']\n      });\n    };\n\n    this.convertToEpic = task_id => {\n      const task = this.state.tasks.find(o => o.id === task_id);\n      const tasks = this.state.tasks.filter(t => t !== task);\n      this.setState(prevState => ({\n        tasks: tasks\n      }));\n      axios.post('/convert_to_epic', {\n        task_id: task_id,\n        board_id: this.state.board_id\n      }).then(response => {\n        console.log(response);\n        const epic = {\n          id: response['data']['id'],\n          title: response['data']['title'],\n          color: response['data']['color']\n        };\n        this.setState({\n          epics: [...this.state.epics, epic]\n        });\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const task_id = Number(draggableId);\n      const obj = this.state.tasks.find(o => o.id === task_id);\n      obj.status = destination.droppableId;\n\n      if (obj.status === 'To Do') {\n        if (destination.index > source.index) {\n          obj.priority = destination.index + 0.5;\n        } else {\n          obj.priority = destination.index - 0.5;\n        }\n      } else {\n        obj.priority = -1;\n      }\n\n      axios.post('/update_task', {\n        board_id: this.state.board_id,\n        task_id: task_id,\n        status: obj.status,\n        priority: obj.priority\n      });\n      const all_tasks = this.state.tasks.filter(task => task !== obj);\n      this.setState(prevState => ({\n        tasks: [...all_tasks, obj]\n      }));\n    };\n  }\n\n  async componentWillMount() {\n    const path = this.props.location.pathname;\n    const board_id = Number(path.slice(7, 12));\n    await this.getTasks(board_id);\n    this.setState({\n      data_received: true,\n      board_id: board_id\n    });\n  }\n\n  render() {\n    return this.state.data_received === true ? /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: '/'\n          },\n          children: \"Boards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n          onSubmit: this.addNewTask,\n          board_id: this.state.board_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(SideMenu, {\n          boardId: this.state.board_id,\n          epics: this.state.epics,\n          themes: this.state.themes,\n          timeboxes: this.state.timeboxes,\n          filterByStatus: this.filterByStatus,\n          filterByEpic: this.filterByEpic,\n          filterByTimebox: this.filterByTimebox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(TasksContainer, {\n          tasks: this.state.tasks,\n          themes: this.state.themes,\n          epics: this.state.epics,\n          all_timeboxes: this.state.timeboxes,\n          updateStatus: this.updateStatus,\n          changePriority: this.changePriority,\n          convertToEpic: this.convertToEpic,\n          deleteTask: this.deleteTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default Planning;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksContainer\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/Planning.js"],"names":["React","axios","Task","SideMenu","DragDropContext","Droppable","Draggable","Link","TaskList","Component","render","tasks","props","sort","a","b","priority","map","task","index","String","id","provided","innerRef","draggableProps","dragHandleProps","length","updateStatus","changePriority","themes","epics","all_timeboxes","convertToEpic","deleteTask","TasksColumn","state","colId","droppableProps","placeholder","TasksContainer","doneOnly","filter","status","inProgressOnly","toDoOnly","CreateTaskForm","title","handleSubmit","event","console","log","post","board_id","then","response","onSubmit","data","error","preventDefault","setState","target","value","Planning","data_received","addNewTask","taskData","prevState","taskId","task_id","targetTask","find","o","newTaskList","filterByStatus","getTasks","filteredTasks","theme","filterByEpic","epic","filterByTimebox","timebox","resp","get","params","board","timeboxes","t","color","onDragEnd","result","destination","source","draggableId","droppableId","Number","obj","all_tasks","componentWillMount","path","location","pathname","slice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js';\nimport SideMenu from './sidemenu.js';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Link } from 'react-router-dom';\n\n\nclass TaskList extends React.Component {\n\trender() {\n\t\tconst tasks = [...this.props.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n\t\treturn <div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t\t{tasks.map((task, index) =>\n\t\t\t\t\t\t\t\t\t\t\t<Draggable key={task.id} draggableId={String(task.id)} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t{provided => ( \n\t\t\t\t\t\t\t\t\t\t\t\t\t<div  ref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t      \t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t      \t\t\t\t\t\n\t\t\t\t\t\t\t\t    \t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Task innerRef={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlast={task.priority === tasks.length -1 ? true : false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.props.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tepics={this.props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={this.props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteTask={this.props.deleteTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t}\n}\n\nclass TasksColumn extends React.Component {\n\tstate = {tasks: []}\n\trender() {\n\t\treturn <div className='col-3'>\n\t\t\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t\t{this.props.colId} Tasks\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t\t<Droppable droppableId={this.props.colId}>\n\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t      ref={provided.innerRef}\n\t\t\t\t\t\t\t\t      {...provided.draggableProps}\n\t\t\t\t\t\t\t\t      {...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t    >\n\t\t\t\t\t\t\t\t\t\t\t<TaskList\n\t\t\t\t\t\t\t\t\t\t\tinnerRef={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t\t\t\ttasks={this.props.tasks}\n\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes} \n\t\t\t\t\t\t\t\t\t\t\tepics={this.props.epics}\n\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={this.props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\tdeleteTask={this.props.deleteTask}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nconst TasksContainer = (props) => {\n  \tconst doneOnly = props.tasks.filter(task => task.status === 'Done');\n \t\tconst inProgressOnly = props.tasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n\n\t\treturn  <React.Fragment>\n\t\t\t\t\t\t<TasksColumn \n\t\t\t\t\t\t\t\t\t\t\t\tcolId='To Do'\n\t\t\t\t\t\t\t\t\t\t\t\ttasks={toDoOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\tdeleteTask={props.deleteTask}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TasksColumn \n\t\t\t\t\t\t\t\t\t\t\t\tcolId='In Progress'\n\t\t\t\t\t\t\t\t\t\t\t\ttasks={inProgressOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\tdeleteTask={props.deleteTask}\n\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TasksColumn \n\t\t\t\t\t\t\t\t\t\t\t\tcolId='Done'\n\t\t\t\t\t\t\t\t\t\t\t\ttasks={doneOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\tdeleteTask={props.deleteTask}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\t\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n\t\tconsole.log(this.props)\n    axios.post('/add_task', {\n    \ttitle: this.state.title,\n    \tboard_id: this.props.board_id\n    })\n    .then((response) => {\n\t\t  this.props.onSubmit(response.data)\n\t\t}, (error) => {\n\t\t  console.log(error);\n\t\t});\n\t\t    event.preventDefault()\n    this.setState({title : ''})   \n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto mb-4'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Planning extends React.Component {\n\t\tstate = {data_received:false}\n\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n  \tdeleteTask = (taskId) => {\n  \t\taxios.post('/delete_task', {\n  \t\t\ttask_id: taskId,\n  \t\t\tboard_id: this.state.board_id\n  \t\t}).then(\n  \t\t(response) => {\n  \t\t\tthis.setState(prevState => ({\n    \ttasks: response.data.tasks,\n    }));\n  \t\t})\n  \t\tconst targetTask = this.state.tasks.find(o => o.id === taskId);\n  \t\tconst newTaskList = this.state.tasks.filter(task => task !== targetTask)\n\n  \t\t\n  \t}\n\n\n  \tfilterByStatus = async (status) => {\n  \t\t\tif (status === '') {\n  \t\t\t\tthis.getTasks(this.state.board_id)\n  \t\t\t} else {\n  \t\t\tawait this.getTasks(this.state.board_id)\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === status);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\t\t\n  \t}\n\n  \tfilterByEpic = async (epic) => {\n  \t\t\tif (epic === '') {\n  \t\t\t\tthis.getTasks(this.state.board_id)\n  \t\t\t} else {\n  \t\t\tawait this.getTasks(this.state.board_id)\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n  \t}\n\n  \tfilterByTimebox = async (timebox) => {\n  \t\t\tif (timebox === '') {\n  \t\t\t\tthis.getTasks(this.state.board_id)\n  \t\t\t} else {\n  \t\t\tawait this.getTasks(this.state.board_id)\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.timebox === timebox);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n  \t}\n\n  \tgetTasks = async (board_id) => {\n    const resp = await axios.get(`/get_tasks?board_id=${board_id}`, {\n    \tparams: {\n    \t\tboard: this.state.board\n    \t}\n    });\n    await this.setState({ tasks: resp.data['tasks'], themes:resp.data['themes'], epics: resp.data['epics'], timeboxes: resp.data['timeboxes'] });\n  };\n\n  \tconvertToEpic = (task_id) => {\n  \t\tconst task = this.state.tasks.find(o => o.id === task_id);\n  \t\tconst tasks = this.state.tasks.filter( t => t !== task)\n  \t\tthis.setState(prevState => ({\n    \ttasks: tasks,\n    \t}));\n  \t\taxios.post('/convert_to_epic', {\n  \t\t\ttask_id: task_id,\n  \t\t\tboard_id: this.state.board_id\n  \t\t}).then((response) => {\n  \t\t\tconsole.log(response)\n\t\t\t  const epic = {id: response['data']['id'], title: response['data']['title'], color: response['data']['color']};\n\t\t\t  this.setState({epics: [...this.state.epics, epic]})\n\t\t\t}, (error) => {\n\t\t\t  console.log(error);\n\t\t\t});\n  \t}\n\n\n   \tasync componentWillMount() {\n   \t\tconst path = this.props.location.pathname\n   \t\tconst board_id = Number(path.slice(7,12))\n    \tawait this.getTasks(board_id);\n    \tthis.setState({data_received: true, board_id: board_id})\n    }\n\n    onDragEnd = (result) => {\n  \t\tconst {destination, source, draggableId} = result;\n\n  \t\tif (!destination) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (\n  \t\t\tdestination.droppableId === source.droppableId &&\n  \t\t\tdestination.index === source.index\n  \t\t\t) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tconst task_id = Number(draggableId)\n  \t\tconst obj = this.state.tasks.find(o => o.id === task_id);\n  \t\tobj.status = destination.droppableId\n\n  \t\tif (obj.status === 'To Do') {\n  \t\t\tif (destination.index > source.index) {\n  \t\t\t\tobj.priority = destination.index +0.5\n  \t\t\t} else {\n  \t\t\t\tobj.priority = destination.index -0.5\n  \t\t\t}\n  \t\t\t\n  \t\t} else {obj.priority = -1}\n  \t\t\n  \t\taxios.post('/update_task', {\n  \t\t\tboard_id: this.state.board_id,\n  \t\t\ttask_id: task_id,\n  \t\t\tstatus: obj.status,\n  \t\t\tpriority: obj.priority\n  \t\t})\n\n  \t\tconst all_tasks = this.state.tasks.filter(task => task !== obj)\n  \t\tthis.setState(prevState => ({\n    \ttasks: [...all_tasks, obj],\n    \t}));\t\t\n  \t}\n\n\trender() {\n\t\treturn this.state.data_received === true ? (\n\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\tonDragEnd = {this.onDragEnd}\n\n\n\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t<Link to={{pathname: '/'}}>Boards</Link>\n\t\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask} board_id={this.state.board_id}/>\n\t\t\t\t\t\t\t<SideMenu boardId={this.state.board_id}\n\t\t\t\t\t\t\t\t\t\t\t\tepics={this.state.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.state.themes}\n\t\t\t\t\t\t\t\t\t\t\t\ttimeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tfilterByStatus={this.filterByStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tfilterByEpic={this.filterByEpic}\n\t\t\t\t\t\t\t\t\t\t\t\tfilterByTimebox={this.filterByTimebox}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TasksContainer tasks={this.state.tasks} \n\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.state.themes} \n\t\t\t\t\t\t\t\t\t\t\t\t\tepics={this.state.epics}\n\t\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteTask={this.deleteTask}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</DragDropContext> \n\t\t\t\t\t\t)\n\t\t\t\t\t: <div></div>\n\n\t}\n}\n\n\nexport default Planning;\n"]},"metadata":{},"sourceType":"module"}