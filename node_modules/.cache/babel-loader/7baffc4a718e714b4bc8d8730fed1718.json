{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport pencil from \"./pencil.svg\";\nimport up_arrow from './up_arrow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: props.styling,\n    onClick: props.action,\n    children: props.body\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Button;\n\nclass RaisePriority extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"raise-priority\",\n      onClick: this.props.changePriority,\n      className: \"priority-button raise-priority\",\n      src: up_arrow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nclass DropPriority extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"drop-priority\",\n      onClick: this.props.changePriority,\n      className: \"priority-button drop-priority\",\n      src: up_arrow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nclass Task extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: this.props.id,\n      title: this.props.title,\n      status: this.props.status,\n      priority: this.props.priority,\n      editing: false\n    };\n\n    this.updateStatus = async new_status => {\n      const prev_status = this.state.status;\n      await axios.post('/update_task_status', {\n        id: this.state.id,\n        from_status: prev_status,\n        to_status: new_status\n      });\n      this.props.updateLists();\n    };\n\n    this.edit = () => {\n      this.setState({\n        editing: true\n      });\n    };\n\n    this.save = event => {\n      this.setState({\n        editing: false\n      });\n      axios.post('/edit_task', {\n        id: this.state.id,\n        title: this.state.title,\n        status: this.state.status,\n        priority: this.state.priority\n      });\n    };\n\n    this.editTaskName = event => {\n      event.preventDefault();\n      this.setState({\n        editing: false\n      });\n      axios.post('/edit_task', {\n        id: this.state.id,\n        title: this.state.title,\n        status: this.state.status,\n        priority: this.priority\n      });\n    };\n\n    this.changePriority = direction => {\n      this.props.changePriority(this.state.id, direction);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card m-2\",\n      children: this.state.editing === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"edit-pencil\",\n          className: \"edit-pencil\",\n          onClick: this.edit,\n          src: pencil\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: [this.state.title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status badge bg-secondary mx-3\",\n            children: this.state.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), this.state.status === 'To Do' ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            action: () => this.updateStatus('In Progress'),\n            body: \"Start Work\",\n            styling: \"btn btn-success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), this.props.last == false ? /*#__PURE__*/_jsxDEV(DropPriority, {\n            changePriority: () => this.changePriority('Down')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), this.props.priority !== 0 ? /*#__PURE__*/_jsxDEV(RaisePriority, {\n            changePriority: () => this.changePriority('Up')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 12\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 10\n        }, this) : this.state.status === 'In Progress' ? /*#__PURE__*/_jsxDEV(Button, {\n          action: () => this.updateStatus('Done'),\n          body: \"Mark as Done\",\n          styling: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 10\n        }, this) : this.state.status === 'Done' ? /*#__PURE__*/_jsxDEV(Button, {\n          action: () => this.updateStatus('To Do'),\n          body: \"Reopen\",\n          styling: \"btn btn-secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 10\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          action: this.save,\n          body: \"save\",\n          styling: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.editTaskName,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control form-control m-2\",\n                type: \"text\",\n                value: this.state.title,\n                onChange: event => this.setState({\n                  title: event.target.value\n                }),\n                placeholder: this.state.title,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status badge bg-secondary mx-3\",\n            children: this.state.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TasksColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [...this.props.tasks]\n    };\n\n    this.changePriority = async (task_id, priority) => {\n      const resp = await axios.post('/update_priority', {\n        task_id: task_id,\n        priority: priority\n      });\n      await this.setState({\n        tasks: resp.data['tasks']\n      });\n    };\n\n    this.updateLists = () => {\n      this.props.updateLists();\n    };\n  }\n\n  render() {\n    const tasks = [...this.state.tasks].sort((a, b) => a.priority > b.priority ? 1 : -1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mx-auto w-100\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n            last: task.priority === tasks.length - 1 ? true : false,\n            updateLists: this.updateLists,\n            changePriority: this.changePriority,\n            ...task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allTasks: [],\n      taskSplittingComplete: false\n    };\n\n    this.updateStatus = (id, status) => {\n      const obj = this.state.allTasks.find(o => o.id === id);\n      obj['status'] = status; //should probably set state of all_tasks here too. Actually just setting all tasks might be the way to go here\n\n      if (status === 'Done') {\n        const newInProgressTasks = this.state.inProgressTasks.filter(task => task !== obj);\n        this.setState({\n          inProgressTasks: newInProgressTasks\n        });\n        this.setState({\n          doneTasks: [...this.state.doneTasks, obj]\n        });\n      } else if (status === 'In Progress') {\n        const newToDoTasks = this.state.toDoTasks.filter(task => task !== obj);\n        this.setState({\n          toDoTasks: newToDoTasks\n        });\n        this.setState({\n          inProgressTasks: [...this.state.inProgressTasks, obj]\n        });\n      } else if (status === 'To Do') {\n        const newDoneTasks = this.state.doneTasks.filter(task => task !== obj);\n        this.setState({\n          doneTasks: newDoneTasks\n        });\n        this.setState({\n          toDoTasks: [...this.state.toDoTasks, obj]\n        });\n      }\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`);\n      this.setState({\n        allTasks: resp.data['tasks']\n      });\n    };\n\n    this.splitTasksByStatus = () => {\n      const doneOnly = this.state.allTasks.filter(task => task.status === 'Done');\n      const inProgressOnly = this.state.allTasks.filter(task => task.status === 'In Progress');\n      const toDoOnly = this.state.allTasks.filter(task => task.status === 'To Do');\n      this.setState({\n        doneTasks: doneOnly\n      });\n      this.setState({\n        inProgressTasks: inProgressOnly\n      });\n      this.setState({\n        toDoTasks: toDoOnly\n      });\n      this.setState({\n        taskSplittingComplete: true\n      });\n    };\n\n    this.updateLists = async () => {\n      this.setState({\n        taskSplittingComplete: false\n      });\n      await this.getTasks();\n      await this.splitTasksByStatus();\n      this.setState(this.state);\n    };\n  }\n\n  async componentDidMount() {\n    await this.getTasks();\n    await this.splitTasksByStatus();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.state.taskSplittingComplete === true ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TasksColumn, {\n          updateLists: this.updateLists,\n          tasks: this.state.toDoTasks,\n          updateStatus: this.updateStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n          updateLists: this.updateLists,\n          tasks: this.state.inProgressTasks,\n          updateStatus: this.updateStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n          updateLists: this.updateLists,\n          tasks: this.state.doneTasks,\n          updateStatus: this.updateStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","axios","up_arrow","Button","props","styling","action","body","RaisePriority","Component","render","changePriority","DropPriority","Task","state","id","title","status","priority","editing","updateStatus","new_status","prev_status","post","from_status","to_status","updateLists","edit","setState","save","event","editTaskName","preventDefault","direction","pencil","last","target","value","TasksColumn","tasks","task_id","resp","data","sort","a","b","map","task","length","TaskList","allTasks","taskSplittingComplete","obj","find","o","newInProgressTasks","inProgressTasks","filter","doneTasks","newToDoTasks","toDoTasks","newDoneTasks","getTasks","get","splitTasksByStatus","doneOnly","inProgressOnly","toDoOnly","componentDidMount","CreateTaskForm","handleSubmit","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","JSON","stringify","Header","App","addNewTask","taskData","prevState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport pencil from './pencil.svg'\nimport up_arrow from './up_arrow.png'\n\nconst Button = (props) => {\n\treturn \t<button className={props.styling} onClick={props.action}>{props.body}</button>\n}\n\n\nclass RaisePriority extends React.Component {\n\trender () {\n\t\treturn \t<img alt=\"raise-priority\" onClick = {this.props.changePriority} className='priority-button raise-priority' src={up_arrow}></img>\n\t}\n}\n\nclass DropPriority extends React.Component {\n\trender () {\n\t\treturn  <img alt=\"drop-priority\" onClick={this.props.changePriority} className='priority-button drop-priority' src={up_arrow}></img>\n\n\t}\n}\n\nclass Task extends React.Component {\n\tstate = {id: this.props.id, title: this.props.title, status:this.props.status, priority: this.props.priority, editing:false}\n\t\n\tupdateStatus = async (new_status) => {\n\t\tconst prev_status = this.state.status\n\t\tawait axios.post('/update_task_status', {\n\t\t  id: this.state.id,\n\t\t  from_status: prev_status,\n\t\t  to_status: new_status\n\t\t});\n\t\tthis.props.updateLists()\n\t}\n\n\tedit = () => {\n\t\tthis.setState({editing: true})\n\t}\n\n\tsave = (event) => {\n\t\tthis.setState({editing: false})\n\t\taxios.post('/edit_task', {\n\t\t  id: this.state.id,\n\t\t  title: this.state.title,\n\t\t  status: this.state.status,\n\t\t  priority: this.state.priority\n\t\t});\n\t}\n\n\teditTaskName = (event) => {\n\t\tevent.preventDefault()\n\t\tthis.setState({editing: false})\n\t\taxios.post('/edit_task', {\n\t\t  id: this.state.id,\n\t\t  title: this.state.title,\n\t\t  status: this.state.status,\n\t\t  priority: this.priority\n\t\t});\n\t}\n\n\tchangePriority = (direction) => {\n\t\tthis.props.changePriority(this.state.id, direction)\n\t}\n\n\trender() {\n\t\treturn <div className='card m-2'>\n\t\t\t\t\t\t\t{this.state.editing === false ? (\n\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t\t<img alt=\"edit-pencil\" className='edit-pencil' onClick={this.edit} src={pencil}></img>\n\t\t\t\t\t\t\t\t<div className='card-title'>\n\t\t\t\t\t\t\t\t\t{this.state.title}\n\t\t\t\t\t\t\t\t\t<span className='status badge bg-secondary mx-3'>{this.state.status}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{ this.state.status === 'To Do' ? (\n\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t<Button action={() => this.updateStatus('In Progress')} body='Start Work' styling='btn btn-success' />\n\t\t\t\t\t\t\t\t\t\t{this.props.last == false ? (\n\t\t\t\t\t\t\t\t\t\t<DropPriority changePriority={() => this.changePriority('Down')}/>\n\t\t\t\t\t\t\t\t\t\t)\t: (\n\t\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{this.props.priority !== 0 ? (\n\t\t\t\t\t\t\t\t\t\t\t<RaisePriority changePriority={() => this.changePriority('Up')}/>) \n\t\t\t\t\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t) : this.state.status === 'In Progress' ? (\n\t\t\t\t\t\t\t\t\t<Button action={() => this.updateStatus('Done')} body='Mark as Done' styling='btn btn-primary'/>\n\t\t\t\t\t\t\t\t\t) : this.state.status === 'Done' ? (\n\t\t\t\t\t\t\t\t\t<Button action={() => this.updateStatus('To Do')} body='Reopen' styling='btn btn-secondary'/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t)\n\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div> ) : (\n\t\t\t\t\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button action={this.save} body='save' styling='btn btn-primary'/>\n\t\t\t\t\t\t\t\t\t\t\t<div className='card-title'>\n\t\t\t\t\t\t\t\t\t\t\t\t<form onSubmit={this.editTaskName}>\n\t\t\t\t\t\t\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control form-control m-2'\n\t\t\t\t\t\t\t\t\t\t          type=\"text\" \n\t\t\t\t\t\t\t\t\t\t          value={this.state.title}\n\t\t\t\t\t\t\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t\t\t\t\t\t\t          placeholder= {this.state.title}\n\t\t\t\t\t\t\t\t\t\t          required \n\t\t\t\t\t\t\t\t\t\t        />\n\t\t\t\t\t\t\t\t\t\t        </div>\n\t\t\t\t\t\t\t\t\t\t\t\t </form>\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='status badge bg-secondary mx-3'>{this.state.status}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t}\n}\n\nclass TasksColumn extends React.Component {\n\tstate = {tasks : [...this.props.tasks]};\n\n\tchangePriority = async (task_id, priority) => {\n\t\tconst resp = await axios.post('/update_priority', {\n\t\t\ttask_id: task_id,\n\t\t\tpriority: priority\n\t\t\t});\n\t\t\tawait this.setState({tasks: resp.data['tasks']})\n\t\t}\n\n\t\t//use response to update tasks in state\n\t\n\n\tupdateLists = () => {\n\t\tthis.props.updateLists()\n\t}\n\n\trender() {\n\t\tconst tasks = [...this.state.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n\t\treturn <div className='col-4'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t{tasks.map(task => \n\t\t\t\t\t\t\t\t\t\t<Task key={task.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast={task.priority === tasks.length -1 ? true : false}\n\t\t\t\t\t\t\t\t\t\t \t\t\tupdateLists={this.updateLists}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n\n}\n\nclass TaskList extends React.Component {\n\tstate = {allTasks : [], taskSplittingComplete: false};\n\n\tupdateStatus = (id, status) => {\n\t\tconst obj = this.state.allTasks.find(o => o.id === id);\n\t\tobj['status'] = status\n\t\t//should probably set state of all_tasks here too. Actually just setting all tasks might be the way to go here\n\t\tif (status === 'Done') {\n\t\t\tconst newInProgressTasks = this.state.inProgressTasks.filter(task => task !== obj)\n\t\t\tthis.setState({inProgressTasks: newInProgressTasks})\n\t\t\tthis.setState({doneTasks: [...this.state.doneTasks, obj]})\n\t\t} else if (status === 'In Progress'){\n\t\t\tconst newToDoTasks = this.state.toDoTasks.filter(task => task !== obj)\n\t\t\tthis.setState({toDoTasks: newToDoTasks})\n\t\t\tthis.setState({inProgressTasks: [...this.state.inProgressTasks, obj]})\n\t\t} \n\t\telse if (status === 'To Do'){\n\t\t\tconst newDoneTasks = this.state.doneTasks.filter(task => task !== obj)\n\t\t\tthis.setState({doneTasks: newDoneTasks})\n\t\t\tthis.setState({toDoTasks: [...this.state.toDoTasks, obj]})\n\t\t}\n\t}\n\n\n\n\tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`);\n    this.setState({ allTasks: resp.data['tasks'] });\n  };\n\n  splitTasksByStatus = () => {\n  \tconst doneOnly = this.state.allTasks.filter(task => task.status === 'Done');\n  \tconst inProgressOnly = this.state.allTasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = this.state.allTasks.filter(task => task.status === 'To Do');\n  \tthis.setState({ doneTasks: doneOnly });\n  \tthis.setState({ inProgressTasks: inProgressOnly });\n  \tthis.setState({ toDoTasks: toDoOnly})\n  \tthis.setState({ taskSplittingComplete: true})\n  }\t\n\n  updateLists = async () => {\n\t\tthis.setState({taskSplittingComplete: false})\n\t\tawait this.getTasks();\n  \tawait this.splitTasksByStatus();\n  \tthis.setState(this.state)\n  \t}\n  \n  async componentDidMount() {\n    \tawait this.getTasks();\n    \tawait this.splitTasksByStatus()\n\n    }\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t{ this.state.taskSplittingComplete === true ? (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<TasksColumn updateLists={this.updateLists} tasks={this.state.toDoTasks}  updateStatus={this.updateStatus} />\n\t\t\t\t\t\t<TasksColumn updateLists={this.updateLists} tasks={this.state.inProgressTasks}  updateStatus={this.updateStatus} />\n\t\t\t\t\t\t<TasksColumn updateLists={this.updateLists} tasks={this.state.doneTasks}  updateStatus={this.updateStatus} />\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\n\t}\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass App extends React.Component {\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<TaskList />\n\t\t\t\t\t </div>\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}