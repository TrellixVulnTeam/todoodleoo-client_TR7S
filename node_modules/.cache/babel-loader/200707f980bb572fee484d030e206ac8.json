{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/board.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js';\nimport SideMenu from './sidemenu.js';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskList extends React.Component {\n  render() {\n    const tasks = [...this.props.tasks].sort((a, b) => a.priority > b.priority ? 1 : -1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-6 mx-auto w-100\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: String(task.id),\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            innerRef: provided.innerRef,\n            last: task.priority === tasks.length - 1 ? true : false,\n            updateStatus: this.props.updateStatus,\n            changePriority: this.props.changePriority,\n            themes: this.props.themes,\n            epics: this.props.epics,\n            all_timeboxes: this.props.all_timeboxes,\n            convertToEpic: this.props.convertToEpic,\n            ...task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TasksColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.props.colId, \" Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: this.props.colId,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: [/*#__PURE__*/_jsxDEV(TaskList, {\n              innerRef: provided.innerRef,\n              ...provided.droppableProps,\n              tasks: this.props.tasks,\n              changePriority: this.props.changePriority,\n              updateStatus: this.props.updateStatus,\n              themes: this.props.themes,\n              epics: this.props.epics,\n              all_timeboxes: this.props.all_timeboxes,\n              convertToEpic: this.props.convertToEpic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 12\n            }, this), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst TasksContainer = props => {\n  const doneOnly = props.tasks.filter(task => task.status === 'Done');\n  const inProgressOnly = props.tasks.filter(task => task.status === 'In Progress');\n  const toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TasksColumn, {\n      colId: \"To Do\",\n      tasks: toDoOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      colId: \"In Progress\",\n      tasks: inProgressOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      colId: \"Done\",\n      tasks: doneOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 11\n  }, this);\n};\n\n_c = TasksContainer;\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto mb-4\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data_received: false\n    };\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n\n    this.filterByStatus = async status => {\n      if (status === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.theme === status);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.filterByEpic = async epic => {\n      if (epic === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.filterByTimebox = async timebox => {\n      if (timebox === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.timebox === timebox);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`, {\n        params: {\n          board: this.props.boardId\n        }\n      });\n      await this.setState({\n        tasks: resp.data['tasks'],\n        themes: resp.data['themes'],\n        epics: resp.data['epics'],\n        timeboxes: resp.data['timeboxes']\n      });\n    };\n\n    this.convertToEpic = task_id => {\n      const task = this.state.tasks.find(o => o.id === task_id);\n      const tasks = this.state.tasks.filter(t => t !== task);\n      this.setState(prevState => ({\n        tasks: tasks\n      }));\n      axios.post('/convert_to_epic', {\n        task_id: task_id\n      }).then(response => {\n        console.log(response);\n        const epic = {\n          id: response['data']['id'],\n          title: response['data']['title'],\n          color: response['data']['color']\n        };\n        this.setState({\n          epics: [...this.state.epics, epic]\n        });\n      }, error => {\n        console.log(error);\n      });\n    };\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const task_id = Number(draggableId);\n      const obj = this.state.tasks.find(o => o.id === task_id);\n      obj.status = destination.droppableId;\n\n      if (obj.status === 'To Do') {\n        obj.priority = destination.index + 1;\n      } else {\n        obj.priority = -1;\n      }\n\n      axios.post('/update_task', {\n        task_id: task_id,\n        status: obj.status,\n        priority: obj.priority\n      });\n      const all_tasks = this.state.tasks.filter(task => task !== obj);\n      this.setState(prevState => ({\n        tasks: [...all_tasks, obj]\n      }));\n    };\n  }\n\n  async componentDidMount() {\n    await this.getTasks();\n    this.setState({\n      data_received: true\n    });\n  }\n\n  render() {\n    return this.state.data_received === true ? /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n          onSubmit: this.addNewTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(SideMenu, {\n          epics: this.state.epics,\n          themes: this.state.themes,\n          timeboxes: this.state.timeboxes,\n          filterByStatus: this.filterByStatus,\n          filterByEpic: this.filterByEpic,\n          filterByTimebox: this.filterByTimebox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(TasksContainer, {\n          tasks: this.state.tasks,\n          themes: this.state.themes,\n          epics: this.state.epics,\n          all_timeboxes: this.state.timeboxes,\n          updateStatus: this.updateStatus,\n          changePriority: this.changePriority,\n          convertToEpic: this.convertToEpic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksContainer\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/board.js"],"names":["React","axios","Task","SideMenu","DragDropContext","Droppable","Draggable","TaskList","Component","render","tasks","props","sort","a","b","priority","map","task","index","String","id","provided","innerRef","draggableProps","dragHandleProps","length","updateStatus","changePriority","themes","epics","all_timeboxes","convertToEpic","TasksColumn","state","colId","droppableProps","placeholder","TasksContainer","doneOnly","filter","status","inProgressOnly","toDoOnly","CreateTaskForm","title","handleSubmit","event","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","setState","target","value","Header","Board","data_received","addNewTask","taskData","prevState","filterByStatus","getTasks","filteredTasks","theme","filterByEpic","epic","filterByTimebox","timebox","resp","get","params","board","boardId","timeboxes","task_id","find","o","t","post","then","response","console","log","color","error","onDragEnd","result","destination","source","draggableId","droppableId","Number","obj","all_tasks","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js';\nimport SideMenu from './sidemenu.js';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nclass TaskList extends React.Component {\n\trender() {\n\t\tconst tasks = [...this.props.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n\t\treturn <div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t\t{tasks.map((task, index) =>\n\t\t\t\t\t\t\t\t\t\t\t<Draggable key={task.id} draggableId={String(task.id)} index={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t{provided => ( \n\t\t\t\t\t\t\t\t\t\t\t\t\t<div  ref={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t      \t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t      \t\t\t\t\t\n\t\t\t\t\t\t\t\t    \t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Task innerRef={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlast={task.priority === tasks.length -1 ? true : false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.props.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tepics={this.props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={this.props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t}\n}\n\nclass TasksColumn extends React.Component {\n\tstate = {tasks: []}\n\trender() {\n\t\treturn <div className='col-3'>\n\t\t\t\t\t\t\t<div className='container'>\n\t\t\t\t\t\t\t{this.props.colId} Tasks\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t\t<Droppable droppableId={this.props.colId}>\n\t\t\t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t      ref={provided.innerRef}\n\t\t\t\t\t\t\t\t      {...provided.draggableProps}\n\t\t\t\t\t\t\t\t      {...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t    >\n\t\t\t\t\t\t\t\t\t\t\t<TaskList\n\t\t\t\t\t\t\t\t\t\t\tinnerRef={provided.innerRef}\n\t\t\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t\t\t\ttasks={this.props.tasks}\n\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes} \n\t\t\t\t\t\t\t\t\t\t\tepics={this.props.epics}\n\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={this.props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nconst TasksContainer = (props) => {\n  \tconst doneOnly = props.tasks.filter(task => task.status === 'Done');\n \t\tconst inProgressOnly = props.tasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n\n\t\treturn  <React.Fragment>\n\t\t\t\t\t\t<TasksColumn \n\t\t\t\t\t\t\t\t\t\t\t\tcolId='To Do'\n\t\t\t\t\t\t\t\t\t\t\t\ttasks={toDoOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TasksColumn \n\t\t\t\t\t\t\t\t\t\t\t\tcolId='In Progress'\n\t\t\t\t\t\t\t\t\t\t\t\ttasks={inProgressOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TasksColumn \n\t\t\t\t\t\t\t\t\t\t\t\tcolId='Done'\n\t\t\t\t\t\t\t\t\t\t\t\ttasks={doneOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\t\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto mb-4'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Board extends React.Component {\n\t\tstate = {data_received:false}\n\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n\n  \tfilterByStatus = async (status) => {\n  \t\t\tif (status === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === status);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\t\t\n  \t}\n\n  \tfilterByEpic = async (epic) => {\n  \t\t\tif (epic === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n  \t}\n\n  \tfilterByTimebox = async (timebox) => {\n  \t\t\tif (timebox === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.timebox === timebox);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n  \t}\n\n  \tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`, {\n    \tparams: {\n    \t\tboard: this.props.boardId\n    \t}\n    });\n    await this.setState({ tasks: resp.data['tasks'], themes:resp.data['themes'], epics: resp.data['epics'], timeboxes: resp.data['timeboxes'] });\n  };\n\n  \tconvertToEpic = (task_id) => {\n  \t\tconst task = this.state.tasks.find(o => o.id === task_id);\n  \t\tconst tasks = this.state.tasks.filter( t => t !== task)\n  \t\tthis.setState(prevState => ({\n    \ttasks: tasks,\n    \t}));\n  \t\taxios.post('/convert_to_epic', {\n  \t\t\ttask_id: task_id\n  \t\t}).then((response) => {\n  \t\t\tconsole.log(response)\n\t\t\t  const epic = {id: response['data']['id'], title: response['data']['title'], color: response['data']['color']};\n\t\t\t  this.setState({epics: [...this.state.epics, epic]})\n\t\t\t}, (error) => {\n\t\t\t  console.log(error);\n\t\t\t});\n  \t}\n\n\n   \tasync componentDidMount() {\n    \tawait this.getTasks();\n    \tthis.setState({data_received: true})\n    }\n\n    onDragEnd = (result) => {\n  \t\tconst {destination, source, draggableId} = result;\n\n  \t\tif (!destination) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (\n  \t\t\tdestination.droppableId === source.droppableId &&\n  \t\t\tdestination.index === source.index\n  \t\t\t) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tconst task_id = Number(draggableId)\n  \t\tconst obj = this.state.tasks.find(o => o.id === task_id);\n  \t\tobj.status = destination.droppableId\n\n  \t\tif (obj.status === 'To Do') {\n  \t\t\tobj.priority = destination.index + 1\n  \t\t} else {obj.priority = -1}\n  \t\t\n  \t\taxios.post('/update_task', {\n  \t\t\ttask_id: task_id,\n  \t\t\tstatus: obj.status,\n  \t\t\tpriority: obj.priority\n  \t\t})\n\n  \t\tconst all_tasks = this.state.tasks.filter(task => task !== obj)\n  \t\tthis.setState(prevState => ({\n    \ttasks: [...all_tasks, obj],\n    \t}));\t\t\n  \t}\n\n\trender() {\n\t\treturn this.state.data_received === true ? (\n\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\tonDragEnd = {this.onDragEnd}\n\n\n\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t\t<SideMenu epics={this.state.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.state.themes}\n\t\t\t\t\t\t\t\t\t\t\t\ttimeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tfilterByStatus={this.filterByStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tfilterByEpic={this.filterByEpic}\n\t\t\t\t\t\t\t\t\t\t\t\tfilterByTimebox={this.filterByTimebox}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TasksContainer tasks={this.state.tasks} \n\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.state.themes} \n\t\t\t\t\t\t\t\t\t\t\t\t\tepics={this.state.epics}\n\t\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</DragDropContext> \n\t\t\t\t\t\t)\n\t\t\t\t\t: <div></div>\n\n\t}\n}\n\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}