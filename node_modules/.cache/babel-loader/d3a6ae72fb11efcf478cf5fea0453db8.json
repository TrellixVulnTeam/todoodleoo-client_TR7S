{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Theme extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"theme X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass ThemeRow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      themes: []\n    };\n\n    this.getThemes = async () => {\n      console.log('xxxx');\n      const resp = await axios.get(`/get_themes`);\n      this.setState({\n        themes: resp\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.getThemes();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.state.themes.map(theme => /*#__PURE__*/_jsxDEV(Theme, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TasksColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [...this.props.tasks]\n    };\n\n    this.changePriority = async (task_id, priority) => {\n      const resp = await axios.post('/update_priority', {\n        task_id: task_id,\n        priority: priority\n      });\n      await this.setState({\n        tasks: resp.data['tasks']\n      });\n    };\n\n    this.updateLists = () => {\n      this.props.updateLists();\n    };\n  }\n\n  render() {\n    const tasks = [...this.state.tasks].sort((a, b) => a.priority > b.priority ? 1 : -1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mx-auto w-100\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n            last: task.priority === tasks.length - 1 ? true : false,\n            updateLists: this.updateLists,\n            changePriority: this.changePriority,\n            themes: this.props.themes,\n            ...task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allTasks: [],\n      taskSplittingComplete: false\n    };\n\n    this.updateStatus = (id, status) => {\n      const obj = this.state.allTasks.find(o => o.id === id);\n      obj['status'] = status; //should probably set state of all_tasks here too. Actually just setting all tasks might be the way to go here\n\n      if (status === 'Done') {\n        const newInProgressTasks = this.state.inProgressTasks.filter(task => task !== obj);\n        this.setState({\n          inProgressTasks: newInProgressTasks\n        });\n        this.setState({\n          doneTasks: [...this.state.doneTasks, obj]\n        });\n      } else if (status === 'In Progress') {\n        const newToDoTasks = this.state.toDoTasks.filter(task => task !== obj);\n        this.setState({\n          toDoTasks: newToDoTasks\n        });\n        this.setState({\n          inProgressTasks: [...this.state.inProgressTasks, obj]\n        });\n      } else if (status === 'To Do') {\n        const newDoneTasks = this.state.doneTasks.filter(task => task !== obj);\n        this.setState({\n          doneTasks: newDoneTasks\n        });\n        this.setState({\n          toDoTasks: [...this.state.toDoTasks, obj]\n        });\n      }\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`);\n      this.setState({\n        allTasks: resp.data['tasks'],\n        themes: resp.data['themes']\n      });\n    };\n\n    this.splitTasksByStatus = () => {\n      const doneOnly = this.state.allTasks.filter(task => task.status === 'Done');\n      const inProgressOnly = this.state.allTasks.filter(task => task.status === 'In Progress');\n      const toDoOnly = this.state.allTasks.filter(task => task.status === 'To Do');\n      this.setState({\n        doneTasks: doneOnly\n      });\n      this.setState({\n        inProgressTasks: inProgressOnly\n      });\n      this.setState({\n        toDoTasks: toDoOnly\n      });\n      this.setState({\n        taskSplittingComplete: true\n      });\n    };\n\n    this.updateLists = async () => {\n      this.setState({\n        taskSplittingComplete: false\n      });\n      await this.getTasks();\n      await this.splitTasksByStatus();\n      this.setState(this.state);\n    };\n  }\n\n  async componentDidMount() {\n    await this.getTasks();\n    await this.splitTasksByStatus();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.state.taskSplittingComplete === true ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TasksColumn, {\n          updateLists: this.updateLists,\n          tasks: this.state.toDoTasks,\n          updateStatus: this.updateStatus,\n          themes: this.state.themes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n          updateLists: this.updateLists,\n          tasks: this.state.inProgressTasks,\n          updateStatus: this.updateStatus,\n          themes: this.state.themes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n          updateLists: this.updateLists,\n          tasks: this.state.doneTasks,\n          updateStatus: this.updateStatus,\n          themes: this.state.themes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ThemeRow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","axios","Task","Theme","Component","render","ThemeRow","state","themes","getThemes","console","log","resp","get","setState","componentDidMount","map","theme","TasksColumn","tasks","props","changePriority","task_id","priority","post","data","updateLists","sort","a","b","task","length","id","TaskList","allTasks","taskSplittingComplete","updateStatus","status","obj","find","o","newInProgressTasks","inProgressTasks","filter","doneTasks","newToDoTasks","toDoTasks","newDoneTasks","getTasks","splitTasksByStatus","doneOnly","inProgressOnly","toDoOnly","CreateTaskForm","title","handleSubmit","event","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","target","value","Header","App","addNewTask","taskData","prevState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js'\n\nclass Theme extends React.Component {\n\trender() {\n\t\treturn<div>theme X</div>\n\t}\n}\nclass ThemeRow extends React.Component {\n\tstate = {themes : []};\n\tgetThemes = async () => {\n\t\tconsole.log('xxxx')\n\t\tconst resp = await axios.get(`/get_themes`);\n\t\tthis.setState({themes: resp})\n\t}\n\n\tasync componentDidMount() {\n    \tawait this.getThemes();\n    }\n\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t{this.state.themes.map(theme => \n\t\t\t\t\t\t\t<Theme />)}\n\t\t\t\t\t </div>\n\t}\n}\n\nclass TasksColumn extends React.Component {\n\tstate = {tasks : [...this.props.tasks]};\n\n\tchangePriority = async (task_id, priority) => {\n\t\tconst resp = await axios.post('/update_priority', {\n\t\t\ttask_id: task_id,\n\t\t\tpriority: priority\n\t\t\t});\n\t\t\tawait this.setState({tasks: resp.data['tasks']})\n\t\t}\t\n\n\tupdateLists = () => {\n\t\tthis.props.updateLists()\n\t}\n\n\trender() {\n\t\tconst tasks = [...this.state.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n\t\treturn <div className='col-4'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t{tasks.map(task => \n\t\t\t\t\t\t\t\t\t\t<Task key={task.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast={task.priority === tasks.length -1 ? true : false}\n\t\t\t\t\t\t\t\t\t\t \t\t\tupdateLists={this.updateLists}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nclass TaskList extends React.Component {\n\tstate = {allTasks : [], taskSplittingComplete: false};\n\n\tupdateStatus = (id, status) => {\n\t\tconst obj = this.state.allTasks.find(o => o.id === id);\n\t\tobj['status'] = status\n\t\t//should probably set state of all_tasks here too. Actually just setting all tasks might be the way to go here\n\t\tif (status === 'Done') {\n\t\t\tconst newInProgressTasks = this.state.inProgressTasks.filter(task => task !== obj)\n\t\t\tthis.setState({inProgressTasks: newInProgressTasks})\n\t\t\tthis.setState({doneTasks: [...this.state.doneTasks, obj]})\n\t\t} else if (status === 'In Progress'){\n\t\t\tconst newToDoTasks = this.state.toDoTasks.filter(task => task !== obj)\n\t\t\tthis.setState({toDoTasks: newToDoTasks})\n\t\t\tthis.setState({inProgressTasks: [...this.state.inProgressTasks, obj]})\n\t\t} \n\t\telse if (status === 'To Do'){\n\t\t\tconst newDoneTasks = this.state.doneTasks.filter(task => task !== obj)\n\t\t\tthis.setState({doneTasks: newDoneTasks})\n\t\t\tthis.setState({toDoTasks: [...this.state.toDoTasks, obj]})\n\t\t}\n\t}\n\n\tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`);\n    this.setState({ allTasks: resp.data['tasks'], themes:resp.data['themes'] });\n  };\n\n  splitTasksByStatus = () => {\n  \tconst doneOnly = this.state.allTasks.filter(task => task.status === 'Done');\n  \tconst inProgressOnly = this.state.allTasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = this.state.allTasks.filter(task => task.status === 'To Do');\n  \tthis.setState({ doneTasks: doneOnly });\n  \tthis.setState({ inProgressTasks: inProgressOnly });\n  \tthis.setState({ toDoTasks: toDoOnly})\n  \tthis.setState({ taskSplittingComplete: true})\n  }\t\n\n  updateLists = async () => {\n\t\tthis.setState({taskSplittingComplete: false})\n\t\tawait this.getTasks();\n  \tawait this.splitTasksByStatus();\n  \tthis.setState(this.state)\n  \t}\n  \n  async componentDidMount() {\n    \tawait this.getTasks();\n    \tawait this.splitTasksByStatus()\n\n    }\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t{ this.state.taskSplittingComplete === true ? (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<TasksColumn updateLists={this.updateLists} tasks={this.state.toDoTasks}  updateStatus={this.updateStatus} themes={this.state.themes}/>\n\t\t\t\t\t\t<TasksColumn updateLists={this.updateLists} tasks={this.state.inProgressTasks}  updateStatus={this.updateStatus} themes={this.state.themes}/>\n\t\t\t\t\t\t<TasksColumn updateLists={this.updateLists} tasks={this.state.doneTasks}  updateStatus={this.updateStatus} themes={this.state.themes}/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t}\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass App extends React.Component {\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<ThemeRow />\n\t\t\t\t\t\t<TaskList />\n\t\t\t\t\t </div>\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}