{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js';\nimport SideMenu from './sidemenu.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddElement extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.form = (action, title, placeholder, className) => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: className,\n        onSubmit: action,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control form-control-sm m-2\",\n            type: \"text\",\n            value: title,\n            onChange: event => this.setState({\n              title: event.target.value\n            }),\n            placeholder: placeholder,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 10\n      }, this);\n    };\n  }\n\n  render() {\n    return this.form();\n  }\n\n}\n\nclass AddEpic extends AddElement {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.addEpic = () => {\n      axios.post('/add_epic', {\n        title: this.state.title\n      });\n    };\n  }\n\n  render() {\n    return this.form(this.addEpic, this.state.title, 'Add New epic', 'add-epic-form');\n  }\n\n}\n\nclass Epic extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"epic-button\",\n      onClick: () => this.props.filterByEpic(this.props.epicTitle),\n      style: {\n        Color: this.props.color,\n        border: `4px solid ${this.props.color}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"epic-blob\",\n        style: {\n          backgroundColor: this.props.color\n        },\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 178\n      }, this), this.props.epicTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass EpicColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filtering: false\n    };\n\n    this.filterByEpic = epic => {\n      this.props.filterByEpic(epic);\n\n      if (epic === '') {\n        this.setState({\n          filtering: false\n        });\n      } else {\n        this.setState({\n          filtering: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: [this.props.epics.map(epic => /*#__PURE__*/_jsxDEV(Epic, {\n        epicTitle: epic.title,\n        color: epic.color,\n        filterByEpic: this.filterByEpic\n      }, epic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 8\n      }, this)), /*#__PURE__*/_jsxDEV(AddEpic, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TasksColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n  }\n\n  render() {\n    const tasks = [...this.props.tasks].sort((a, b) => a.priority > b.priority ? 1 : -1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mx-auto w-100\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n            last: task.priority === tasks.length - 1 ? true : false,\n            updateStatus: this.props.updateStatus,\n            changePriority: this.props.changePriority,\n            themes: this.props.themes,\n            epics: this.props.epics,\n            convertToEpic: this.props.convertToEpic,\n            ...task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst TaskList = props => {\n  const doneOnly = props.tasks.filter(task => task.status === 'Done');\n  const inProgressOnly = props.tasks.filter(task => task.status === 'In Progress');\n  const toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: toDoOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: inProgressOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: doneOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 11\n  }, this);\n};\n\n_c = TaskList;\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto mb-4\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst CreateTimebox = () => {\n  const createTimebox = () => {\n    axios.post('/create_timebox');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: createTimebox,\n    children: \"Create Timebox\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = CreateTimebox;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data_received: false\n    };\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n\n    this.changePriority = async (task_id, direction) => {\n      await axios.post('/update_priority', {\n        task_id: task_id,\n        priority: direction\n      });\n      this.getTasks();\n    };\n\n    this.filterByStatus = async status => {\n      if (status === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.theme === status);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.filterByEpic = async epic => {\n      if (epic === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`);\n      await this.setState({\n        tasks: resp.data['tasks'],\n        themes: resp.data['themes'],\n        epics: resp.data['epics'],\n        timeboxes: resp.data['timeboxes']\n      });\n    };\n\n    this.updateStatus = (id, new_status) => {\n      const obj = this.state.tasks.find(o => o.id === id);\n      obj.status = new_status;\n      const all_tasks = this.state.tasks.filter(task => task !== obj);\n      this.setState(prevState => ({\n        tasks: [...all_tasks, obj]\n      }));\n    };\n\n    this.convertToEpic = task_id => {\n      axios.post('/convert_to_epic', {\n        task_id: task_id\n      });\n      this.getTasks();\n    };\n  }\n\n  async componentDidMount() {\n    await this.getTasks();\n    this.setState({\n      data_received: true\n    });\n  }\n\n  render() {\n    return this.state.data_received === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SideMenu, {\n        filterByStatus: this.filterByStatus,\n        themes: this.state.themes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(EpicColumn, {\n          filterByEpic: this.filterByEpic,\n          epics: this.state.epics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: this.state.tasks,\n          themes: this.state.themes,\n          epics: this.state.epics,\n          timeboxes: this.state.timeboxes,\n          updateStatus: this.updateStatus,\n          changePriority: this.changePriority,\n          convertToEpic: this.convertToEpic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(CreateTimebox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskList\");\n$RefreshReg$(_c2, \"CreateTimebox\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","axios","Task","SideMenu","AddElement","Component","form","action","title","placeholder","className","event","setState","target","value","render","AddEpic","state","addEpic","post","Epic","props","filterByEpic","epicTitle","Color","color","border","backgroundColor","EpicColumn","filtering","epic","epics","map","id","TasksColumn","tasks","sort","a","b","priority","task","length","updateStatus","changePriority","themes","convertToEpic","TaskList","doneOnly","filter","status","inProgressOnly","toDoOnly","CreateTaskForm","handleSubmit","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","Header","CreateTimebox","createTimebox","App","data_received","addNewTask","taskData","prevState","task_id","direction","getTasks","filterByStatus","filteredTasks","theme","resp","get","timeboxes","new_status","obj","find","o","all_tasks","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js'\nimport SideMenu from './sidemenu.js'\n\n\nclass AddElement extends React.Component {\n\tform = (action, title, placeholder, className) => {\n\t\treturn <form className={className} onSubmit={action}>\n\t\t\t\t\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control form-control-sm m-2'\n\t\t\t\t\t\t\t\t          type=\"text\" \n\t\t\t\t\t\t\t\t          value={title}\n\t\t\t\t\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t\t\t\t\t          placeholder={placeholder}\n\t\t\t\t\t\t\t\t          required \n\t\t\t\t\t\t\t\t        />\n\t\t\t\t\t\t\t\t        </div>\n\t\t\t\t\t\t\t\t\t\t </form>\n\t\t}\n\trender() {\n\t\t\t\t\t\treturn this.form()\n\t}\n}\n\nclass AddEpic extends AddElement {\n\tstate = {title: ''}\n\n\taddEpic = () => {\n\t\taxios.post('/add_epic', {\n\t\t\ttitle: this.state.title\n\t\t})\n\n\t}\n\n\trender() {\n\t\treturn this.form(this.addEpic, this.state.title, 'Add New epic', 'add-epic-form')\n\t}\n}\n\nclass Epic extends React.Component {\n\trender() {\n\t\treturn <div className='epic-button' onClick = {() => this.props.filterByEpic(this.props.epicTitle)} style={{Color: this.props.color, border: `4px solid ${this.props.color}`}}><div className='epic-blob' style={{backgroundColor: this.props.color}}> </div>{this.props.epicTitle}</div>\n\t}\n}\n\nclass EpicColumn extends React.Component {\n\tstate = {filtering: false}\n\tfilterByEpic = (epic) => {\n\t\tthis.props.filterByEpic(epic)\n\t\tif (epic === '') {\n\t\t\tthis.setState({filtering: false})\n\t\t} else {\n\t\t\tthis.setState({filtering: true})\n\t  }\n\t}\n\trender() {\n\t\treturn <div className='col-3'>\n\t\t\t\t\t\t{this.props.epics.map(epic => \n\t\t\t\t\t\t\t<Epic key={epic.id} epicTitle={epic.title} color={epic.color} filterByEpic={this.filterByEpic}/>)}\n\t\t\t\t\t\t\t<AddEpic />\n\t\t\t\t\t </div> \t\t\t\t\t \t\n\t}\t\t\t\t\t\n}\n\n\n\nclass TasksColumn extends React.Component {\n\tstate = {tasks: []}\n\trender() {\n\t\tconst tasks = [...this.props.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n\t\treturn <div className='col-3'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t{tasks.map(task => \n\t\t\t\t\t\t\t\t\t\t<Task key={task.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast={task.priority === tasks.length -1 ? true : false}\n\t\t\t\t\t\t\t\t\t\t \t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.props.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes}\n\t\t\t\t\t\t\t\t\t\t\t\t\tepics={this.props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nconst TaskList = (props) => {\n  \tconst doneOnly = props.tasks.filter(task => task.status === 'Done');\n \t\tconst inProgressOnly = props.tasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n\n\t\treturn  <React.Fragment>\n\t\t\t\t\t\t<TasksColumn tasks={toDoOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TasksColumn tasks={inProgressOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TasksColumn tasks={doneOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</React.Fragment>\t\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto mb-4'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nconst CreateTimebox = () => {\n\tconst createTimebox = () => {\n\t\taxios.post('/create_timebox')\n\t}\n\treturn <button onClick={createTimebox}>Create Timebox</button>\n}\n\nclass App extends React.Component {\n\t\tstate = {data_received:false}\n\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n  \tchangePriority = async (task_id, direction) => {\n  \t\tawait axios.post('/update_priority', {\n  \t\t\ttask_id: task_id,\n  \t\t\tpriority: direction\n  \t\t})\n  \t\tthis.getTasks()\n  \t}\n\n  \tfilterByStatus = async (status) => {\n  \t\t\tif (status === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === status);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\t\t\n  \t}\n\n  \tfilterByEpic = async (epic) => {\n  \t\t\tif (epic === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n  \t}\n\n  \tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`);\n    await this.setState({ tasks: resp.data['tasks'], themes:resp.data['themes'], epics: resp.data['epics'], timeboxes: resp.data['timeboxes'] });\n  };\n\n  \tupdateStatus = (id, new_status) => {\n  \t\tconst obj = this.state.tasks.find(o => o.id === id);\n  \t\tobj.status = new_status\n  \t\tconst all_tasks = this.state.tasks.filter(task => task !== obj)\n  \t\tthis.setState(prevState => ({\n    \ttasks: [...all_tasks, obj],\n    \t}));\n  \t}\n\n  \tconvertToEpic = ( task_id) => {\n  \t\taxios.post('/convert_to_epic', {\n  \t\t\ttask_id: task_id\n  \t\t})\n  \t\tthis.getTasks()\n  \t}\n\n   \tasync componentDidMount() {\n    \tawait this.getTasks();\n    \tthis.setState({data_received: true})\n    }\n\n\trender() {\n\t\treturn this.state.data_received === true ? (\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<SideMenu filterByStatus={this.filterByStatus} themes={this.state.themes}/>\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t<EpicColumn filterByEpic={this.filterByEpic} epics={this.state.epics} />\n\t\t\t\t\t\t\t<TaskList tasks={this.state.tasks} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.state.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={this.state.epics}\n\t\t\t\t\t\t\t\t\t\t\t\ttimeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CreateTimebox />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t </div> )\n\t\t\t\t\t: <div></div>\n\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}