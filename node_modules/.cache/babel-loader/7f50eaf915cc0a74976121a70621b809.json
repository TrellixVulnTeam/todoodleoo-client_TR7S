{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddTheme extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.addTheme = async event => {\n      await axios.post('/add_theme', {\n        title: this.state.title\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-theme-form\",\n      onSubmit: this.addTheme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control form-control-sm m-2\",\n          type: \"text\",\n          value: this.state.title,\n          onChange: event => this.setState({\n            title: event.target.value\n          }),\n          placeholder: \"Add New theme\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Theme extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme-button\",\n      onClick: () => this.props.filterByStatus(this.props.themeTitle),\n      style: {\n        backgroundColor: this.props.color\n      },\n      children: this.props.themeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass ThemeRow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      themes: this.props.themes\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.state.themes !== [] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [this.state.themes.map(theme => /*#__PURE__*/_jsxDEV(Theme, {\n          themeTitle: theme.title,\n          color: theme.color,\n          filterByStatus: this.props.filterByStatus\n        }, theme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(AddTheme, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TasksColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [...this.props.tasks]\n    };\n\n    this.changePriority = async (task_id, priority) => {\n      const resp = await axios.post('/update_priority', {\n        task_id: task_id,\n        priority: priority\n      });\n      await this.setState({\n        tasks: resp.data['tasks']\n      });\n    };\n  }\n\n  render() {\n    const tasks = [...this.state.tasks].sort((a, b) => a.priority > b.priority ? 1 : -1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 mx-auto w-100\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n            last: task.priority === tasks.length - 1 ? true : false,\n            updateStatus: this.props.updateStatus,\n            changePriority: this.changePriority,\n            themes: this.props.themes,\n            ...task\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allTasks: this.props.tasks,\n      taskSplittingComplete: false\n    };\n\n    this.splitTasksByStatus = () => {\n      const doneOnly = this.state.allTasks.filter(task => task.status === 'Done');\n      const inProgressOnly = this.state.allTasks.filter(task => task.status === 'In Progress');\n      const toDoOnly = this.state.allTasks.filter(task => task.status === 'To Do');\n      this.setState({\n        doneTasks: doneOnly\n      });\n      this.setState({\n        inProgressTasks: inProgressOnly\n      });\n      this.setState({\n        toDoTasks: toDoOnly\n      });\n      this.setState({\n        taskSplittingComplete: true\n      });\n    };\n\n    this.updateTaskSplits = new_status => {\n      this.props.updateStatus(new_status);\n      console.log('running task splits');\n      console.log(this.state);\n      this.setState({\n        allTasks: this.props.tasks\n      });\n      const doneOnly = this.state.allTasks.filter(task => task.status === 'Done');\n      const inProgressOnly = this.state.allTasks.filter(task => task.status === 'In Progress');\n      const toDoOnly = this.state.allTasks.filter(task => task.status === 'To Do');\n      this.setState({\n        doneTasks: doneOnly\n      });\n      this.setState({\n        inProgressTasks: inProgressOnly\n      });\n      this.setState({\n        toDoTasks: toDoOnly\n      });\n      this.setState({\n        taskSplittingComplete: true\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.splitTasksByStatus();\n  }\n  /*componentDidUpdate(previousProps, previousState) {\n    if (previousProps.data !== this.props.data) {\n        this.splitTasksByStatus()\n    }\n  }*/\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: this.state.taskSplittingComplete === true ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TasksColumn, {\n          tasks: this.state.toDoTasks,\n          updateStatus: this.updateTaskSplits,\n          themes: this.state.themes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n          tasks: this.state.inProgressTasks,\n          updateStatus: this.props.updateStatus,\n          themes: this.state.themes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n          tasks: this.state.doneTasks,\n          updateStatus: this.props.updateStatus,\n          themes: this.state.themes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto mb-4\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      themes: [],\n      data_received: false\n    };\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n\n    this.filterByStatus = status => {\n      const filteredTasks = this.state.tasks.map(task => task.theme === status);\n      this.setState({\n        tasks: filteredTasks\n      });\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`);\n      await this.setState({\n        tasks: resp.data['tasks'],\n        themes: resp.data['themes']\n      });\n      this.setState({\n        data_received: true\n      });\n    };\n\n    this.updateStatus = (id, status) => {\n      let all_tasks = this.state.tasks;\n      const obj = all_tasks.find(o => o.id === id);\n      all_tasks.filter(task => task !== obj);\n      this.setState({\n        tasks: [...all_tasks]\n      });\n      obj['status'] = status;\n      this.setState({\n        tasks: [...all_tasks, obj]\n      });\n      console.log('status updated');\n    };\n  }\n\n  componentDidMount() {\n    this.getTasks();\n  }\n\n  render() {\n    return this.state.data_received === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ThemeRow, {\n        filterByStatus: this.filterByStatus,\n        themes: this.state.themes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: this.state.tasks,\n        themes: this.state.themes,\n        updateStatus: this.updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","axios","Task","AddTheme","Component","state","title","addTheme","event","post","render","setState","target","value","Theme","props","filterByStatus","themeTitle","backgroundColor","color","ThemeRow","themes","map","theme","id","TasksColumn","tasks","changePriority","task_id","priority","resp","data","sort","a","b","task","length","updateStatus","TaskList","allTasks","taskSplittingComplete","splitTasksByStatus","doneOnly","filter","status","inProgressOnly","toDoOnly","doneTasks","inProgressTasks","toDoTasks","updateTaskSplits","new_status","console","log","componentDidMount","CreateTaskForm","handleSubmit","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","Header","App","data_received","addNewTask","taskData","prevState","filteredTasks","getTasks","get","all_tasks","obj","find","o"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport './App.css';\nimport Task from './task.js'\n\nclass AddTheme extends React.Component {\n\tstate = {title: ''}\n\n\taddTheme = async (event) => {\n\t\tawait axios.post('/add_theme', {\n\t\t  title: this.state.title\n\t\t});\n\t}\n\n\trender() {\n\t\treturn <form className='add-theme-form' onSubmit={this.addTheme}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-sm m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"Add New theme\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t\t\t </form>\n\t}\n}\n\nclass Theme extends React.Component {\n\trender() {\n\t\treturn <div className='theme-button' onClick = {() => this.props.filterByStatus(this.props.themeTitle)} style={{backgroundColor: this.props.color}}>{this.props.themeTitle}</div>\n\t}\n}\n\nclass ThemeRow extends React.Component {\n\tstate = {themes : this.props.themes};\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t\t\t{this.state.themes !== [] ?  (\n\t\t\t\t\t\t\t\t <div className='col-12'>\n\t\t\t\t\t\t\t\t\t{this.state.themes.map(theme => \n\t\t\t\t\t\t\t\t\t\t<Theme key={theme.id} themeTitle={theme.title} color={theme.color} filterByStatus={this.props.filterByStatus}/>)}\n\t\t\t\t\t\t\t\t\t\t<AddTheme />\n\t\t\t\t\t\t\t\t </div> )\n\t\t\t\t\t\t\t\t: <div></div> }\t\t\t\t\t\t \t\n\t\t\t\t\t </div>\n\n\t}\n\t\t\t\t\t\n}\n\nclass TasksColumn extends React.Component {\n\tstate = {tasks : [...this.props.tasks]};\n\n\tchangePriority = async (task_id, priority) => {\n\t\tconst resp = await axios.post('/update_priority', {\n\t\t\ttask_id: task_id,\n\t\t\tpriority: priority\n\t\t\t});\n\t\t\tawait this.setState({tasks: resp.data['tasks']})\n\t\t}\t\n\n\trender() {\n\t\tconst tasks = [...this.state.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n\t\treturn <div className='col-4'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100'>\n\t\t\t\t\t\t\t\t\t{tasks.map(task => \n\t\t\t\t\t\t\t\t\t\t<Task key={task.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlast={task.priority === tasks.length -1 ? true : false}\n\t\t\t\t\t\t\t\t\t\t \t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nclass TaskList extends React.Component {\n\tstate = {allTasks: this.props.tasks, taskSplittingComplete: false};\n\n  splitTasksByStatus = () => {\n  \tconst doneOnly = this.state.allTasks.filter(task => task.status === 'Done');\n  \tconst inProgressOnly = this.state.allTasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = this.state.allTasks.filter(task => task.status === 'To Do');\n\n  \tthis.setState({ doneTasks: doneOnly });\n  \tthis.setState({ inProgressTasks: inProgressOnly });\n  \tthis.setState({ toDoTasks: toDoOnly})\n  \tthis.setState({ taskSplittingComplete: true})\n  }\t\n\n  updateTaskSplits = (new_status) => {\n  \tthis.props.updateStatus(new_status)\n  \tconsole.log('running task splits')\n  \tconsole.log(this.state)\n  \tthis.setState({allTasks: this.props.tasks})\n  \tconst doneOnly = this.state.allTasks.filter(task => task.status === 'Done');\n  \tconst inProgressOnly = this.state.allTasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = this.state.allTasks.filter(task => task.status === 'To Do');\n\n  \tthis.setState({ doneTasks: doneOnly });\n  \tthis.setState({ inProgressTasks: inProgressOnly });\n  \tthis.setState({ toDoTasks: toDoOnly})\n  \tthis.setState({ taskSplittingComplete: true})\n  }\n  \n  async componentDidMount() {\n    \tawait this.splitTasksByStatus()\n\n    }\n\n  /*componentDidUpdate(previousProps, previousState) {\n    if (previousProps.data !== this.props.data) {\n        this.splitTasksByStatus()\n    }\n}*/\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t{ this.state.taskSplittingComplete === true ? (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<TasksColumn tasks={this.state.toDoTasks}  updateStatus={this.updateTaskSplits} themes={this.state.themes}/>\n\t\t\t\t\t\t<TasksColumn tasks={this.state.inProgressTasks}  updateStatus={this.props.updateStatus} themes={this.state.themes}/>\n\t\t\t\t\t\t<TasksColumn tasks={this.state.doneTasks}  updateStatus={this.props.updateStatus} themes={this.state.themes}/>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t}\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto mb-4'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass App extends React.Component {\n\t\tstate = {tasks: [], themes: [], data_received:false}\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n  \tfilterByStatus = (status) => {\n\t  \t\tconst filteredTasks = this.state.tasks.map(task => task.theme === status);\n\t  \t\tthis.setState({tasks: filteredTasks})\n  \t}\n\n  \tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`);\n    await this.setState({ tasks: resp.data['tasks'], themes:resp.data['themes'] });\n    this.setState({data_received: true})\n  };\n\n  \tupdateStatus = (id, status) => {\n  \t\tlet all_tasks = this.state.tasks\n\t\t\tconst obj = all_tasks.find(o => o.id === id);\n\t\t\tall_tasks.filter(task => task !== obj);\n\t\t\tthis.setState({tasks: [...all_tasks]})\n\t\t\tobj['status'] = status\n\t\t\tthis.setState({tasks: [...all_tasks, obj]})\n\t\t\tconsole.log('status updated')\n\t\t}\n\n   \tcomponentDidMount() {\n    \tthis.getTasks();\n    }\n\n\trender() {\n\t\treturn this.state.data_received === true ? (\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<ThemeRow filterByStatus={this.filterByStatus} themes={this.state.themes}/>\n\t\t\t\t\t\t<TaskList tasks={this.state.tasks} themes={this.state.themes} updateStatus={this.updateStatus}/>\n\t\t\t\t\t </div> )\n\t\t\t\t\t: <div></div>\n\t\t\t\t\t\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}