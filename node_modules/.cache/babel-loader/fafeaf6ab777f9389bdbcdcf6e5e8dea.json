{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport logo from \"./logo.svg\";\nimport './App.css';\n/*\n\nconst CardList = (props) => (\n\t<div>\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\n\t</div>\n);\n\nclass Card extends React.Component {\n\trender() {\n  \tconst profile = this.props;\n  \treturn (\n    \t<div className=\"github-profile\">\n    \t  <img src={profile.avatar_url} />\n        <div className=\"info\">\n          <div className=\"name\">{profile.name}</div>\n          <div className=\"company\">{profile.company}</div>\n        </div>\n    \t</div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n\tstate = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n    \t  <input \n          type=\"text\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"GitHub username\" \n          required \n        />\n        <button>Add card</button>\n    \t</form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  };\n  addNewProfile = (profileData) => {\n  \tthis.setState(prevState => ({\n    \tprofiles: [...prevState.profiles, profileData],\n    }));\n  };\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div className=\"header\">{this.props.title}</div>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n    \t</div>\n    );\n  }\t\n}\n\nReactDOM.render(\n\t<App title=\"The GitHub Cards App\" />,\n  mountNode,\n);\n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: props.styling,\n    onClick: props.action,\n    children: props.body\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Button;\n\nclass Task extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: this.props.id,\n      title: this.props.title,\n      status: this.props.status\n    };\n\n    this.markAsDone = () => {\n      this.props.updateStatus(this.state.id, 'Done');\n      this.setState({\n        status: 'Done'\n      });\n      axios.post('/edit_task_status', {\n        id: this.state.id,\n        status: 'Done'\n      });\n    };\n\n    this.markAsInProgress = () => {\n      this.props.updateStatus(this.state.id, 'In Progress');\n      this.setState({\n        status: 'In Progress'\n      });\n      axios.post('/edit_task_status', {\n        id: this.state.id,\n        status: 'In Progress'\n      });\n    };\n\n    this.reopen = () => {\n      this.props.updateStatus(this.state.id, 'To Do');\n      this.setState({\n        status: 'To Do'\n      });\n      axios.post('/edit_task_status', {\n        id: this.state.id,\n        status: 'To Do'\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card m-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: [this.state.title, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status badge bg-secondary mx-3\",\n            children: this.state.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), this.state.status == 'To Do' ? /*#__PURE__*/_jsxDEV(Button, {\n          action: this.markAsInProgress,\n          body: \"Start Work\",\n          styling: \"btn btn-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 10\n        }, this) : this.state.status == 'In Progress' ? /*#__PURE__*/_jsxDEV(Button, {\n          action: this.markAsDone,\n          body: \"Mark as Done\",\n          styling: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 10\n        }, this) : this.state.status == 'Done' ? /*#__PURE__*/_jsxDEV(Button, {\n          action: this.reopen,\n          body: \"Reopen\",\n          styling: \"btn btn-secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 10\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass TaskList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n\n    this.updateStatus = (id, status) => {\n      const obj = this.state.tasks.find(o => o.id === id);\n      obj['status'] = status;\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`);\n      this.setState({\n        tasks: resp.data['tasks']\n      });\n    };\n\n    this.doneTasks = tasks => {\n      const doneOnly = tasks.filter(task => task.status === 'Done');\n      return doneOnly;\n    };\n  }\n\n  async componentDidMount() {\n    this.getTasks();\n  }\n\n  render() {\n    const doneTasks = this.doneTasks(this.state.tasks);\n    console.log(doneTasks);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto\",\n        children: doneTasks.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n          updateStatus: this.updateStatus,\n          ...task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      const response = await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      const task = await response.json();\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","useState","useEffect","axios","Header","Component","render","Button","props","styling","action","body","Task","state","id","title","status","markAsDone","updateStatus","setState","post","markAsInProgress","reopen","TaskList","tasks","obj","find","o","getTasks","resp","get","data","doneTasks","doneOnly","filter","task","componentDidMount","console","log","map","CreateTaskForm","handleSubmit","event","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","JSON","stringify","json","target","value","App","addNewTask","taskData","prevState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\n\n/*\n\nconst CardList = (props) => (\n\t<div>\n  \t{props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\n\t</div>\n);\n\nclass Card extends React.Component {\n\trender() {\n  \tconst profile = this.props;\n  \treturn (\n    \t<div className=\"github-profile\">\n    \t  <img src={profile.avatar_url} />\n        <div className=\"info\">\n          <div className=\"name\">{profile.name}</div>\n          <div className=\"company\">{profile.company}</div>\n        </div>\n    \t</div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n\tstate = { userName: '' };\n\thandleSubmit = async (event) => {\n  \tevent.preventDefault();\n    const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\n    this.props.onSubmit(resp.data);\n    this.setState({ userName: '' });\n  };\n\trender() {\n  \treturn (\n    \t<form onSubmit={this.handleSubmit}>\n    \t  <input \n          type=\"text\" \n          value={this.state.userName}\n          onChange={event => this.setState({ userName: event.target.value })}\n          placeholder=\"GitHub username\" \n          required \n        />\n        <button>Add card</button>\n    \t</form>\n    );\n  }\n}\n\nclass App extends React.Component {\n  state = {\n    profiles: [],\n  };\n  addNewProfile = (profileData) => {\n  \tthis.setState(prevState => ({\n    \tprofiles: [...prevState.profiles, profileData],\n    }));\n  };\n\trender() {\n  \treturn (\n    \t<div>\n    \t  <div className=\"header\">{this.props.title}</div>\n        <Form onSubmit={this.addNewProfile} />\n        <CardList profiles={this.state.profiles} />\n    \t</div>\n    );\n  }\t\n}\n\nReactDOM.render(\n\t<App title=\"The GitHub Cards App\" />,\n  mountNode,\n);\n\n*/\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nconst Button = (props) => {\n\treturn \t<button className={props.styling} onClick={props.action}>{props.body}</button>\n\n}\n\n\nclass Task extends React.Component {\n\tstate = {id: this.props.id, title: this.props.title, status:this.props.status}\n\tmarkAsDone = () => {\n\t\tthis.props.updateStatus(this.state.id, 'Done')\n    this.setState({status: 'Done'})\n\t\taxios.post('/edit_task_status', {\n\t\t  id: this.state.id,\n\t\t  status: 'Done'\n\t\t});\n\t}\n\n\tmarkAsInProgress = () => {\n\t\tthis.props.updateStatus(this.state.id, 'In Progress')\n    this.setState({status: 'In Progress'})\n\t\taxios.post('/edit_task_status', {\n\t\t  id: this.state.id,\n\t\t  status: 'In Progress'\n\t\t});\n\t}\n\n\treopen = () => {\n\t\tthis.props.updateStatus(this.state.id, 'To Do')\n    this.setState({status: 'To Do'})\n\t\taxios.post('/edit_task_status', {\n\t\t  id: this.state.id,\n\t\t  status: 'To Do'\n\t\t});\n\t}\n\n\trender() {\n\t\treturn <div className='card m-2'>\n\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t<div className='card-title'>\n\t\t\t\t\t\t\t\t\t{this.state.title}\n\t\t\t\t\t\t\t\t\t<span className='status badge bg-secondary mx-3'>{this.state.status}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{ this.state.status == 'To Do' ? (\n\t\t\t\t\t\t\t\t\t<Button action={this.markAsInProgress} body='Start Work' styling='btn btn-success' />\n\t\t\t\t\t\t\t\t\t) : this.state.status == 'In Progress' ? (\n\t\t\t\t\t\t\t\t\t<Button action={this.markAsDone} body='Mark as Done' styling='btn btn-primary'/>\n\t\t\t\t\t\t\t\t\t) : this.state.status == 'Done' ? (\n\t\t\t\t\t\t\t\t\t<Button action={this.reopen} body='Reopen' styling='btn btn-secondary'/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: (\n\t\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t\t\t)\n\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nclass TaskList extends React.Component {\n\tstate = {tasks : []};\n\n\tupdateStatus = (id, status) => {\n\t\tconst obj = this.state.tasks.find(o => o.id === id);\n\t\tobj['status'] = status\n\t}\n\n\tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`);\n    this.setState({ tasks: resp.data['tasks'] });\n  };\n\n  doneTasks = (tasks) => {\n  \tconst doneOnly = tasks.filter(task => task.status === 'Done'); \n  \treturn doneOnly\n  }\n  \n\n  async componentDidMount() {\n    \tthis.getTasks();\n    }\n\n\trender() {\n\t\tconst doneTasks = this.doneTasks(this.state.tasks)\n\t\tconsole.log(doneTasks)\n\t\treturn <div className='row mt-2'>\n\t\t\t\t\t\t<div className='col-6 mx-auto'>\n\t\t\t\t\t\t\t{doneTasks.tasks.map(task => \n\t\t\t\t\t\t\t\t<Task key={task.id} \n\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t/>)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t </div>\n\t}\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    const response = await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    const task = await response.json();\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass App extends React.Component {\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n\trender() {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<TaskList />\n\t\t\t\t\t </div>\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}