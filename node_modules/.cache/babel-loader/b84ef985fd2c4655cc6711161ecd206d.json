{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/Planning/Planning.js\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport 'bootstrap';\nimport axios from 'axios';\nimport './planning.css';\nimport Themes from './../Themes/Themes.js';\nimport TasksArea from './../Task/TasksArea.js';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Planning extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addNewTask = taskData => {\n      const newTask = { ...taskData\n      };\n      this.setState(prevState => ({\n        tasks: [newTask, ...this.state.tasks]\n      }));\n    };\n\n    this.addTimebox = timebox => {\n      this.setState(prevState => ({\n        timeboxes: [...this.state.timeboxes, timebox]\n      }));\n    };\n\n    this.addTheme = themeData => {\n      this.setState(prevState => ({\n        themes: [...this.state.themes, themeData]\n      }));\n    };\n\n    this.deleteTask = taskId => {\n      axios.post('/delete_task', {\n        task_id: taskId,\n        project_id: this.state.projectId\n      });\n      const tasks = this.state.tasks.filter(t => t.id !== taskId);\n      this.setState(prevState => ({\n        tasks: tasks\n      }));\n    };\n\n    this.deleteTheme = themeId => {\n      axios.post('/delete_theme', {\n        theme_id: themeId,\n        project_id: this.state.projectId\n      });\n      const themes = this.state.themes.filter(t => t.id !== themeId);\n      this.setState(prevState => ({\n        themes: themes\n      }));\n    };\n\n    this.filterByTheme = async theme => {\n      if (theme === '') {\n        this.getTasks(this.state.projectId);\n      } else {\n        await this.getTasks(this.state.projectId);\n        const filteredTasks = this.state.tasks.filter(task => task.theme === theme);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.getTasks = async projectId => {\n      const resp = await axios.get(`/get_tasks?project_id=${projectId}`);\n      const timeboxes = resp.data['timeboxes'];\n      const themes = resp.data['themes'];\n      this.setState({\n        tasks: resp.data['tasks'],\n        themes: themes,\n        timeboxes: timeboxes\n      });\n    };\n\n    this.checkForInProgressTimeboxes = timeboxes => {\n      timeboxes.forEach(timebox => {\n        if (timebox.status === 'In Progress') {\n          this.setState({\n            timeboxRedirect: timebox.id,\n            ipTimeboxName: timebox.title\n          });\n        }\n\n        this.setState({\n          dataReceived: true\n        });\n      });\n    };\n\n    this.onDragUpdate = result => {//make theme bigger and highlighted so you know what you are dragging it into\n    };\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const taskId = Number(draggableId);\n      const obj = this.state.tasks.find(o => o.id === taskId);\n\n      if (destination.droppableId.slice(0, 5) === 'Theme') {\n        const themeId = Number(destination.droppableId.slice(6, 11));\n        axios.post('/update_task_theme', {\n          project_id: this.state.projectId,\n          task_id: taskId,\n          theme_id: themeId\n        });\n        const themeObj = this.state.themes.find(o => o.id === themeId);\n        obj.theme = themeObj.title;\n        obj.theme_color = themeObj.color;\n      } else {\n        obj.timebox = destination.droppableId;\n        axios.post('/update_task', {\n          project_id: this.state.projectId,\n          task_id: taskId,\n          priority: result.destination.index,\n          timebox: obj.timebox\n        });\n        let listItems = this.state.tasks.filter(t => t.timebox === destination.droppableId);\n        const nonListItems = this.state.tasks.filter(t => t.timebox !== destination.droppableId);\n        console.log(result.draggableId);\n        const reorderedItem = this.state.tasks.find(t => String(t.id) === result.draggableId);\n        listItems.filter(t => t === reorderedItem);\n\n        if (result.destination.droppableId === result.source.droppableId) {\n          listItems.splice(0, 0, reorderedItem);\n        } else {\n          console.log('different list');\n        }\n\n        console.log(reorderedItem);\n        this.setState({\n          tasks: [...listItems, ...nonListItems]\n        });\n      }\n    };\n\n    this.state = {\n      dataReceived: false\n    };\n  }\n\n  async componentDidMount() {\n    const sp = new URLSearchParams(this.props.location.query);\n    const projectId = Number(sp.get(\"projectId\"));\n\n    if (projectId === null || projectId === 0) {\n      this.props.history.push('/');\n    } else {\n      this.setState({\n        projectId: projectId\n      });\n      await this.getTasks(projectId);\n      this.checkForInProgressTimeboxes(this.state.timeboxes);\n    }\n  }\n\n  render() {\n    return this.state.timeboxRedirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/working\",\n        query: {\n          projectId: this.state.projectId,\n          timeboxId: this.state.timeboxRedirect,\n          timeboxName: this.state.ipTimeboxName\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 42\n    }, this) : this.state.dataReceived === true ? /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      onDragUpdate: this.onDragUpdate,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planning-page\",\n        children: [/*#__PURE__*/_jsxDEV(Themes, {\n          themes: this.state.themes,\n          filterByTheme: this.filterByTheme,\n          projectId: this.state.projectId,\n          addTheme: this.addTheme,\n          deleteTheme: this.deleteTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TasksArea, {\n          projectId: this.state.projectId,\n          addTask: this.addNewTask,\n          tasks: this.state.tasks,\n          themes: this.state.themes,\n          allTimeboxes: this.state.timeboxes,\n          deleteTask: this.deleteTask,\n          addTimebox: this.addTimebox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default Planning;","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/Planning/Planning.js"],"names":["React","Redirect","axios","Themes","TasksArea","DragDropContext","Planning","Component","constructor","props","addNewTask","taskData","newTask","setState","prevState","tasks","state","addTimebox","timebox","timeboxes","addTheme","themeData","themes","deleteTask","taskId","post","task_id","project_id","projectId","filter","t","id","deleteTheme","themeId","theme_id","filterByTheme","theme","getTasks","filteredTasks","task","resp","get","data","checkForInProgressTimeboxes","forEach","status","timeboxRedirect","ipTimeboxName","title","dataReceived","onDragUpdate","result","onDragEnd","destination","source","draggableId","droppableId","index","Number","obj","find","o","slice","themeObj","theme_color","color","priority","listItems","nonListItems","console","log","reorderedItem","String","splice","componentDidMount","sp","URLSearchParams","location","query","history","push","render","pathname","timeboxId","timeboxName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport 'bootstrap';\nimport axios from 'axios';\nimport './planning.css';\nimport Themes from './../Themes/Themes.js'\nimport TasksArea from './../Task/TasksArea.js'\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nclass Planning extends React.Component {\n\tconstructor(props) {\n\t    super(props);\n\t    this.state = {\n\t        dataReceived: false\n\t    };\n\t  }\n\n\taddNewTask = (taskData) => {\n\t\tconst newTask = {...taskData}\n\t\tthis.setState(prevState => ({\n    \t\ttasks: [newTask, ...this.state.tasks]\n    \t}));\n  \t};\n\n  \taddTimebox = (timebox) => {\n  \t\tthis.setState(prevState => ({\n    \t\ttimeboxes: [...this.state.timeboxes, timebox]\n    \t}));\n  \t}\n\n  \taddTheme = (themeData) => {\n  \t\tthis.setState(prevState => ({\n    \t\tthemes: [...this.state.themes, themeData],\n    \t\t}));\n  \t}\n\n  \tdeleteTask = (taskId) => {\n  \t\taxios.post('/delete_task', {\n  \t\t\ttask_id: taskId,\n  \t\t\tproject_id: this.state.projectId\n  \t\t})\n  \t\tconst tasks = this.state.tasks.filter(t => t.id !== taskId)\n  \t\tthis.setState(prevState => ({\n\t\t    \ttasks: tasks,\n\t\t    }));\n  \t}\n\n  \tdeleteTheme = (themeId) => {\n  \t\taxios.post('/delete_theme', {\n  \t\t\ttheme_id: themeId,\n  \t\t\tproject_id: this.state.projectId\n  \t\t})\n  \t\tconst themes = this.state.themes.filter(t => t.id !== themeId)\n  \t\tthis.setState(prevState => ({\n\t\t    \tthemes: themes,\n\t\t    }));\n  \t}\n\n  \tfilterByTheme = async (theme) => {\n  \t\t\tif (theme === '') {\n  \t\t\t\tthis.getTasks(this.state.projectId)\n  \t\t\t} else {\n  \t\t\tawait this.getTasks(this.state.projectId)\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === theme);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\t\t\n  \t}\n\n  \tgetTasks = async (projectId) => {\n    const resp = await axios.get(`/get_tasks?project_id=${projectId}`)\n    const timeboxes = resp.data['timeboxes']\n    const themes = resp.data['themes']\n    this.setState({ tasks: resp.data['tasks'], \n    \t\t\t\t\t\t\t\tthemes:themes, \n    \t\t\t\t\t\t\t\ttimeboxes: timeboxes \n    \t\t\t\t\t\t\t});\n  };\n\n  \tcheckForInProgressTimeboxes = (timeboxes) => {\n  \t\ttimeboxes.forEach(timebox => {\n    \tif (timebox.status === 'In Progress') {\n    \t\tthis.setState({timeboxRedirect: timebox.id, ipTimeboxName: timebox.title})\n    \t}\n    \tthis.setState({dataReceived: true})\n    })\n\n  \t}\n\n   \tasync componentDidMount() {\n   \t\tconst sp = new URLSearchParams(this.props.location.query);\n\t\tconst projectId = Number(sp.get(\"projectId\"))\n\t\tif (projectId === null || projectId === 0) {\n\t\t\tthis.props.history.push('/')\n\t\t} else {\n\t\t\tthis.setState({projectId: projectId})\n\t\t\tawait this.getTasks(projectId);\n\t\t\tthis.checkForInProgressTimeboxes(this.state.timeboxes)\n\t\t}\n    \t\n    }\n\n    onDragUpdate = (result) => {\n    \t//make theme bigger and highlighted so you know what you are dragging it into\n    }\n\n    onDragEnd = (result) => {\n  \t\tconst {destination, source, draggableId} = result;\n\n  \t\tif (!destination) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (\n  \t\t\tdestination.droppableId === source.droppableId &&\n  \t\t\tdestination.index === source.index\n  \t\t\t) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tconst taskId = Number(draggableId)\n  \t\tconst obj = this.state.tasks.find(o => o.id === taskId);\n\n  \t\tif (destination.droppableId.slice(0,5) === 'Theme') {\n  \t\t\tconst themeId = Number(destination.droppableId.slice(6,11))\n  \t\t\taxios.post('/update_task_theme', {\n  \t\t\tproject_id: this.state.projectId,\n  \t\t\ttask_id: taskId,\n  \t\t\ttheme_id: themeId\n  \t\t\t})\n\n\t  \t\tconst themeObj = this.state.themes.find(o => o.id === themeId)\n\n\t  \t\tobj.theme = themeObj.title\n\t  \t\tobj.theme_color = themeObj.color\n\n  \t\t} else {\n  \t\t\n\t  \t\tobj.timebox = destination.droppableId\n\t  \t\t\n\t  \t\t  axios.post('/update_task', {\n\t  \t\t\tproject_id: this.state.projectId,\n\t  \t\t\ttask_id: taskId,\n\t  \t\t\tpriority: result.destination.index,\n\t  \t\t\ttimebox: obj.timebox\n\t  \t\t})\n\t  \tlet listItems = this.state.tasks.filter(t => t.timebox === destination.droppableId);\n\t  \tconst nonListItems = this.state.tasks.filter(t => t.timebox !== destination.droppableId);\n\t  \tconsole.log(result.draggableId)\n\t\t\tconst reorderedItem = this.state.tasks.find(t => String(t.id) === result.draggableId);\n\t\t\tlistItems.filter(t => t === reorderedItem)\n\t\t\tif (result.destination.droppableId === result.source.droppableId) {\n\t\t\t\tlistItems.splice(0,0,reorderedItem)\n\t\t\t} else {\n\t\t\t\tconsole.log('different list')\n\t\t\t}\n\t\t\tconsole.log(reorderedItem)\n\t\t\tthis.setState({\n\t    \ttasks: [...listItems, ...nonListItems]\n\t    \t})\n\n\t  \t}\n\n  \t\t\t\t\n  \t}\n\n\trender() {\n\t\treturn   this.state.timeboxRedirect ? (<Redirect\n\t\t\t\t\t\t\t\t\t\t\t\t  to={{\n\t\t\t\t\t\t\t\t\t\t\t\t    pathname: \"/working\",\n\t\t\t\t\t\t\t\t\t\t\t\t    query: {\n\t\t\t\t\t\t\t\t\t\t\t\t    \tprojectId: this.state.projectId, \n\t\t\t\t\t\t\t\t\t\t\t\t    \ttimeboxId: this.state.timeboxRedirect,\n\t\t\t\t\t\t\t\t\t\t\t\t    \ttimeboxName: this.state.ipTimeboxName\n\t\t\t\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t\t\t\t  }}\n\t\t\t\t\t\t\t\t\t\t\t\t/>) : \n\t\t\t\t\t\tthis.state.dataReceived === true ? (\n\t\t\t\t\t\t<DragDropContext\n\t\t\t\t\t\t\tonDragEnd = {this.onDragEnd}\n\t\t\t\t\t\t\tonDragUpdate={this.onDragUpdate}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className='planning-page'>\n\t\t\t\t\t\t\t\t<Themes \n\t\t\t\t\t\t\t\t\tthemes={this.state.themes} \n\t\t\t\t\t\t\t\t\tfilterByTheme={this.filterByTheme} \n\t\t\t\t\t\t\t\t\tprojectId={this.state.projectId}\n\t\t\t\t\t\t\t\t\taddTheme={this.addTheme}\n\t\t\t\t\t\t\t\t\tdeleteTheme={this.deleteTheme}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<TasksArea \n\t\t\t\t\t\t\t\t  projectId={this.state.projectId}\n\t\t\t\t\t\t\t\t  addTask={this.addNewTask}\n\t\t\t\t\t\t\t\t  tasks={this.state.tasks} \n\t\t\t\t\t\t\t\t\tthemes={this.state.themes} \n\t\t\t\t\t\t\t\t\tallTimeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\tdeleteTask={this.deleteTask}\n\t\t\t\t\t\t\t\t\taddTimebox={this.addTimebox}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</DragDropContext> \n\t\t\t\t\t\t)\n\t\t\t\t\t: <div></div>\n\t}\n}\n\n\nexport default Planning;\n"]},"metadata":{},"sourceType":"module"}