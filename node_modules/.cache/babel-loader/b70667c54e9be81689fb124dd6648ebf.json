{"ast":null,"code":"var _jsxFileName = \"/Users/markgray/projects/todoodleoo/src/App.js\";\nimport React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport './App.css';\nimport Task from './task.js';\nimport SideMenu from './sidemenu.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TasksColumn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: []\n    };\n\n    this.handleOnDragEnd = () => {\n      console.log('abc');\n    };\n  }\n\n  render() {\n    const tasks = [...this.props.tasks].sort((a, b) => a.priority > b.priority ? 1 : -1);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-2\",\n        children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: this.handleOnDragEnd,\n          children: /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"tasks\",\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6 mx-auto w-100\",\n              ...provided.droppableProps,\n              ref: provided.innerRef,\n              children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n                last: task.priority === tasks.length - 1 ? true : false,\n                updateStatus: this.props.updateStatus,\n                changePriority: this.props.changePriority,\n                themes: this.props.themes,\n                epics: this.props.epics,\n                all_timeboxes: this.props.all_timeboxes,\n                convertToEpic: this.props.convertToEpic,\n                ...task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 17\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst TaskList = props => {\n  const doneOnly = props.tasks.filter(task => task.status === 'Done');\n  const inProgressOnly = props.tasks.filter(task => task.status === 'In Progress');\n  const toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: toDoOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: inProgressOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(TasksColumn, {\n      tasks: doneOnly,\n      changePriority: props.changePriority,\n      updateStatus: props.updateStatus,\n      themes: props.themes,\n      epics: props.epics,\n      all_timeboxes: props.all_timeboxes,\n      convertToEpic: props.convertToEpic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 11\n  }, this);\n};\n\n_c = TaskList;\n\nclass CreateTaskForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.handleSubmit = async event => {\n      const data = {\n        title: this.state.title\n      };\n      await fetch('/add_task', {\n        method: 'POST',\n        // \n        mode: 'cors',\n        // \n        cache: 'no-cache',\n        // \n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      this.setState({\n        title: ''\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 mx-auto mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control form-control-lg m-2\",\n              type: \"text\",\n              value: this.state.title,\n              onChange: event => this.setState({\n                title: event.target.value\n              }),\n              placeholder: \"What do you need to get done?\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mx-auto mb-4\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass Header extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 header text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Todoodleoo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subtitle\",\n        children: \"Smart to-do list app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data_received: false\n    };\n\n    this.addNewTask = taskData => {\n      this.setState(prevState => ({\n        tasks: [...this.state.tasks, taskData]\n      }));\n    };\n\n    this.changePriority = async (task_id, direction) => {\n      await axios.post('/update_priority', {\n        task_id: task_id,\n        priority: direction\n      });\n      this.getTasks();\n    };\n\n    this.filterByStatus = async status => {\n      if (status === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.theme === status);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.filterByEpic = async epic => {\n      if (epic === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.filterByTimebox = async timebox => {\n      if (timebox === '') {\n        this.getTasks();\n      } else {\n        await this.getTasks();\n        const filteredTasks = this.state.tasks.filter(task => task.timebox === timebox);\n        this.setState({\n          tasks: filteredTasks\n        });\n      }\n    };\n\n    this.getTasks = async () => {\n      const resp = await axios.get(`/get_tasks`);\n      await this.setState({\n        tasks: resp.data['tasks'],\n        themes: resp.data['themes'],\n        epics: resp.data['epics'],\n        timeboxes: resp.data['timeboxes']\n      });\n    };\n\n    this.updateStatus = (id, new_status) => {\n      const obj = this.state.tasks.find(o => o.id === id);\n      obj.status = new_status;\n      const all_tasks = this.state.tasks.filter(task => task !== obj);\n      this.setState(prevState => ({\n        tasks: [...all_tasks, obj]\n      }));\n    };\n\n    this.convertToEpic = task_id => {\n      const task = this.state.tasks.find(o => o.id === task_id);\n      const tasks = this.state.tasks.filter(t => t !== task);\n      this.setState(prevState => ({\n        tasks: tasks\n      }));\n      axios.post('/convert_to_epic', {\n        task_id: task_id\n      }).then(response => {\n        console.log(response);\n        const epic = {\n          id: response['data']['id'],\n          title: response['data']['title'],\n          color: response['data']['color']\n        };\n        this.setState({\n          epics: [...this.state.epics, epic]\n        });\n      }, error => {\n        console.log(error);\n      });\n    };\n  }\n\n  async componentDidMount() {\n    await this.getTasks();\n    this.setState({\n      data_received: true\n    });\n  }\n\n  render() {\n    return this.state.data_received === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        onSubmit: this.addNewTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SideMenu, {\n        epics: this.state.epics,\n        themes: this.state.themes,\n        timeboxes: this.state.timeboxes,\n        filterByStatus: this.filterByStatus,\n        filterByEpic: this.filterByEpic,\n        filterByTimebox: this.filterByTimebox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: this.state.tasks,\n        themes: this.state.themes,\n        epics: this.state.epics,\n        all_timeboxes: this.state.timeboxes,\n        updateStatus: this.updateStatus,\n        changePriority: this.changePriority,\n        convertToEpic: this.convertToEpic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/markgray/projects/todoodleoo/src/App.js"],"names":["React","axios","DragDropContext","Droppable","Task","SideMenu","TasksColumn","Component","state","tasks","handleOnDragEnd","console","log","render","props","sort","a","b","priority","provided","droppableProps","innerRef","map","task","index","length","updateStatus","changePriority","themes","epics","all_timeboxes","convertToEpic","placeholder","TaskList","doneOnly","filter","status","inProgressOnly","toDoOnly","CreateTaskForm","title","handleSubmit","event","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","setState","target","value","Header","App","data_received","addNewTask","taskData","prevState","task_id","direction","post","getTasks","filterByStatus","filteredTasks","theme","filterByEpic","epic","filterByTimebox","timebox","resp","get","timeboxes","id","new_status","obj","find","o","all_tasks","t","then","response","color","error","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap';\nimport axios from 'axios';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport './App.css';\nimport Task from './task.js'\nimport SideMenu from './sidemenu.js'\n\nclass TasksColumn extends React.Component {\n\tstate = {tasks: []}\n\n\thandleOnDragEnd = () => {\n\t\tconsole.log('abc')\n\t}\n\n\trender() {\n\t\tconst tasks = [...this.props.tasks].sort((a,b) => a.priority > b.priority ? 1 : -1)\n\t\treturn <div className='col-3'>\n\t\t\t\t\t\t\t<div className='row mt-2'>\n\t\t\t\t\t\t\t\t<DragDropContext onDragEnd={this.handleOnDragEnd}>\n\t\t\t\t\t\t\t\t\t<Droppable droppableId=\"tasks\">\n\t    \t\t\t\t\t\t\t{(provided) => (\n\t\t\t\t\t\t\t\t\t\t\t<div className='col-6 mx-auto w-100' {...provided.droppableProps} ref={provided.innerRef}>\n\t\t\t\t\t\t\t\t\t\t\t\t{tasks.map((task, index) => \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Task last={task.priority === tasks.length -1 ? true : false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.props.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.props.themes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tepics={this.props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={this.props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...task}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t\t\t\t\t</DragDropContext>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t}\n}\n\nconst TaskList = (props) => {\n  \tconst doneOnly = props.tasks.filter(task => task.status === 'Done');\n \t\tconst inProgressOnly = props.tasks.filter(task => task.status === 'In Progress'); \n  \tconst toDoOnly = props.tasks.filter(task => task.status === 'To Do');\n\n\t\treturn  <React.Fragment>\n\t\t\t\t\t\t\t<TasksColumn tasks={toDoOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TasksColumn tasks={inProgressOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TasksColumn tasks={doneOnly}  \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={props.changePriority} \n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={props.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={props.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={props.all_timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={props.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</React.Fragment>\t\n}\n\nclass CreateTaskForm extends React.Component {\n\tstate = { title: ''};\n\thandleSubmit = async (event) => {\n    const data = {title: this.state.title}\n    await fetch('/add_task', {\n\t    method: 'POST', // \n\t    mode: 'cors', // \n\t    cache: 'no-cache', // \n\t    credentials: 'same-origin', \n\t    headers: {\n\t      'Content-Type': 'application/json'\n\t    },\n\t    redirect: 'follow', \n\t    referrerPolicy: 'no-referrer',\n\t    body: JSON.stringify(data)\n  });\n    this.setState({ title: '' });\n  };\n\trender () {\n\t\treturn <div className='row'>\n\t\t\t\t\t\t<div className='col-6 mx-auto mt-3'>\n\t\t\t\t\t\t <form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t \t<div className='form-group'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName='form-control form-control-lg m-2'\n\t\t\t\t          type=\"text\" \n\t\t\t\t          value={this.state.title}\n\t\t\t\t          onChange={event => this.setState({ title: event.target.value })}\n\t\t\t\t          placeholder=\"What do you need to get done?\" \n\t\t\t\t          required \n\t\t\t\t        />\n\t\t\t\t        </div>\n\t\t\t\t        <div className='col text-center'>\n\t\t\t\t\t\t\t\t\t<button className='btn btn-primary mx-auto mb-4'>Add Task</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t </form>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn <div className='col-12 header text-center'>\n\t\t\t\t\t\t <div className='title'>Todoodleoo</div>\n\t\t\t\t\t\t <div className='subtitle'>Smart to-do list app</div>\n\t\t\t\t\t\t</div>\n\n\t}\n}\n\nclass App extends React.Component {\n\t\tstate = {data_received:false}\n\n\t\taddNewTask = (taskData) => {\n  \tthis.setState(prevState => ({\n    \ttasks: [...this.state.tasks, taskData],\n    }));\n  };\n\n  \tchangePriority = async (task_id, direction) => {\n  \t\tawait axios.post('/update_priority', {\n  \t\t\ttask_id: task_id,\n  \t\t\tpriority: direction\n  \t\t})\n  \t\tthis.getTasks()\n  \t}\n\n  \tfilterByStatus = async (status) => {\n  \t\t\tif (status === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.theme === status);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\t\t\n  \t}\n\n  \tfilterByEpic = async (epic) => {\n  \t\t\tif (epic === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.epic === epic);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n  \t}\n\n  \tfilterByTimebox = async (timebox) => {\n  \t\t\tif (timebox === '') {\n  \t\t\t\tthis.getTasks()\n  \t\t\t} else {\n  \t\t\tawait this.getTasks()\n\t  \t\tconst filteredTasks = this.state.tasks.filter(task => task.timebox === timebox);\n\t  \t\tthis.setState({tasks: filteredTasks});\n\t  \t\t}\n  \t}\n\n  \tgetTasks = async () => {\n    const resp = await axios.get(`/get_tasks`);\n    await this.setState({ tasks: resp.data['tasks'], themes:resp.data['themes'], epics: resp.data['epics'], timeboxes: resp.data['timeboxes'] });\n  };\n\n  \tupdateStatus = (id, new_status) => {\n  \t\tconst obj = this.state.tasks.find(o => o.id === id);\n  \t\tobj.status = new_status\n  \t\tconst all_tasks = this.state.tasks.filter(task => task !== obj)\n  \t\tthis.setState(prevState => ({\n    \ttasks: [...all_tasks, obj],\n    \t}));\n  \t}\n\n  \tconvertToEpic = (task_id) => {\n  \t\tconst task = this.state.tasks.find(o => o.id === task_id);\n  \t\tconst tasks = this.state.tasks.filter( t => t !== task)\n  \t\tthis.setState(prevState => ({\n    \ttasks: tasks,\n    \t}));\n  \t\taxios.post('/convert_to_epic', {\n  \t\t\ttask_id: task_id\n  \t\t}).then((response) => {\n  \t\t\tconsole.log(response)\n\t\t\t  const epic = {id: response['data']['id'], title: response['data']['title'], color: response['data']['color']};\n\t\t\t  this.setState({epics: [...this.state.epics, epic]})\n\t\t\t}, (error) => {\n\t\t\t  console.log(error);\n\t\t\t});\n  \t}\n\n   \tasync componentDidMount() {\n    \tawait this.getTasks();\n    \tthis.setState({data_received: true})\n    }\n\n\trender() {\n\t\treturn this.state.data_received === true ? (\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<CreateTaskForm onSubmit={this.addNewTask}/>\n\t\t\t\t\t\t<SideMenu epics={this.state.epics}\n\t\t\t\t\t\t\t\t\t\t\tthemes={this.state.themes}\n\t\t\t\t\t\t\t\t\t\t\ttimeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\t\t\tfilterByStatus={this.filterByStatus} \n\t\t\t\t\t\t\t\t\t\t\tfilterByEpic={this.filterByEpic}\n\t\t\t\t\t\t\t\t\t\t\tfilterByTimebox={this.filterByTimebox}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TaskList tasks={this.state.tasks} \n\t\t\t\t\t\t\t\t\t\t\t\tthemes={this.state.themes} \n\t\t\t\t\t\t\t\t\t\t\t\tepics={this.state.epics}\n\t\t\t\t\t\t\t\t\t\t\t\tall_timeboxes={this.state.timeboxes}\n\t\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.updateStatus} \n\t\t\t\t\t\t\t\t\t\t\t\tchangePriority={this.changePriority}\n\t\t\t\t\t\t\t\t\t\t\t\tconvertToEpic={this.convertToEpic}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t </div> )\n\t\t\t\t\t: <div></div>\n\n\t}\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}